import comp from "/Users/carson/Desktop/work/cms/src/.vuepress/.temp/pages/code/language/js/es6/symbol.html.vue"
const data = JSON.parse("{\"path\":\"/code/language/js/es6/symbol.html\",\"title\":\"Symbol\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"symbol\",\"author\":\"阮一峰\",\"date\":\"2019-10-21T00:00:00.000Z\",\"category\":\"JavaScript\",\"copyright\":\"此部分博客采用 <a href=\\\"http://creativecommons.org/licenses/by-nc/4.0/\\\" rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\">“保持署名—非商用”创意共享4.0许可证</a>\",\"description\":\"Symbol 概述 ES5 的对象属性名都是字符串，这容易造成属性名的冲突。比如，您使用了一个他人提供的对象，但又想为这个对象添加新的方法(mixin 模式)，新方法的名字就有可能与现有方法产生冲突。如果有一种机制，保证每个属性的名字都是独一无二的就好了，这样就从根本上防止属性名的冲突。这就是 ES6 引入 Symbol 的原因。 ES6 引入了一种新...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-duan.github.io/code/language/js/es6/symbol.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Mister.Duan\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Symbol\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Symbol 概述 ES5 的对象属性名都是字符串，这容易造成属性名的冲突。比如，您使用了一个他人提供的对象，但又想为这个对象添加新的方法(mixin 模式)，新方法的名字就有可能与现有方法产生冲突。如果有一种机制，保证每个属性的名字都是独一无二的就好了，这样就从根本上防止属性名的冲突。这就是 ES6 引入 Symbol 的原因。 ES6 引入了一种新...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"阮一峰\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2019-10-21T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Symbol\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2019-10-21T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"阮一峰\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"概述\",\"slug\":\"概述\",\"link\":\"#概述\",\"children\":[]},{\"level\":2,\"title\":\"作为属性名的 Symbol\",\"slug\":\"作为属性名的-symbol\",\"link\":\"#作为属性名的-symbol\",\"children\":[]},{\"level\":2,\"title\":\"实例: 消除魔术字符串\",\"slug\":\"实例-消除魔术字符串\",\"link\":\"#实例-消除魔术字符串\",\"children\":[]},{\"level\":2,\"title\":\"属性名的遍历\",\"slug\":\"属性名的遍历\",\"link\":\"#属性名的遍历\",\"children\":[]},{\"level\":2,\"title\":\"Symbol.for()，Symbol.keyFor()\",\"slug\":\"symbol-for-symbol-keyfor\",\"link\":\"#symbol-for-symbol-keyfor\",\"children\":[]},{\"level\":2,\"title\":\"实例: 模块的 Singleton 模式\",\"slug\":\"实例-模块的-singleton-模式\",\"link\":\"#实例-模块的-singleton-模式\",\"children\":[]},{\"level\":2,\"title\":\"内置的 Symbol 值\",\"slug\":\"内置的-symbol-值\",\"link\":\"#内置的-symbol-值\",\"children\":[{\"level\":3,\"title\":\"Symbol.hasInstance\",\"slug\":\"symbol-hasinstance\",\"link\":\"#symbol-hasinstance\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.isConcatSpreadable\",\"slug\":\"symbol-isconcatspreadable\",\"link\":\"#symbol-isconcatspreadable\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.species\",\"slug\":\"symbol-species\",\"link\":\"#symbol-species\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.match\",\"slug\":\"symbol-match\",\"link\":\"#symbol-match\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.replace\",\"slug\":\"symbol-replace\",\"link\":\"#symbol-replace\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.search\",\"slug\":\"symbol-search\",\"link\":\"#symbol-search\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.split\",\"slug\":\"symbol-split\",\"link\":\"#symbol-split\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.iterator\",\"slug\":\"symbol-iterator\",\"link\":\"#symbol-iterator\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.toPrimitive\",\"slug\":\"symbol-toprimitive\",\"link\":\"#symbol-toprimitive\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.toStringTag\",\"slug\":\"symbol-tostringtag\",\"link\":\"#symbol-tostringtag\",\"children\":[]},{\"level\":3,\"title\":\"Symbol.unscopables\",\"slug\":\"symbol-unscopables\",\"link\":\"#symbol-unscopables\",\"children\":[]}]}],\"readingTime\":{\"minutes\":16.82,\"words\":5046},\"filePathRelative\":\"code/language/js/es6/symbol.md\",\"localizedDate\":\"2019年10月21日\",\"excerpt\":\"\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
