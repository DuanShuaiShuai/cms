import comp from "/Users/carson/Desktop/Mister-Hope.github.io-main/src/.vuepress/.temp/pages/code/language/typescript/advanced/class.html.vue"
const data = JSON.parse("{\"path\":\"/code/language/typescript/advanced/class.html\",\"title\":\"类\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2020-05-04T00:00:00.000Z\",\"title\":\"类\",\"icon\":\"class\",\"category\":\"TypeScript\",\"description\":\"传统方法中，JavaScript 通过构造函数实现类的概念，通过原型链实现继承。而在 ES6 中，我们终于迎来了 class。 TypeScript 除了实现了所有 ES6 中的类的功能以外，还添加了一些新的用法。 这一节主要介绍类的用法，下一节再介绍如何定义类的类型。\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.com/code/language/typescript/advanced/class.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Mr.Hope\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"类\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"传统方法中，JavaScript 通过构造函数实现类的概念，通过原型链实现继承。而在 ES6 中，我们终于迎来了 class。 TypeScript 除了实现了所有 ES6 中的类的功能以外，还添加了一些新的用法。 这一节主要介绍类的用法，下一节再介绍如何定义类的类型。\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2020-05-04T00:00:00.000Z\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"类\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2020-05-04T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Mr.Hope\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"类的概念\",\"slug\":\"类的概念\",\"link\":\"#类的概念\",\"children\":[]},{\"level\":2,\"title\":\"ES6 中类的用法\",\"slug\":\"es6-中类的用法\",\"link\":\"#es6-中类的用法\",\"children\":[{\"level\":3,\"title\":\"属性和方法\",\"slug\":\"属性和方法\",\"link\":\"#属性和方法\",\"children\":[]},{\"level\":3,\"title\":\"类的继承\",\"slug\":\"类的继承\",\"link\":\"#类的继承\",\"children\":[]},{\"level\":3,\"title\":\"存取器\",\"slug\":\"存取器\",\"link\":\"#存取器\",\"children\":[]},{\"level\":3,\"title\":\"静态方法\",\"slug\":\"静态方法\",\"link\":\"#静态方法\",\"children\":[]}]},{\"level\":2,\"title\":\"ES2016 中类的用法\",\"slug\":\"es2016-中类的用法\",\"link\":\"#es2016-中类的用法\",\"children\":[{\"level\":3,\"title\":\"实例属性\",\"slug\":\"实例属性\",\"link\":\"#实例属性\",\"children\":[]},{\"level\":3,\"title\":\"静态属性\",\"slug\":\"静态属性\",\"link\":\"#静态属性\",\"children\":[]}]},{\"level\":2,\"title\":\"TypeScript 中类的用法\",\"slug\":\"typescript-中类的用法\",\"link\":\"#typescript-中类的用法\",\"children\":[{\"level\":3,\"title\":\"public private 和 protected\",\"slug\":\"public-private-和-protected\",\"link\":\"#public-private-和-protected\",\"children\":[]},{\"level\":3,\"title\":\"抽象类\",\"slug\":\"抽象类\",\"link\":\"#抽象类\",\"children\":[]}]},{\"level\":2,\"title\":\"类的类型\",\"slug\":\"类的类型\",\"link\":\"#类的类型\",\"children\":[]},{\"level\":2,\"title\":\"参考\",\"slug\":\"参考\",\"link\":\"#参考\",\"children\":[]}],\"readingTime\":{\"minutes\":6.37,\"words\":1910},\"filePathRelative\":\"code/language/typescript/advanced/class.md\",\"localizedDate\":\"2020年5月4日\",\"excerpt\":\"<p>传统方法中，JavaScript 通过构造函数实现类的概念，通过原型链实现继承。而在 ES6 中，我们终于迎来了 <code>class</code>。</p>\\n<p>TypeScript 除了实现了所有 ES6 中的类的功能以外，还添加了一些新的用法。</p>\\n<p>这一节主要介绍类的用法，下一节再介绍如何定义类的类型。</p>\\n\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
