{"content":"<p>在远程仓库一节中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了 7x24 小时开机并交换大家的修改。</p>\n<p>GitHub 就是一个免费托管代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，不想将源代码提交给任何第三方，这种情况下，就需要搭建 Git 服务器。</p>\n<!-- more -->\n<p>搭建 Git 服务器需要准备一台运行 Linux 的机器，强烈推荐用 Ubuntu 或 Debian，这样，通过几条简单的 <code v-pre>apt</code> 命令就可以完成安装。</p>\n<ul>\n<li>\n<p><strong>Ubuntu</strong> 或 <strong>Debian</strong></p>\n<p>假设您已经有 sudo 权限的用户账号，下面，正式开始安装。</p>\n<ul>\n<li>\n<p>第一步，安装 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>第二步，创建一个 git 用户，用来运行 git 服务:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> adduser</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>第三步，创建证书登录:</p>\n<p>收集所有需要登录的用户的公钥，就是他们自己的 <code v-pre>id_rsa.pub</code> 文件，把所有公钥导入到 <code v-pre>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>\n</li>\n<li>\n<p>第四步，初始化 Git 仓库:</p>\n<p>先选定一个目录作为 Git 仓库，假定是 <code v-pre>/srv/sample.git</code>，在 <code v-pre>/srv</code> 目录下输入命令:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> init</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --bare</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sample.git</span></span></code></pre>\n</div><p>Git 就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的 Git 仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的 Git 仓库通常都以 <code v-pre>.git</code> 结尾。然后，把 owner 改为 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chown</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -R</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sample.git</span></span></code></pre>\n</div></li>\n<li>\n<p>第五步，禁用 shell 登录:</p>\n<p>出于安全考虑，第二步创建的 git 用户不允许登录 shell，这可以通过编辑 <code v-pre>/etc/passwd</code> 文件完成。找到类似下面的一行:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">git:x:1001:1001:,,,:/home/git:/bin/bash</span></span></code></pre>\n</div><p>改为:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span></span></code></pre>\n</div><p>这样，git 用户可以正常通过 ssh 使用 git，但无法登录 shell，因为我们为 git 用户指定的 git-shell 每次一登录就自动退出。</p>\n</li>\n<li>\n<p>第六步，克隆远程仓库:</p>\n<p>现在，可以通过 <code v-pre>git clone</code> 命令克隆远程仓库了，在各自的电脑上运行:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> clone</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git@server:/srv/sample.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Cloning</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> into</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'sample'...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">warning:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> You</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> appear</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> have</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cloned</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> an</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository.</span></span></code></pre>\n</div><p>剩下的推送就简单了。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Centos</strong></p>\n<ol>\n<li>\n<p>安装 Git</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> curl-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> expat-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gettext-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> openssl-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> zlib-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> perl-devel</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div><p>接下来创建一个 git 用户组和用户，用来运行 git 服务:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">groupadd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">useradd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>创建证书登录</p>\n<p>收集所有需要登录的用户的公钥，公钥位于 <code v-pre>id_rsa.pub</code> 文件中，将公钥导入到 <code v-pre>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>\n<p>如果没有该文件创建它:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home/git/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 755</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">touch</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh/authorized_keys</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 644</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh/authorized_keys</span></span></code></pre>\n</div></li>\n<li>\n<p>初始化 Git 仓库</p>\n<p>首先我们选定一个目录作为 Git 仓库，假定是 <code v-pre>/home/gitrepo/test.git</code>，在 <code v-pre>/home/gitrepo</code> 目录下输入命令:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chown</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> init</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --bare</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Initialized</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home/gitrepo/runoob.git/</span></span></code></pre>\n</div><p>以上命令 Git 创建一个空仓库，服务器上的 Git 仓库通常都以 <code v-pre>.git</code> 结尾。然后，把仓库所属用户改为 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chown</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -R</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> runoob.git</span></span></code></pre>\n</div></li>\n<li>\n<p>克隆仓库</p>\n</li>\n</ol>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> clone</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git@192.168.45.4:/home/gitrepo/runoob.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Cloning</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> into</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'runoob'...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">warning:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> You</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> appear</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> have</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cloned</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> an</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Checking</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> connectivity...</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span></span></code></pre>\n</div><p>192.168.45.4 为 Git 所在服务器 ip ，您需要将其修改为您自己的 Git 服务 ip。</p>\n<p>这样我们的 Git 服务器安装就完成。</p>\n</li>\n</ul>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/software/git/server.md","filePathRelative":"software/git/server.md","frontmatter":{"date":"2020-05-05T00:00:00.000Z","title":"服务器搭建","icon":"network","order":16,"category":"Git","tag":["Git","软件"]},"sfcBlocks":{"template":{"type":"template","content":"<template><p>在远程仓库一节中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了 7x24 小时开机并交换大家的修改。</p>\n<p>GitHub 就是一个免费托管代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，不想将源代码提交给任何第三方，这种情况下，就需要搭建 Git 服务器。</p>\n<!-- more -->\n<p>搭建 Git 服务器需要准备一台运行 Linux 的机器，强烈推荐用 Ubuntu 或 Debian，这样，通过几条简单的 <code v-pre>apt</code> 命令就可以完成安装。</p>\n<ul>\n<li>\n<p><strong>Ubuntu</strong> 或 <strong>Debian</strong></p>\n<p>假设您已经有 sudo 权限的用户账号，下面，正式开始安装。</p>\n<ul>\n<li>\n<p>第一步，安装 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>第二步，创建一个 git 用户，用来运行 git 服务:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> adduser</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>第三步，创建证书登录:</p>\n<p>收集所有需要登录的用户的公钥，就是他们自己的 <code v-pre>id_rsa.pub</code> 文件，把所有公钥导入到 <code v-pre>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>\n</li>\n<li>\n<p>第四步，初始化 Git 仓库:</p>\n<p>先选定一个目录作为 Git 仓库，假定是 <code v-pre>/srv/sample.git</code>，在 <code v-pre>/srv</code> 目录下输入命令:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> init</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --bare</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sample.git</span></span></code></pre>\n</div><p>Git 就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的 Git 仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的 Git 仓库通常都以 <code v-pre>.git</code> 结尾。然后，把 owner 改为 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chown</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -R</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sample.git</span></span></code></pre>\n</div></li>\n<li>\n<p>第五步，禁用 shell 登录:</p>\n<p>出于安全考虑，第二步创建的 git 用户不允许登录 shell，这可以通过编辑 <code v-pre>/etc/passwd</code> 文件完成。找到类似下面的一行:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">git:x:1001:1001:,,,:/home/git:/bin/bash</span></span></code></pre>\n</div><p>改为:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span></span></code></pre>\n</div><p>这样，git 用户可以正常通过 ssh 使用 git，但无法登录 shell，因为我们为 git 用户指定的 git-shell 每次一登录就自动退出。</p>\n</li>\n<li>\n<p>第六步，克隆远程仓库:</p>\n<p>现在，可以通过 <code v-pre>git clone</code> 命令克隆远程仓库了，在各自的电脑上运行:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> clone</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git@server:/srv/sample.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Cloning</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> into</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'sample'...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">warning:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> You</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> appear</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> have</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cloned</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> an</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository.</span></span></code></pre>\n</div><p>剩下的推送就简单了。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Centos</strong></p>\n<ol>\n<li>\n<p>安装 Git</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> curl-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> expat-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gettext-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> openssl-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> zlib-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> perl-devel</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div><p>接下来创建一个 git 用户组和用户，用来运行 git 服务:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">groupadd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">useradd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>创建证书登录</p>\n<p>收集所有需要登录的用户的公钥，公钥位于 <code v-pre>id_rsa.pub</code> 文件中，将公钥导入到 <code v-pre>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>\n<p>如果没有该文件创建它:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home/git/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 755</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">touch</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh/authorized_keys</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 644</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh/authorized_keys</span></span></code></pre>\n</div></li>\n<li>\n<p>初始化 Git 仓库</p>\n<p>首先我们选定一个目录作为 Git 仓库，假定是 <code v-pre>/home/gitrepo/test.git</code>，在 <code v-pre>/home/gitrepo</code> 目录下输入命令:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chown</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> init</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --bare</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Initialized</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home/gitrepo/runoob.git/</span></span></code></pre>\n</div><p>以上命令 Git 创建一个空仓库，服务器上的 Git 仓库通常都以 <code v-pre>.git</code> 结尾。然后，把仓库所属用户改为 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chown</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -R</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> runoob.git</span></span></code></pre>\n</div></li>\n<li>\n<p>克隆仓库</p>\n</li>\n</ol>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> clone</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git@192.168.45.4:/home/gitrepo/runoob.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Cloning</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> into</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'runoob'...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">warning:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> You</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> appear</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> have</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cloned</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> an</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Checking</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> connectivity...</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span></span></code></pre>\n</div><p>192.168.45.4 为 Git 所在服务器 ip ，您需要将其修改为您自己的 Git 服务 ip。</p>\n<p>这样我们的 Git 服务器安装就完成。</p>\n</li>\n</ul>\n</template>","contentStripped":"<p>在远程仓库一节中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了 7x24 小时开机并交换大家的修改。</p>\n<p>GitHub 就是一个免费托管代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，不想将源代码提交给任何第三方，这种情况下，就需要搭建 Git 服务器。</p>\n<!-- more -->\n<p>搭建 Git 服务器需要准备一台运行 Linux 的机器，强烈推荐用 Ubuntu 或 Debian，这样，通过几条简单的 <code v-pre>apt</code> 命令就可以完成安装。</p>\n<ul>\n<li>\n<p><strong>Ubuntu</strong> 或 <strong>Debian</strong></p>\n<p>假设您已经有 sudo 权限的用户账号，下面，正式开始安装。</p>\n<ul>\n<li>\n<p>第一步，安装 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> apt-get</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>第二步，创建一个 git 用户，用来运行 git 服务:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> adduser</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>第三步，创建证书登录:</p>\n<p>收集所有需要登录的用户的公钥，就是他们自己的 <code v-pre>id_rsa.pub</code> 文件，把所有公钥导入到 <code v-pre>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>\n</li>\n<li>\n<p>第四步，初始化 Git 仓库:</p>\n<p>先选定一个目录作为 Git 仓库，假定是 <code v-pre>/srv/sample.git</code>，在 <code v-pre>/srv</code> 目录下输入命令:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> init</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --bare</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sample.git</span></span></code></pre>\n</div><p>Git 就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的 Git 仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的 Git 仓库通常都以 <code v-pre>.git</code> 结尾。然后，把 owner 改为 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sudo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chown</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -R</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> sample.git</span></span></code></pre>\n</div></li>\n<li>\n<p>第五步，禁用 shell 登录:</p>\n<p>出于安全考虑，第二步创建的 git 用户不允许登录 shell，这可以通过编辑 <code v-pre>/etc/passwd</code> 文件完成。找到类似下面的一行:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">git:x:1001:1001:,,,:/home/git:/bin/bash</span></span></code></pre>\n</div><p>改为:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span></span></code></pre>\n</div><p>这样，git 用户可以正常通过 ssh 使用 git，但无法登录 shell，因为我们为 git 用户指定的 git-shell 每次一登录就自动退出。</p>\n</li>\n<li>\n<p>第六步，克隆远程仓库:</p>\n<p>现在，可以通过 <code v-pre>git clone</code> 命令克隆远程仓库了，在各自的电脑上运行:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> clone</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git@server:/srv/sample.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Cloning</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> into</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'sample'...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">warning:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> You</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> appear</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> have</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cloned</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> an</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository.</span></span></code></pre>\n</div><p>剩下的推送就简单了。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Centos</strong></p>\n<ol>\n<li>\n<p>安装 Git</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> curl-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> expat-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gettext-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> openssl-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> zlib-devel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> perl-devel</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">yum</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div><p>接下来创建一个 git 用户组和用户，用来运行 git 服务:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">groupadd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">useradd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span></span></code></pre>\n</div></li>\n<li>\n<p>创建证书登录</p>\n<p>收集所有需要登录的用户的公钥，公钥位于 <code v-pre>id_rsa.pub</code> 文件中，将公钥导入到 <code v-pre>/home/git/.ssh/authorized_keys</code> 文件里，一行一个。</p>\n<p>如果没有该文件创建它:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home/git/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 755</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">touch</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh/authorized_keys</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 644</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> .ssh/authorized_keys</span></span></code></pre>\n</div></li>\n<li>\n<p>初始化 Git 仓库</p>\n<p>首先我们选定一个目录作为 Git 仓库，假定是 <code v-pre>/home/gitrepo/test.git</code>，在 <code v-pre>/home/gitrepo</code> 目录下输入命令:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mkdir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> chown</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cd</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> gitrepo</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> init</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --bare</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> test.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Initialized</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> in</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /home/gitrepo/runoob.git/</span></span></code></pre>\n</div><p>以上命令 Git 创建一个空仓库，服务器上的 Git 仓库通常都以 <code v-pre>.git</code> 结尾。然后，把仓库所属用户改为 git:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chown</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -R</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git:git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> runoob.git</span></span></code></pre>\n</div></li>\n<li>\n<p>克隆仓库</p>\n</li>\n</ol>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> clone</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> git@192.168.45.4:/home/gitrepo/runoob.git</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Cloning</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> into</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 'runoob'...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">warning:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> You</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> appear</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> have</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> cloned</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> an</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> empty</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> repository.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Checking</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> connectivity...</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span></span></code></pre>\n</div><p>192.168.45.4 为 Git 所在服务器 ip ，您需要将其修改为您自己的 Git 服务 ip。</p>\n<p>这样我们的 Git 服务器安装就完成。</p>\n</li>\n</ul>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n在远程仓库一节中，我们讲了远程仓库实际上和本地仓库没啥不同，纯粹为了 7x24 小时开机并交换大家的修改。\n\nGitHub 就是一个免费托管代码的远程仓库。但是对于某些视源代码如生命的商业公司来说，不想将源代码提交给任何第三方，这种情况下，就需要搭建 Git 服务器。\n\n<!-- more -->\n\n搭建 Git 服务器需要准备一台运行 Linux 的机器，强烈推荐用 Ubuntu 或 Debian，这样，通过几条简单的 `apt` 命令就可以完成安装。\n\n- **Ubuntu** 或 **Debian**\n\n  假设您已经有 sudo 权限的用户账号，下面，正式开始安装。\n\n  - 第一步，安装 git:\n\n    ```sh\n    sudo apt-get install git\n    ```\n\n  - 第二步，创建一个 git 用户，用来运行 git 服务:\n\n    ```sh\n    sudo adduser git\n    ```\n\n  - 第三步，创建证书登录:\n\n    收集所有需要登录的用户的公钥，就是他们自己的 `id_rsa.pub` 文件，把所有公钥导入到 `/home/git/.ssh/authorized_keys` 文件里，一行一个。\n\n  - 第四步，初始化 Git 仓库:\n\n    先选定一个目录作为 Git 仓库，假定是 `/srv/sample.git`，在 `/srv` 目录下输入命令:\n\n    ```sh\n    sudo git init --bare sample.git\n    ```\n\n    Git 就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的 Git 仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的 Git 仓库通常都以 `.git` 结尾。然后，把 owner 改为 git:\n\n    ```sh\n    sudo chown -R git:git sample.git\n    ```\n\n  - 第五步，禁用 shell 登录:\n\n    出于安全考虑，第二步创建的 git 用户不允许登录 shell，这可以通过编辑 `/etc/passwd` 文件完成。找到类似下面的一行:\n\n    ```md\n    git:x:1001:1001:,,,:/home/git:/bin/bash\n    ```\n\n    改为:\n\n    ```md\n    git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell\n    ```\n\n    这样，git 用户可以正常通过 ssh 使用 git，但无法登录 shell，因为我们为 git 用户指定的 git-shell 每次一登录就自动退出。\n\n  - 第六步，克隆远程仓库:\n\n    现在，可以通过 `git clone` 命令克隆远程仓库了，在各自的电脑上运行:\n\n    ```sh\n    $ git clone git@server:/srv/sample.git\n    Cloning into 'sample'...\n    warning: You appear to have cloned an empty repository.\n    ```\n\n    剩下的推送就简单了。\n\n- **Centos**\n\n  1. 安装 Git\n\n     ```sh\n     yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel\n     yum install git\n     ```\n\n     接下来创建一个 git 用户组和用户，用来运行 git 服务:\n\n     ```sh\n     groupadd git\n     useradd git -g git\n     ```\n\n  1. 创建证书登录\n\n     收集所有需要登录的用户的公钥，公钥位于 `id_rsa.pub` 文件中，将公钥导入到 `/home/git/.ssh/authorized_keys` 文件里，一行一个。\n\n     如果没有该文件创建它:\n\n     ```sh\n     cd /home/git/\n     mkdir .ssh\n     chmod 755 .ssh\n     touch .ssh/authorized_keys\n     chmod 644 .ssh/authorized_keys\n     ```\n\n  1. 初始化 Git 仓库\n\n     首先我们选定一个目录作为 Git 仓库，假定是 `/home/gitrepo/test.git`，在 `/home/gitrepo` 目录下输入命令:\n\n     ```sh\n     $ cd /home\n     $ mkdir gitrepo\n     $ chown git:git gitrepo/\n     $ cd gitrepo\n\n     $ git init --bare test.git\n     Initialized empty Git repository in /home/gitrepo/runoob.git/\n     ```\n\n     以上命令 Git 创建一个空仓库，服务器上的 Git 仓库通常都以 `.git` 结尾。然后，把仓库所属用户改为 git:\n\n     ```sh\n     chown -R git:git runoob.git\n     ```\n\n  1. 克隆仓库\n\n  ```sh\n  $ git clone git@192.168.45.4:/home/gitrepo/runoob.git\n  Cloning into 'runoob'...\n  warning: You appear to have cloned an empty repository.\n  Checking connectivity... done.\n  ```\n\n  192.168.45.4 为 Git 所在服务器 ip ，您需要将其修改为您自己的 Git 服务 ip。\n\n  这样我们的 Git 服务器安装就完成。\n","excerpt":"","title":"","headers":[]}}
