{"content":"<p>这个 Action 允许您缓存依赖项和构建输出内容以缩短 Workflow 执行时间。</p>\n<p>日常最多使用的就是缓存依赖项，在每个工作流程中，将安装后的依赖通过安装后生成的依赖版本文件的哈希值进行缓存。</p>\n<p>当前工作流程的版本文件哈希值与历史缓存中的某一项完全相同时，直接载入这些依赖项缓存，这样就可以免去安装步骤。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">缓存依赖</p>\n<p>关于缓存依赖的文档，详见 <a href=\"https://docs.github.com/cn/actions/guides/caching-dependencies-to-speed-up-workflows\" target=\"_blank\" rel=\"noopener noreferrer\">缓存依赖项以加快工作流程</a>。</p>\n</div>\n<!-- more -->\n<h2 id=\"配置项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#配置项\"><span>配置项</span></a></h2>\n<h3 id=\"path\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#path\"><span>path</span></a></h3>\n<p>要缓存和还原的文件，目录和通配符模式的列表。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>支持的 glob 模式，请参见 <a href=\"https://github.com/actions/toolkit/tree/main/packages/glob\" target=\"_blank\" rel=\"noopener noreferrer\">@actions/glob</a>。</p>\n</div>\n<h3 id=\"key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key\"><span>key</span></a></h3>\n<p>用于保存缓存与还原缓存的的密钥</p>\n<h3 id=\"restore-keys\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#restore-keys\"><span>restore-keys</span></a></h3>\n<p>当 key 没有命中缓存是用于恢复缓存键值的有序列表</p>\n<h2 id=\"输出\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#输出\"><span>输出</span></a></h2>\n<p><code v-pre>cache-hit</code>: 一个布尔值，表明是否找到与该键完全匹配的值</p>\n<h2 id=\"缓存范围\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#缓存范围\"><span>缓存范围</span></a></h2>\n<p>缓存的作用域为特定的键和分支。默认分支缓存可用于其他分支。</p>\n<h2 id=\"案例\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#案例\"><span>案例</span></a></h2>\n<p>Yarn:</p>\n<div class=\"language-yml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">uses</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">actions/cache@v3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  # 使用此 id 获得 `cache-hit`</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  # (`steps.yarn-cache.outputs.cache-hit != 'true'`)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn-cache</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  with</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">node_modules/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    restore-keys</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">|</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      ${{ runner.os }}-yarn-</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">steps.yarn-cache.outputs.cache-hit != 'true'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn install</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"创建一个缓存键\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#创建一个缓存键\"><span>创建一个缓存键</span></a></h2>\n<p>缓存键可以包括 GitHub Actions 支持的任何上下文，函数，文字和运算符。</p>\n<p>例如，使用 <code v-pre>hashFiles</code> 功能可让您在依存关系更改时创建新的缓存。</p>\n<div class=\"language-yml\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">uses</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">actions/cache@v3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn-cache</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  with</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">|</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      node_modules/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}</span></span></code></pre>\n</div><p>利用 cache-hit 输出，当对应键命中特定缓存后，可以跳过后续步骤 (例如，安装或构建) 。</p>\n<div class=\"language-yml\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">steps.yarn-cache.outputs.cache-hit != 'true'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn install</span></span></code></pre>\n</div><h2 id=\"缓存限制\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#缓存限制\"><span>缓存限制</span></a></h2>\n<p>一个存储库最多可以有 5GB 的缓存。达到 5GB 限制后，将根据上次访问缓存的时间驱逐较早的缓存。过去未访问的缓存也将被自动删除。</p>\n<h2 id=\"仓库\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#仓库\"><span>仓库</span></a></h2>\n<p><a href=\"https://github.com/actions/cache\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/actions/cache</a></p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/work/cms/src/code/github/actions/cache.md","filePathRelative":"code/github/actions/cache.md","frontmatter":{"title":"cache","date":"2021-02-20T00:00:00.000Z","category":"GitHub","tag":["action","workflow"]},"sfcBlocks":{"template":{"type":"template","content":"<template><p>这个 Action 允许您缓存依赖项和构建输出内容以缩短 Workflow 执行时间。</p>\n<p>日常最多使用的就是缓存依赖项，在每个工作流程中，将安装后的依赖通过安装后生成的依赖版本文件的哈希值进行缓存。</p>\n<p>当前工作流程的版本文件哈希值与历史缓存中的某一项完全相同时，直接载入这些依赖项缓存，这样就可以免去安装步骤。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">缓存依赖</p>\n<p>关于缓存依赖的文档，详见 <a href=\"https://docs.github.com/cn/actions/guides/caching-dependencies-to-speed-up-workflows\" target=\"_blank\" rel=\"noopener noreferrer\">缓存依赖项以加快工作流程</a>。</p>\n</div>\n<!-- more -->\n<h2 id=\"配置项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#配置项\"><span>配置项</span></a></h2>\n<h3 id=\"path\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#path\"><span>path</span></a></h3>\n<p>要缓存和还原的文件，目录和通配符模式的列表。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>支持的 glob 模式，请参见 <a href=\"https://github.com/actions/toolkit/tree/main/packages/glob\" target=\"_blank\" rel=\"noopener noreferrer\">@actions/glob</a>。</p>\n</div>\n<h3 id=\"key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key\"><span>key</span></a></h3>\n<p>用于保存缓存与还原缓存的的密钥</p>\n<h3 id=\"restore-keys\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#restore-keys\"><span>restore-keys</span></a></h3>\n<p>当 key 没有命中缓存是用于恢复缓存键值的有序列表</p>\n<h2 id=\"输出\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#输出\"><span>输出</span></a></h2>\n<p><code v-pre>cache-hit</code>: 一个布尔值，表明是否找到与该键完全匹配的值</p>\n<h2 id=\"缓存范围\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#缓存范围\"><span>缓存范围</span></a></h2>\n<p>缓存的作用域为特定的键和分支。默认分支缓存可用于其他分支。</p>\n<h2 id=\"案例\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#案例\"><span>案例</span></a></h2>\n<p>Yarn:</p>\n<div class=\"language-yml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">uses</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">actions/cache@v3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  # 使用此 id 获得 `cache-hit`</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  # (`steps.yarn-cache.outputs.cache-hit != 'true'`)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn-cache</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  with</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">node_modules/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    restore-keys</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">|</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      ${{ runner.os }}-yarn-</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">steps.yarn-cache.outputs.cache-hit != 'true'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn install</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"创建一个缓存键\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#创建一个缓存键\"><span>创建一个缓存键</span></a></h2>\n<p>缓存键可以包括 GitHub Actions 支持的任何上下文，函数，文字和运算符。</p>\n<p>例如，使用 <code v-pre>hashFiles</code> 功能可让您在依存关系更改时创建新的缓存。</p>\n<div class=\"language-yml\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">uses</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">actions/cache@v3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn-cache</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  with</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">|</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      node_modules/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}</span></span></code></pre>\n</div><p>利用 cache-hit 输出，当对应键命中特定缓存后，可以跳过后续步骤 (例如，安装或构建) 。</p>\n<div class=\"language-yml\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">steps.yarn-cache.outputs.cache-hit != 'true'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn install</span></span></code></pre>\n</div><h2 id=\"缓存限制\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#缓存限制\"><span>缓存限制</span></a></h2>\n<p>一个存储库最多可以有 5GB 的缓存。达到 5GB 限制后，将根据上次访问缓存的时间驱逐较早的缓存。过去未访问的缓存也将被自动删除。</p>\n<h2 id=\"仓库\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#仓库\"><span>仓库</span></a></h2>\n<p><a href=\"https://github.com/actions/cache\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/actions/cache</a></p>\n</template>","contentStripped":"<p>这个 Action 允许您缓存依赖项和构建输出内容以缩短 Workflow 执行时间。</p>\n<p>日常最多使用的就是缓存依赖项，在每个工作流程中，将安装后的依赖通过安装后生成的依赖版本文件的哈希值进行缓存。</p>\n<p>当前工作流程的版本文件哈希值与历史缓存中的某一项完全相同时，直接载入这些依赖项缓存，这样就可以免去安装步骤。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">缓存依赖</p>\n<p>关于缓存依赖的文档，详见 <a href=\"https://docs.github.com/cn/actions/guides/caching-dependencies-to-speed-up-workflows\" target=\"_blank\" rel=\"noopener noreferrer\">缓存依赖项以加快工作流程</a>。</p>\n</div>\n<!-- more -->\n<h2 id=\"配置项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#配置项\"><span>配置项</span></a></h2>\n<h3 id=\"path\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#path\"><span>path</span></a></h3>\n<p>要缓存和还原的文件，目录和通配符模式的列表。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>支持的 glob 模式，请参见 <a href=\"https://github.com/actions/toolkit/tree/main/packages/glob\" target=\"_blank\" rel=\"noopener noreferrer\">@actions/glob</a>。</p>\n</div>\n<h3 id=\"key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key\"><span>key</span></a></h3>\n<p>用于保存缓存与还原缓存的的密钥</p>\n<h3 id=\"restore-keys\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#restore-keys\"><span>restore-keys</span></a></h3>\n<p>当 key 没有命中缓存是用于恢复缓存键值的有序列表</p>\n<h2 id=\"输出\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#输出\"><span>输出</span></a></h2>\n<p><code v-pre>cache-hit</code>: 一个布尔值，表明是否找到与该键完全匹配的值</p>\n<h2 id=\"缓存范围\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#缓存范围\"><span>缓存范围</span></a></h2>\n<p>缓存的作用域为特定的键和分支。默认分支缓存可用于其他分支。</p>\n<h2 id=\"案例\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#案例\"><span>案例</span></a></h2>\n<p>Yarn:</p>\n<div class=\"language-yml line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">uses</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">actions/cache@v3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  # 使用此 id 获得 `cache-hit`</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  # (`steps.yarn-cache.outputs.cache-hit != 'true'`)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn-cache</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  with</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">node_modules/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    restore-keys</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">|</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      ${{ runner.os }}-yarn-</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">steps.yarn-cache.outputs.cache-hit != 'true'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn install</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"创建一个缓存键\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#创建一个缓存键\"><span>创建一个缓存键</span></a></h2>\n<p>缓存键可以包括 GitHub Actions 支持的任何上下文，函数，文字和运算符。</p>\n<p>例如，使用 <code v-pre>hashFiles</code> 功能可让您在依存关系更改时创建新的缓存。</p>\n<div class=\"language-yml\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">uses</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">actions/cache@v3</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  id</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn-cache</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  with</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    path</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">|</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      node_modules/</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    key</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}</span></span></code></pre>\n</div><p>利用 cache-hit 输出，当对应键命中特定缓存后，可以跳过后续步骤 (例如，安装或构建) 。</p>\n<div class=\"language-yml\" data-highlighter=\"shiki\" data-ext=\"yml\" data-title=\"yml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">- </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">name</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">Install Dependencies</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">steps.yarn-cache.outputs.cache-hit != 'true'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">yarn install</span></span></code></pre>\n</div><h2 id=\"缓存限制\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#缓存限制\"><span>缓存限制</span></a></h2>\n<p>一个存储库最多可以有 5GB 的缓存。达到 5GB 限制后，将根据上次访问缓存的时间驱逐较早的缓存。过去未访问的缓存也将被自动删除。</p>\n<h2 id=\"仓库\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#仓库\"><span>仓库</span></a></h2>\n<p><a href=\"https://github.com/actions/cache\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/actions/cache</a></p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n这个 Action 允许您缓存依赖项和构建输出内容以缩短 Workflow 执行时间。\n\n日常最多使用的就是缓存依赖项，在每个工作流程中，将安装后的依赖通过安装后生成的依赖版本文件的哈希值进行缓存。\n\n当前工作流程的版本文件哈希值与历史缓存中的某一项完全相同时，直接载入这些依赖项缓存，这样就可以免去安装步骤。\n\n::: info 缓存依赖\n\n关于缓存依赖的文档，详见 [缓存依赖项以加快工作流程](https://docs.github.com/cn/actions/guides/caching-dependencies-to-speed-up-workflows)。\n\n:::\n\n<!-- more -->\n\n## 配置项\n\n### path\n\n要缓存和还原的文件，目录和通配符模式的列表。\n\n::: info\n\n支持的 glob 模式，请参见 [@actions/glob](https://github.com/actions/toolkit/tree/main/packages/glob)。\n\n:::\n\n### key\n\n用于保存缓存与还原缓存的的密钥\n\n### restore-keys\n\n当 key 没有命中缓存是用于恢复缓存键值的有序列表\n\n## 输出\n\n`cache-hit`: 一个布尔值，表明是否找到与该键完全匹配的值\n\n## 缓存范围\n\n缓存的作用域为特定的键和分支。默认分支缓存可用于其他分支。\n\n## 案例\n\nYarn:\n\n```yml\n- uses: actions/cache@v3\n  # 使用此 id 获得 `cache-hit`\n  # (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n  id: yarn-cache\n  with:\n    path: node_modules/\n    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n    restore-keys: |\n      ${{ runner.os }}-yarn-\n\n- name: Install Dependencies\n  if: steps.yarn-cache.outputs.cache-hit != 'true'\n  run: yarn install\n```\n\n## 创建一个缓存键\n\n缓存键可以包括 GitHub Actions 支持的任何上下文，函数，文字和运算符。\n\n例如，使用 `hashFiles` 功能可让您在依存关系更改时创建新的缓存。\n\n```yml\n- uses: actions/cache@v3\n  id: yarn-cache\n  with:\n    path: |\n      node_modules/\n    key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}\n```\n\n利用 cache-hit 输出，当对应键命中特定缓存后，可以跳过后续步骤 (例如，安装或构建) 。\n\n```yml\n- name: Install Dependencies\n  if: steps.yarn-cache.outputs.cache-hit != 'true'\n  run: yarn install\n```\n\n## 缓存限制\n\n一个存储库最多可以有 5GB 的缓存。达到 5GB 限制后，将根据上次访问缓存的时间驱逐较早的缓存。过去未访问的缓存也将被自动删除。\n\n## 仓库\n\n<https://github.com/actions/cache>\n","excerpt":"","title":"","headers":[{"level":2,"title":"配置项","slug":"配置项","link":"#配置项","children":[{"level":3,"title":"path","slug":"path","link":"#path","children":[]},{"level":3,"title":"key","slug":"key","link":"#key","children":[]},{"level":3,"title":"restore-keys","slug":"restore-keys","link":"#restore-keys","children":[]}]},{"level":2,"title":"输出","slug":"输出","link":"#输出","children":[]},{"level":2,"title":"缓存范围","slug":"缓存范围","link":"#缓存范围","children":[]},{"level":2,"title":"案例","slug":"案例","link":"#案例","children":[]},{"level":2,"title":"创建一个缓存键","slug":"创建一个缓存键","link":"#创建一个缓存键","children":[]},{"level":2,"title":"缓存限制","slug":"缓存限制","link":"#缓存限制","children":[]},{"level":2,"title":"仓库","slug":"仓库","link":"#仓库","children":[]}]}}
