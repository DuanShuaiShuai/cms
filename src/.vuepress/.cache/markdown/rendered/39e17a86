{"content":"<p>小程序开发框架提供丰富的微信原生 API，可以方便的调起微信提供的能力，如获取用户信息，本地存储，支付功能等。详细介绍请参考 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\" target=\"_blank\" rel=\"noopener noreferrer\">API 文档</a>。 <Badge text=\"重要\" type=\"error\" /></p>\n<!-- more -->\n<p>通常，在小程序 API 有以下几种类型:</p>\n<h2 id=\"事件监听-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#事件监听-api\"><span>事件监听 API</span></a></h2>\n<p>我们约定，以 on 开头的 API 用来监听某个事件是否触发，如: <code v-pre>wx.onSocketOpen</code>, <code v-pre>wx.onCompassChange</code> 等。</p>\n<p>这类 API 接受一个回调函数作为参数，当事件触发时会调用这个回调函数，并将相关数据以参数形式传入。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">onCompassChange</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">direction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"同步-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#同步-api\"><span>同步 API</span></a></h2>\n<p>我们约定，以 <code v-pre>Sync</code> 结尾的 API 都是同步 API， 如 <code v-pre>wx.setStorageSync</code>，<code v-pre>wx.getSystemInfoSync</code> 等。此外，也有一些其他的同步 API，如 <code v-pre>wx.createWorker</code>, <code v-pre>wx.getBackgroundAudioManager</code> 等，详情参见 API 文档中的说明。</p>\n<p>同步 API 的执行结果可以通过函数返回值直接获取，如果执行出错会抛出异常。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"异步-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步-api\"><span>异步 API</span></a></h2>\n<p>大多数 API 都是异步 API，如 <code v-pre>wx.request</code>，<code v-pre>wx.login</code> 等。这类 API 接口通常都接受一个 <code v-pre>Object</code> 类型的参数，这个参数都支持按需指定以下字段来接收接口调用结果:</p>\n<h3 id=\"object-参数说明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#object-参数说明\"><span>Object 参数说明</span></a></h3>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>Any</td>\n<td>-</td>\n<td>接口定义的其他参数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"回调函数的参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#回调函数的参数\"><span>回调函数的参数</span></a></h3>\n<p><code v-pre>success</code>, <code v-pre>fail</code>, <code v-pre>complete</code> 函数调用时会传入一个 <code v-pre>Object</code> 类型参数，包含以下字段:</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>errMsg</td>\n<td>string</td>\n<td>错误信息，如果调用成功返回 <code v-pre>${apiName}:ok</code></td>\n</tr>\n<tr>\n<td>errCode</td>\n<td>number</td>\n<td>错误码，仅部分 API 支持，具体含义请参考对应 API 文档，成功时为 0。</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>Any</td>\n<td>接口返回的其他数据</td>\n</tr>\n</tbody>\n</table>\n<p>异步 API 的执行结果需要通过 <code v-pre>Object</code> 类型的参数中传入的对应回调函数获取。部分异步 API 也会有返回值，可以用来实现更丰富的功能，如 <code v-pre>wx.request</code>, <code v-pre>wx.connectSocke</code>t` 等。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">login</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>异步函数会在异步动作进行完之后，触发对应设置好的回调函数，所以此时的函数执行已经脱离了正常 js 的执行上下文。</p>\n<p>如果对上面的话不理解，请务必查阅<strong>什么是同步/异步函数</strong>。</p>\n</div>\n<h2 id=\"常见-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#常见-api\"><span>常见 API</span></a></h2>\n<ul>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/route.html\">路由</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/storage.html\">数据缓存</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/interact.html\">交互</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/network.html\">网络</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/system.html\">系统信息</RouteLink></p>\n</li>\n</ul>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/mini-app/guide/service/api/README.md","filePathRelative":"code/mini-app/guide/service/api/README.md","frontmatter":{"date":"2022-04-05T00:00:00.000Z","title":"API","icon":"api","category":"小程序"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>小程序开发框架提供丰富的微信原生 API，可以方便的调起微信提供的能力，如获取用户信息，本地存储，支付功能等。详细介绍请参考 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\" target=\"_blank\" rel=\"noopener noreferrer\">API 文档</a>。 <Badge text=\"重要\" type=\"error\" /></p>\n<!-- more -->\n<p>通常，在小程序 API 有以下几种类型:</p>\n<h2 id=\"事件监听-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#事件监听-api\"><span>事件监听 API</span></a></h2>\n<p>我们约定，以 on 开头的 API 用来监听某个事件是否触发，如: <code v-pre>wx.onSocketOpen</code>, <code v-pre>wx.onCompassChange</code> 等。</p>\n<p>这类 API 接受一个回调函数作为参数，当事件触发时会调用这个回调函数，并将相关数据以参数形式传入。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">onCompassChange</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">direction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"同步-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#同步-api\"><span>同步 API</span></a></h2>\n<p>我们约定，以 <code v-pre>Sync</code> 结尾的 API 都是同步 API， 如 <code v-pre>wx.setStorageSync</code>，<code v-pre>wx.getSystemInfoSync</code> 等。此外，也有一些其他的同步 API，如 <code v-pre>wx.createWorker</code>, <code v-pre>wx.getBackgroundAudioManager</code> 等，详情参见 API 文档中的说明。</p>\n<p>同步 API 的执行结果可以通过函数返回值直接获取，如果执行出错会抛出异常。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"异步-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步-api\"><span>异步 API</span></a></h2>\n<p>大多数 API 都是异步 API，如 <code v-pre>wx.request</code>，<code v-pre>wx.login</code> 等。这类 API 接口通常都接受一个 <code v-pre>Object</code> 类型的参数，这个参数都支持按需指定以下字段来接收接口调用结果:</p>\n<h3 id=\"object-参数说明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#object-参数说明\"><span>Object 参数说明</span></a></h3>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>Any</td>\n<td>-</td>\n<td>接口定义的其他参数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"回调函数的参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#回调函数的参数\"><span>回调函数的参数</span></a></h3>\n<p><code v-pre>success</code>, <code v-pre>fail</code>, <code v-pre>complete</code> 函数调用时会传入一个 <code v-pre>Object</code> 类型参数，包含以下字段:</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>errMsg</td>\n<td>string</td>\n<td>错误信息，如果调用成功返回 <code v-pre>${apiName}:ok</code></td>\n</tr>\n<tr>\n<td>errCode</td>\n<td>number</td>\n<td>错误码，仅部分 API 支持，具体含义请参考对应 API 文档，成功时为 0。</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>Any</td>\n<td>接口返回的其他数据</td>\n</tr>\n</tbody>\n</table>\n<p>异步 API 的执行结果需要通过 <code v-pre>Object</code> 类型的参数中传入的对应回调函数获取。部分异步 API 也会有返回值，可以用来实现更丰富的功能，如 <code v-pre>wx.request</code>, <code v-pre>wx.connectSocke</code>t` 等。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">login</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>异步函数会在异步动作进行完之后，触发对应设置好的回调函数，所以此时的函数执行已经脱离了正常 js 的执行上下文。</p>\n<p>如果对上面的话不理解，请务必查阅<strong>什么是同步/异步函数</strong>。</p>\n</div>\n<h2 id=\"常见-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#常见-api\"><span>常见 API</span></a></h2>\n<ul>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/route.html\">路由</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/storage.html\">数据缓存</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/interact.html\">交互</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/network.html\">网络</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/system.html\">系统信息</RouteLink></p>\n</li>\n</ul>\n</template>","contentStripped":"<p>小程序开发框架提供丰富的微信原生 API，可以方便的调起微信提供的能力，如获取用户信息，本地存储，支付功能等。详细介绍请参考 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\" target=\"_blank\" rel=\"noopener noreferrer\">API 文档</a>。 <Badge text=\"重要\" type=\"error\" /></p>\n<!-- more -->\n<p>通常，在小程序 API 有以下几种类型:</p>\n<h2 id=\"事件监听-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#事件监听-api\"><span>事件监听 API</span></a></h2>\n<p>我们约定，以 on 开头的 API 用来监听某个事件是否触发，如: <code v-pre>wx.onSocketOpen</code>, <code v-pre>wx.onCompassChange</code> 等。</p>\n<p>这类 API 接受一个回调函数作为参数，当事件触发时会调用这个回调函数，并将相关数据以参数形式传入。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">onCompassChange</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">direction</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"同步-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#同步-api\"><span>同步 API</span></a></h2>\n<p>我们约定，以 <code v-pre>Sync</code> 结尾的 API 都是同步 API， 如 <code v-pre>wx.setStorageSync</code>，<code v-pre>wx.getSystemInfoSync</code> 等。此外，也有一些其他的同步 API，如 <code v-pre>wx.createWorker</code>, <code v-pre>wx.getBackgroundAudioManager</code> 等，详情参见 API 文档中的说明。</p>\n<p>同步 API 的执行结果可以通过函数返回值直接获取，如果执行出错会抛出异常。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"异步-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步-api\"><span>异步 API</span></a></h2>\n<p>大多数 API 都是异步 API，如 <code v-pre>wx.request</code>，<code v-pre>wx.login</code> 等。这类 API 接口通常都接受一个 <code v-pre>Object</code> 类型的参数，这个参数都支持按需指定以下字段来接收接口调用结果:</p>\n<h3 id=\"object-参数说明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#object-参数说明\"><span>Object 参数说明</span></a></h3>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>Any</td>\n<td>-</td>\n<td>接口定义的其他参数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"回调函数的参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#回调函数的参数\"><span>回调函数的参数</span></a></h3>\n<p><code v-pre>success</code>, <code v-pre>fail</code>, <code v-pre>complete</code> 函数调用时会传入一个 <code v-pre>Object</code> 类型参数，包含以下字段:</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>errMsg</td>\n<td>string</td>\n<td>错误信息，如果调用成功返回 <code v-pre>${apiName}:ok</code></td>\n</tr>\n<tr>\n<td>errCode</td>\n<td>number</td>\n<td>错误码，仅部分 API 支持，具体含义请参考对应 API 文档，成功时为 0。</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>Any</td>\n<td>接口返回的其他数据</td>\n</tr>\n</tbody>\n</table>\n<p>异步 API 的执行结果需要通过 <code v-pre>Object</code> 类型的参数中传入的对应回调函数获取。部分异步 API 也会有返回值，可以用来实现更丰富的功能，如 <code v-pre>wx.request</code>, <code v-pre>wx.connectSocke</code>t` 等。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">login</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>异步函数会在异步动作进行完之后，触发对应设置好的回调函数，所以此时的函数执行已经脱离了正常 js 的执行上下文。</p>\n<p>如果对上面的话不理解，请务必查阅<strong>什么是同步/异步函数</strong>。</p>\n</div>\n<h2 id=\"常见-api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#常见-api\"><span>常见 API</span></a></h2>\n<ul>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/route.html\">路由</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/storage.html\">数据缓存</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/interact.html\">交互</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/network.html\">网络</RouteLink></p>\n</li>\n<li>\n<p><RouteLink to=\"/code/mini-app/guide/service/api/system.html\">系统信息</RouteLink></p>\n</li>\n</ul>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n小程序开发框架提供丰富的微信原生 API，可以方便的调起微信提供的能力，如获取用户信息，本地存储，支付功能等。详细介绍请参考 [API 文档](https://developers.weixin.qq.com/miniprogram/dev/api/)。 <Badge text=\"重要\" type=\"error\" />\n\n<!-- more -->\n\n通常，在小程序 API 有以下几种类型:\n\n## 事件监听 API\n\n我们约定，以 on 开头的 API 用来监听某个事件是否触发，如: `wx.onSocketOpen`, `wx.onCompassChange` 等。\n\n这类 API 接受一个回调函数作为参数，当事件触发时会调用这个回调函数，并将相关数据以参数形式传入。\n\n```js\nwx.onCompassChange((res) => {\n  console.log(res.direction);\n});\n```\n\n## 同步 API\n\n我们约定，以 `Sync` 结尾的 API 都是同步 API， 如 `wx.setStorageSync`，`wx.getSystemInfoSync` 等。此外，也有一些其他的同步 API，如 `wx.createWorker`, `wx.getBackgroundAudioManager` 等，详情参见 API 文档中的说明。\n\n同步 API 的执行结果可以通过函数返回值直接获取，如果执行出错会抛出异常。\n\n```js\ntry {\n  wx.setStorageSync(\"key\", \"value\");\n} catch (e) {\n  console.error(e);\n}\n```\n\n## 异步 API\n\n大多数 API 都是异步 API，如 `wx.request`，`wx.login` 等。这类 API 接口通常都接受一个 `Object` 类型的参数，这个参数都支持按需指定以下字段来接收接口调用结果:\n\n### Object 参数说明\n\n| 参数名   | 类型     | 必填 | 说明                                           |\n| -------- | -------- | ---- | ---------------------------------------------- |\n| success  | function | 否   | 接口调用成功的回调函数                         |\n| fail     | function | 否   | 接口调用失败的回调函数                         |\n| complete | function | 否   | 接口调用结束的回调函数(调用成功、失败都会执行) |\n| 其他     | Any      | -    | 接口定义的其他参数                             |\n\n### 回调函数的参数\n\n`success`, `fail`, `complete` 函数调用时会传入一个 `Object` 类型参数，包含以下字段:\n\n| 属性    | 类型   | 说明                                                               |\n| ------- | ------ | ------------------------------------------------------------------ |\n| errMsg  | string | 错误信息，如果调用成功返回 `${apiName}:ok`                         |\n| errCode | number | 错误码，仅部分 API 支持，具体含义请参考对应 API 文档，成功时为 0。 |\n| 其他    | Any    | 接口返回的其他数据                                                 |\n\n异步 API 的执行结果需要通过 `Object` 类型的参数中传入的对应回调函数获取。部分异步 API 也会有返回值，可以用来实现更丰富的功能，如 `wx.request`, `wx.connectSocke`t` 等。\n\n```js\nwx.login({\n  success: (res) => {\n    console.log(res.code);\n  },\n});\n```\n\n::: warning\n\n异步函数会在异步动作进行完之后，触发对应设置好的回调函数，所以此时的函数执行已经脱离了正常 js 的执行上下文。\n\n如果对上面的话不理解，请务必查阅**什么是同步/异步函数**。\n\n:::\n\n## 常见 API\n\n- [路由](route.md)\n\n- [数据缓存](storage.md)\n\n- [交互](interact.md)\n\n- [网络](network.md)\n\n- [系统信息](system.md)\n","excerpt":"","title":"","headers":[{"level":2,"title":"事件监听 API","slug":"事件监听-api","link":"#事件监听-api","children":[]},{"level":2,"title":"同步 API","slug":"同步-api","link":"#同步-api","children":[]},{"level":2,"title":"异步 API","slug":"异步-api","link":"#异步-api","children":[{"level":3,"title":"Object 参数说明","slug":"object-参数说明","link":"#object-参数说明","children":[]},{"level":3,"title":"回调函数的参数","slug":"回调函数的参数","link":"#回调函数的参数","children":[]}]},{"level":2,"title":"常见 API","slug":"常见-api","link":"#常见-api","children":[]}],"links":[{"raw":"route.md","relative":"code/mini-app/guide/service/api/route.md","absolute":"/code/mini-app/guide/service/api/route.md"},{"raw":"storage.md","relative":"code/mini-app/guide/service/api/storage.md","absolute":"/code/mini-app/guide/service/api/storage.md"},{"raw":"interact.md","relative":"code/mini-app/guide/service/api/interact.md","absolute":"/code/mini-app/guide/service/api/interact.md"},{"raw":"network.md","relative":"code/mini-app/guide/service/api/network.md","absolute":"/code/mini-app/guide/service/api/network.md"},{"raw":"system.md","relative":"code/mini-app/guide/service/api/system.md","absolute":"/code/mini-app/guide/service/api/system.md"}]}}
