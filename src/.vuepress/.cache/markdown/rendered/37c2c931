{"content":"<h2 id=\"wx-request-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-request-object-object\"><span>wx.request(Object object)</span></a></h2>\n<p>发起 HTTPS 网络请求。使用前请注意阅读相关说明。</p>\n<h3 id=\"request-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#request-参数\"><span>request 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>必填</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td></td>\n<td>是</td>\n<td>开发者服务器接口地址</td>\n<td></td>\n</tr>\n<tr>\n<td>data</td>\n<td>string/object/ArrayBuffer</td>\n<td></td>\n<td>否</td>\n<td>请求的参数</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td></td>\n<td>否</td>\n<td>设置请求的 header，header 中不能设置 Referer。</td>\n<td></td>\n</tr>\n<tr>\n<td>content-type</td>\n<td></td>\n<td>application/json</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>string</td>\n<td>GET</td>\n<td>否</td>\n<td>HTTP 请求方法</td>\n<td></td>\n</tr>\n<tr>\n<td>dataType</td>\n<td>string</td>\n<td>json</td>\n<td>否</td>\n<td>返回的数据格式</td>\n<td></td>\n</tr>\n<tr>\n<td>responseType</td>\n<td>string</td>\n<td>text</td>\n<td>否</td>\n<td>响应的数据类型</td>\n<td>1.7.0</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>object.method 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OPTIONS</td>\n<td>HTTP 请求 OPTIONS</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>HTTP 请求 GET</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>HTTP 请求 HEAD</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>HTTP 请求 POST</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>HTTP 请求 PUT</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>HTTP 请求 DELETE</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>HTTP 请求 TRACE</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>HTTP 请求 CONNECT</td>\n</tr>\n</tbody>\n</table>\n<p>object.dataType 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>json</td>\n<td>返回的数据为 JSON，返回后会对返回的数据进行一次 JSON.parse</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>不对返回的内容进行 JSON.parse</td>\n</tr>\n</tbody>\n</table>\n<p>object.responseType 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>响应的数据为文本</td>\n</tr>\n<tr>\n<td>arraybuffer</td>\n<td>响应的数据为 ArrayBuffer</td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>string/Object/Arraybuffer</td>\n<td>开发者服务器返回的数据</td>\n<td></td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>开发者服务器返回的 HTTP Response Header</td>\n<td>1.2.0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"request-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#request-返回值\"><span>request 返回值</span></a></h3>\n<p>RequestTask</p>\n<p>请求任务对象</p>\n<h3 id=\"data-参数说明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#data-参数说明\"><span>data 参数说明</span></a></h3>\n<p>最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下:</p>\n<ul>\n<li>对于 GET 方法的数据，会将数据转换成 query string(encodeURIComponent(k)=encodeURIComponent(v)&amp;encodeURIComponent(k)=encodeURIComponent(v)...)</li>\n<li>对于 POST 方法且 <code v-pre>header['content-type']</code> 为 application/json 的数据，会对数据进行 JSON 序列化</li>\n<li>对于 POST 方法且 <code v-pre>header['content-type']</code> 为 application/x-www-form-urlencoded 的数据，会将数据转换成 query string (encodeURIComponent(k)=encodeURIComponent(v)&amp;encodeURIComponent(k)=encodeURIComponent(v)...)</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"test.php\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，并非真实的接口地址</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    x</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    y</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  header</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"content-type\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"application/json\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 默认值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"wx-downloadfile-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-downloadfile-object-object\"><span>wx.downloadFile(Object object)</span></a></h2>\n<p>下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径，单次下载允许的最大文件为 50MB。使用前请注意阅读相关说明。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>请在服务端响应的 header 中指定合理的 Content-Type 字段，以保证客户端正确处理文件类型。</p>\n</div>\n<h3 id=\"downloadfile-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#downloadfile-参数\"><span>downloadFile 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>下载资源的 url</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求的 Header，Header 中不能设置 Referer</td>\n<td></td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>否</td>\n<td>指定文件下载后存储的路径</td>\n<td>1.8.0</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tempFilePath</td>\n<td>string</td>\n<td>临时文件路径。没传入 filePath 指定文件存储路径时会返回，下载后的文件会存储到一个临时文件</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>用户文件路径。传入 filePath 时会返回，跟传入的 filePath 一致</td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"downloadfile-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#downloadfile-返回值\"><span>downloadFile 返回值</span></a></h3>\n<p>DownloadTask</p>\n<p>一个可以监听下载进度变化事件和取消下载的对象</p>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">downloadFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://example.com/audio/123\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，并非真实的资源</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">statusCode</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 200</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">playVoice</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        filePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tempFilePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"wx-uploadfile-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-uploadfile-object-object\"><span>wx.uploadFile(Object object)</span></a></h2>\n<p>将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 content-type 为 <code v-pre>multipart/form-data</code>。使用前请注意阅读相关说明。</p>\n<h3 id=\"uploadfile-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#uploadfile-参数\"><span>uploadFile 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>开发者服务器地址</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>是</td>\n<td>要上传文件资源的路径</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>是</td>\n<td>文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容</td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求 Header，Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>formData</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求中其他额外的 form data</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>string</td>\n<td>开发者服务器返回的数据</td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"uploadfile-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#uploadfile-返回值\"><span>uploadFile 返回值</span></a></h3>\n<p>UploadTask</p>\n<p>一个可以监听上传进度进度变化的事件和取消上传的对象</p>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chooseImage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> tempFilePaths</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">uploadFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://example.weixin.qq.com/upload\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，非真实的接口地址</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      filePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"file\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      formData</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">user</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"test\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">      success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        //do something</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/mini-app/guide/service/api/network.md","filePathRelative":"code/mini-app/guide/service/api/network.md","frontmatter":{"date":"2020-10-09T00:00:00.000Z","title":"网络 API","icon":"network","category":"小程序"},"sfcBlocks":{"template":{"type":"template","content":"<template><h2 id=\"wx-request-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-request-object-object\"><span>wx.request(Object object)</span></a></h2>\n<p>发起 HTTPS 网络请求。使用前请注意阅读相关说明。</p>\n<h3 id=\"request-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#request-参数\"><span>request 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>必填</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td></td>\n<td>是</td>\n<td>开发者服务器接口地址</td>\n<td></td>\n</tr>\n<tr>\n<td>data</td>\n<td>string/object/ArrayBuffer</td>\n<td></td>\n<td>否</td>\n<td>请求的参数</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td></td>\n<td>否</td>\n<td>设置请求的 header，header 中不能设置 Referer。</td>\n<td></td>\n</tr>\n<tr>\n<td>content-type</td>\n<td></td>\n<td>application/json</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>string</td>\n<td>GET</td>\n<td>否</td>\n<td>HTTP 请求方法</td>\n<td></td>\n</tr>\n<tr>\n<td>dataType</td>\n<td>string</td>\n<td>json</td>\n<td>否</td>\n<td>返回的数据格式</td>\n<td></td>\n</tr>\n<tr>\n<td>responseType</td>\n<td>string</td>\n<td>text</td>\n<td>否</td>\n<td>响应的数据类型</td>\n<td>1.7.0</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>object.method 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OPTIONS</td>\n<td>HTTP 请求 OPTIONS</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>HTTP 请求 GET</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>HTTP 请求 HEAD</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>HTTP 请求 POST</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>HTTP 请求 PUT</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>HTTP 请求 DELETE</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>HTTP 请求 TRACE</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>HTTP 请求 CONNECT</td>\n</tr>\n</tbody>\n</table>\n<p>object.dataType 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>json</td>\n<td>返回的数据为 JSON，返回后会对返回的数据进行一次 JSON.parse</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>不对返回的内容进行 JSON.parse</td>\n</tr>\n</tbody>\n</table>\n<p>object.responseType 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>响应的数据为文本</td>\n</tr>\n<tr>\n<td>arraybuffer</td>\n<td>响应的数据为 ArrayBuffer</td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>string/Object/Arraybuffer</td>\n<td>开发者服务器返回的数据</td>\n<td></td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>开发者服务器返回的 HTTP Response Header</td>\n<td>1.2.0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"request-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#request-返回值\"><span>request 返回值</span></a></h3>\n<p>RequestTask</p>\n<p>请求任务对象</p>\n<h3 id=\"data-参数说明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#data-参数说明\"><span>data 参数说明</span></a></h3>\n<p>最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下:</p>\n<ul>\n<li>对于 GET 方法的数据，会将数据转换成 query string(encodeURIComponent(k)=encodeURIComponent(v)&amp;encodeURIComponent(k)=encodeURIComponent(v)...)</li>\n<li>对于 POST 方法且 <code v-pre>header['content-type']</code> 为 application/json 的数据，会对数据进行 JSON 序列化</li>\n<li>对于 POST 方法且 <code v-pre>header['content-type']</code> 为 application/x-www-form-urlencoded 的数据，会将数据转换成 query string (encodeURIComponent(k)=encodeURIComponent(v)&amp;encodeURIComponent(k)=encodeURIComponent(v)...)</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"test.php\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，并非真实的接口地址</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    x</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    y</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  header</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"content-type\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"application/json\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 默认值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"wx-downloadfile-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-downloadfile-object-object\"><span>wx.downloadFile(Object object)</span></a></h2>\n<p>下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径，单次下载允许的最大文件为 50MB。使用前请注意阅读相关说明。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>请在服务端响应的 header 中指定合理的 Content-Type 字段，以保证客户端正确处理文件类型。</p>\n</div>\n<h3 id=\"downloadfile-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#downloadfile-参数\"><span>downloadFile 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>下载资源的 url</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求的 Header，Header 中不能设置 Referer</td>\n<td></td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>否</td>\n<td>指定文件下载后存储的路径</td>\n<td>1.8.0</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tempFilePath</td>\n<td>string</td>\n<td>临时文件路径。没传入 filePath 指定文件存储路径时会返回，下载后的文件会存储到一个临时文件</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>用户文件路径。传入 filePath 时会返回，跟传入的 filePath 一致</td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"downloadfile-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#downloadfile-返回值\"><span>downloadFile 返回值</span></a></h3>\n<p>DownloadTask</p>\n<p>一个可以监听下载进度变化事件和取消下载的对象</p>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">downloadFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://example.com/audio/123\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，并非真实的资源</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">statusCode</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 200</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">playVoice</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        filePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tempFilePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"wx-uploadfile-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-uploadfile-object-object\"><span>wx.uploadFile(Object object)</span></a></h2>\n<p>将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 content-type 为 <code v-pre>multipart/form-data</code>。使用前请注意阅读相关说明。</p>\n<h3 id=\"uploadfile-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#uploadfile-参数\"><span>uploadFile 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>开发者服务器地址</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>是</td>\n<td>要上传文件资源的路径</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>是</td>\n<td>文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容</td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求 Header，Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>formData</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求中其他额外的 form data</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>string</td>\n<td>开发者服务器返回的数据</td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"uploadfile-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#uploadfile-返回值\"><span>uploadFile 返回值</span></a></h3>\n<p>UploadTask</p>\n<p>一个可以监听上传进度进度变化的事件和取消上传的对象</p>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chooseImage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> tempFilePaths</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">uploadFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://example.weixin.qq.com/upload\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，非真实的接口地址</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      filePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"file\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      formData</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">user</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"test\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">      success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        //do something</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<h2 id=\"wx-request-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-request-object-object\"><span>wx.request(Object object)</span></a></h2>\n<p>发起 HTTPS 网络请求。使用前请注意阅读相关说明。</p>\n<h3 id=\"request-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#request-参数\"><span>request 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>默认值</th>\n<th>必填</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td></td>\n<td>是</td>\n<td>开发者服务器接口地址</td>\n<td></td>\n</tr>\n<tr>\n<td>data</td>\n<td>string/object/ArrayBuffer</td>\n<td></td>\n<td>否</td>\n<td>请求的参数</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td></td>\n<td>否</td>\n<td>设置请求的 header，header 中不能设置 Referer。</td>\n<td></td>\n</tr>\n<tr>\n<td>content-type</td>\n<td></td>\n<td>application/json</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>method</td>\n<td>string</td>\n<td>GET</td>\n<td>否</td>\n<td>HTTP 请求方法</td>\n<td></td>\n</tr>\n<tr>\n<td>dataType</td>\n<td>string</td>\n<td>json</td>\n<td>否</td>\n<td>返回的数据格式</td>\n<td></td>\n</tr>\n<tr>\n<td>responseType</td>\n<td>string</td>\n<td>text</td>\n<td>否</td>\n<td>响应的数据类型</td>\n<td>1.7.0</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td></td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>object.method 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OPTIONS</td>\n<td>HTTP 请求 OPTIONS</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>HTTP 请求 GET</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>HTTP 请求 HEAD</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>HTTP 请求 POST</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>HTTP 请求 PUT</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>HTTP 请求 DELETE</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>HTTP 请求 TRACE</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>HTTP 请求 CONNECT</td>\n</tr>\n</tbody>\n</table>\n<p>object.dataType 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>json</td>\n<td>返回的数据为 JSON，返回后会对返回的数据进行一次 JSON.parse</td>\n</tr>\n<tr>\n<td>其他</td>\n<td>不对返回的内容进行 JSON.parse</td>\n</tr>\n</tbody>\n</table>\n<p>object.responseType 的合法值</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>text</td>\n<td>响应的数据为文本</td>\n</tr>\n<tr>\n<td>arraybuffer</td>\n<td>响应的数据为 ArrayBuffer</td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>string/Object/Arraybuffer</td>\n<td>开发者服务器返回的数据</td>\n<td></td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>开发者服务器返回的 HTTP Response Header</td>\n<td>1.2.0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"request-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#request-返回值\"><span>request 返回值</span></a></h3>\n<p>RequestTask</p>\n<p>请求任务对象</p>\n<h3 id=\"data-参数说明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#data-参数说明\"><span>data 参数说明</span></a></h3>\n<p>最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下:</p>\n<ul>\n<li>对于 GET 方法的数据，会将数据转换成 query string(encodeURIComponent(k)=encodeURIComponent(v)&amp;encodeURIComponent(k)=encodeURIComponent(v)...)</li>\n<li>对于 POST 方法且 <code v-pre>header['content-type']</code> 为 application/json 的数据，会对数据进行 JSON 序列化</li>\n<li>对于 POST 方法且 <code v-pre>header['content-type']</code> 为 application/x-www-form-urlencoded 的数据，会将数据转换成 query string (encodeURIComponent(k)=encodeURIComponent(v)&amp;encodeURIComponent(k)=encodeURIComponent(v)...)</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">request</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"test.php\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，并非真实的接口地址</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    x</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    y</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  header</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"content-type\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"application/json\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 默认值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"wx-downloadfile-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-downloadfile-object-object\"><span>wx.downloadFile(Object object)</span></a></h2>\n<p>下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径，单次下载允许的最大文件为 50MB。使用前请注意阅读相关说明。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>请在服务端响应的 header 中指定合理的 Content-Type 字段，以保证客户端正确处理文件类型。</p>\n</div>\n<h3 id=\"downloadfile-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#downloadfile-参数\"><span>downloadFile 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n<th>最低版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>下载资源的 url</td>\n<td></td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求的 Header，Header 中不能设置 Referer</td>\n<td></td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>否</td>\n<td>指定文件下载后存储的路径</td>\n<td>1.8.0</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n<td></td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tempFilePath</td>\n<td>string</td>\n<td>临时文件路径。没传入 filePath 指定文件存储路径时会返回，下载后的文件会存储到一个临时文件</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>用户文件路径。传入 filePath 时会返回，跟传入的 filePath 一致</td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"downloadfile-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#downloadfile-返回值\"><span>downloadFile 返回值</span></a></h3>\n<p>DownloadTask</p>\n<p>一个可以监听下载进度变化事件和取消下载的对象</p>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">downloadFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://example.com/audio/123\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，并非真实的资源</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">statusCode</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 200</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">playVoice</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">        filePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tempFilePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"wx-uploadfile-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-uploadfile-object-object\"><span>wx.uploadFile(Object object)</span></a></h2>\n<p>将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 content-type 为 <code v-pre>multipart/form-data</code>。使用前请注意阅读相关说明。</p>\n<h3 id=\"uploadfile-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#uploadfile-参数\"><span>uploadFile 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>url</td>\n<td>string</td>\n<td>是</td>\n<td>开发者服务器地址</td>\n</tr>\n<tr>\n<td>filePath</td>\n<td>string</td>\n<td>是</td>\n<td>要上传文件资源的路径</td>\n</tr>\n<tr>\n<td>name</td>\n<td>string</td>\n<td>是</td>\n<td>文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容</td>\n</tr>\n<tr>\n<td>header</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求 Header，Header 中不能设置 Referer</td>\n</tr>\n<tr>\n<td>formData</td>\n<td>Object</td>\n<td>否</td>\n<td>HTTP 请求中其他额外的 form data</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>string</td>\n<td>开发者服务器返回的数据</td>\n</tr>\n<tr>\n<td>statusCode</td>\n<td>number</td>\n<td>开发者服务器返回的 HTTP 状态码</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"uploadfile-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#uploadfile-返回值\"><span>uploadFile 返回值</span></a></h3>\n<p>UploadTask</p>\n<p>一个可以监听上传进度进度变化的事件和取消上传的对象</p>\n<p>示例代码</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chooseImage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> tempFilePaths</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">uploadFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      url</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"https://example.weixin.qq.com/upload\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">//仅为示例，非真实的接口地址</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      filePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">0</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      name</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"file\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      formData</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">user</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"test\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">      success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">        const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">        //do something</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    });</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n## wx.request(Object object)\n\n发起 HTTPS 网络请求。使用前请注意阅读相关说明。\n\n### request 参数\n\nObject object\n\n| 属性         | 类型                      | 默认值           | 必填 | 说明                                           | 最低版本 |\n| ------------ | ------------------------- | ---------------- | ---- | ---------------------------------------------- | -------- |\n| url          | string                    |                  | 是   | 开发者服务器接口地址                           |          |\n| data         | string/object/ArrayBuffer |                  | 否   | 请求的参数                                     |          |\n| header       | Object                    |                  | 否   | 设置请求的 header，header 中不能设置 Referer。 |          |\n| content-type |                           | application/json |      |                                                |          |\n| method       | string                    | GET              | 否   | HTTP 请求方法                                  |          |\n| dataType     | string                    | json             | 否   | 返回的数据格式                                 |          |\n| responseType | string                    | text             | 否   | 响应的数据类型                                 | 1.7.0    |\n| success      | function                  |                  | 否   | 接口调用成功的回调函数                         |          |\n| fail         | function                  |                  | 否   | 接口调用失败的回调函数                         |          |\n| complete     | function                  |                  | 否   | 接口调用结束的回调函数(调用成功、失败都会执行) |          |\n\nobject.method 的合法值\n\n| 值      | 说明              |\n| ------- | ----------------- |\n| OPTIONS | HTTP 请求 OPTIONS |\n| GET     | HTTP 请求 GET     |\n| HEAD    | HTTP 请求 HEAD    |\n| POST    | HTTP 请求 POST    |\n| PUT     | HTTP 请求 PUT     |\n| DELETE  | HTTP 请求 DELETE  |\n| TRACE   | HTTP 请求 TRACE   |\n| CONNECT | HTTP 请求 CONNECT |\n\nobject.dataType 的合法值\n\n| 值   | 说明                                                       |\n| ---- | ---------------------------------------------------------- |\n| json | 返回的数据为 JSON，返回后会对返回的数据进行一次 JSON.parse |\n| 其他 | 不对返回的内容进行 JSON.parse                              |\n\nobject.responseType 的合法值\n\n| 值          | 说明                     |\n| ----------- | ------------------------ |\n| text        | 响应的数据为文本         |\n| arraybuffer | 响应的数据为 ArrayBuffer |\n\nobject.success 回调函数\n\n参数\n\nObject res\n\n| 属性       | 类型                      | 说明                                    | 最低版本 |\n| ---------- | ------------------------- | --------------------------------------- | -------- |\n| data       | string/Object/Arraybuffer | 开发者服务器返回的数据                  |          |\n| statusCode | number                    | 开发者服务器返回的 HTTP 状态码          |          |\n| header     | Object                    | 开发者服务器返回的 HTTP Response Header | 1.2.0    |\n\n### request 返回值\n\nRequestTask\n\n请求任务对象\n\n### data 参数说明\n\n最终发送给服务器的数据是 String 类型，如果传入的 data 不是 String 类型，会被转换成 String 。转换规则如下:\n\n- 对于 GET 方法的数据，会将数据转换成 query string(encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...)\n- 对于 POST 方法且 `header['content-type']` 为 application/json 的数据，会对数据进行 JSON 序列化\n- 对于 POST 方法且 `header['content-type']` 为 application/x-www-form-urlencoded 的数据，会将数据转换成 query string (encodeURIComponent(k)=encodeURIComponent(v)&encodeURIComponent(k)=encodeURIComponent(v)...)\n\n示例代码\n\n```js\nwx.request({\n  url: \"test.php\", //仅为示例，并非真实的接口地址\n  data: {\n    x: \"\",\n    y: \"\",\n  },\n  header: {\n    \"content-type\": \"application/json\", // 默认值\n  },\n  success: (res) => {\n    console.log(res.data);\n  },\n});\n```\n\n## wx.downloadFile(Object object)\n\n下载文件资源到本地。客户端直接发起一个 HTTPS GET 请求，返回文件的本地临时路径，单次下载允许的最大文件为 50MB。使用前请注意阅读相关说明。\n\n::: tip\n\n请在服务端响应的 header 中指定合理的 Content-Type 字段，以保证客户端正确处理文件类型。\n\n:::\n\n### downloadFile 参数\n\nObject object\n\n| 属性     | 类型     | 必填 | 说明                                           | 最低版本 |\n| -------- | -------- | ---- | ---------------------------------------------- | -------- |\n| url      | string   | 是   | 下载资源的 url                                 |          |\n| header   | Object   | 否   | HTTP 请求的 Header，Header 中不能设置 Referer  |          |\n| filePath | string   | 否   | 指定文件下载后存储的路径                       | 1.8.0    |\n| success  | function | 否   | 接口调用成功的回调函数                         |          |\n| fail     | function | 否   | 接口调用失败的回调函数                         |          |\n| complete | function | 否   | 接口调用结束的回调函数(调用成功、失败都会执行) |          |\n\nobject.success 回调函数\n\n参数\n\nObject res\n\n| 属性         | 类型   | 说明                                                                                     |\n| ------------ | ------ | ---------------------------------------------------------------------------------------- |\n| tempFilePath | string | 临时文件路径。没传入 filePath 指定文件存储路径时会返回，下载后的文件会存储到一个临时文件 |\n| filePath     | string | 用户文件路径。传入 filePath 时会返回，跟传入的 filePath 一致                             |\n| statusCode   | number | 开发者服务器返回的 HTTP 状态码                                                           |\n\n### downloadFile 返回值\n\nDownloadTask\n\n一个可以监听下载进度变化事件和取消下载的对象\n\n示例代码\n\n```js\nwx.downloadFile({\n  url: \"https://example.com/audio/123\", //仅为示例，并非真实的资源\n  success: (res) => {\n    // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容\n    if (res.statusCode === 200)\n      wx.playVoice({\n        filePath: res.tempFilePath,\n      });\n  },\n});\n```\n\n## wx.uploadFile(Object object)\n\n将本地资源上传到服务器。客户端发起一个 HTTPS POST 请求，其中 content-type 为 `multipart/form-data`。使用前请注意阅读相关说明。\n\n### uploadFile 参数\n\nObject object\n\n| 属性     | 类型     | 必填 | 说明                                                                |\n| -------- | -------- | ---- | ------------------------------------------------------------------- |\n| url      | string   | 是   | 开发者服务器地址                                                    |\n| filePath | string   | 是   | 要上传文件资源的路径                                                |\n| name     | string   | 是   | 文件对应的 key，开发者在服务端可以通过这个 key 获取文件的二进制内容 |\n| header   | Object   | 否   | HTTP 请求 Header，Header 中不能设置 Referer                         |\n| formData | Object   | 否   | HTTP 请求中其他额外的 form data                                     |\n| success  | function | 否   | 接口调用成功的回调函数                                              |\n| fail     | function | 否   | 接口调用失败的回调函数                                              |\n| complete | function | 否   | 接口调用结束的回调函数(调用成功、失败都会执行)                      |\n\nobject.success 回调函数\n\n参数\n\nObject res\n\n| 属性       | 类型   | 说明                           |\n| ---------- | ------ | ------------------------------ |\n| data       | string | 开发者服务器返回的数据         |\n| statusCode | number | 开发者服务器返回的 HTTP 状态码 |\n\n### uploadFile 返回值\n\nUploadTask\n\n一个可以监听上传进度进度变化的事件和取消上传的对象\n\n示例代码\n\n```js\nwx.chooseImage({\n  success: (res) => {\n    const tempFilePaths = res.tempFilePaths;\n\n    wx.uploadFile({\n      url: \"https://example.weixin.qq.com/upload\", //仅为示例，非真实的接口地址\n      filePath: tempFilePaths[0],\n      name: \"file\",\n      formData: { user: \"test\" },\n      success: (res) => {\n        const data = res.data;\n        //do something\n      },\n    });\n  },\n});\n```\n","excerpt":"","title":"","headers":[{"level":2,"title":"wx.request(Object object)","slug":"wx-request-object-object","link":"#wx-request-object-object","children":[{"level":3,"title":"request 参数","slug":"request-参数","link":"#request-参数","children":[]},{"level":3,"title":"request 返回值","slug":"request-返回值","link":"#request-返回值","children":[]},{"level":3,"title":"data 参数说明","slug":"data-参数说明","link":"#data-参数说明","children":[]}]},{"level":2,"title":"wx.downloadFile(Object object)","slug":"wx-downloadfile-object-object","link":"#wx-downloadfile-object-object","children":[{"level":3,"title":"downloadFile 参数","slug":"downloadfile-参数","link":"#downloadfile-参数","children":[]},{"level":3,"title":"downloadFile 返回值","slug":"downloadfile-返回值","link":"#downloadfile-返回值","children":[]}]},{"level":2,"title":"wx.uploadFile(Object object)","slug":"wx-uploadfile-object-object","link":"#wx-uploadfile-object-object","children":[{"level":3,"title":"uploadFile 参数","slug":"uploadfile-参数","link":"#uploadfile-参数","children":[]},{"level":3,"title":"uploadFile 返回值","slug":"uploadfile-返回值","link":"#uploadfile-返回值","children":[]}]}]}}
