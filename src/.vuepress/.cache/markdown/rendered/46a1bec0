{"content":"<p>本文介绍 Glob 匹配。</p>\n<!-- more -->\n<h2 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h2>\n<p>Glob 是当您要进行路径匹配时键入的模式。</p>\n<p>在解析一条匹配模式前，Glob 首先将 <code v-pre>{}</code> 部分展开为一组匹配模式。<code v-pre>{}</code> 内的模式之间使用逗号分隔。</p>\n<p>如 <code v-pre>a{/b/c,bcd}</code> 将扩展为 <code v-pre>a/b/c</code> 和 <code v-pre>abcd</code></p>\n<p><code v-pre>{}</code> 可以嵌套，可与其他模式联用。</p>\n<p>Glob 的魔术字符如下:</p>\n<ul>\n<li>\n<p><code v-pre>*</code>: 匹配路径部分中的 0 个或多个字符</p>\n</li>\n<li>\n<p><code v-pre>?</code>: 匹配单个字符</p>\n</li>\n<li>\n<p><code v-pre>[...]</code>: 匹配字符范围。<code v-pre>[^...]</code>和 <code v-pre>[!...]</code> 表示匹配不在范围内的字符</p>\n<details class=\"hint-container details\"><summary>例子</summary>\n<ul>\n<li><code v-pre>[xyz].js</code> 只能匹配 <code v-pre>x.js</code>, <code v-pre>y.js</code>, <code v-pre>z.js</code>，但不会匹配 <code v-pre>xy.js</code>, <code v-pre>xyz.js</code> 等，因为整个中括号只代表一个字符。其等价于 <code v-pre>[x-z].js</code></li>\n<li><code v-pre>[!xyz].js</code> 能匹配 <code v-pre>a.js</code>, <code v-pre>b.js</code>, <code v-pre>u.js</code>，但不会匹配 <code v-pre>x.js</code>, <code v-pre>y.js</code> <code v-pre>z.js</code>，<code v-pre>ab.js</code> 等。其等价于 <code v-pre>[^xyz].js</code> 和 <code v-pre>[!x-z].js</code>。</li>\n</ul>\n</details>\n</li>\n<li>\n<p><code v-pre>!(pattern|pattern|pattern)</code>: 匹配与提供的任何模式都不匹配的任何内容。</p>\n</li>\n<li>\n<p><code v-pre>?(pattern|pattern|pattern)</code>: 匹配 0 或一个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>+(pattern|pattern|pattern)</code> 匹配一个或多个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>*(a|b|c)</code>: 匹配 0 或多个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>@(pattern|pat*|pat?erN)</code>: 匹配恰好一个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>**</code>: 如果其在路径部分中单独出现，则匹配路径中的 0 个或多个目录与子目录。请注意它不对 symlinked 目录 (符号链接目录) 进行爬取。</p>\n<details class=\"hint-container details\"><summary>例子</summary>\n<ul>\n<li><code v-pre>**</code> 能匹配匹配所有的目录和文件。</li>\n<li><code v-pre>**/*.js</code> 能匹配所有的 js 文件。</li>\n<li><code v-pre>a/**/b.txt</code> 能匹配目录里任何一个 a 文件夹内的所有 b.txt 文件。</li>\n</ul>\n</details>\n</li>\n</ul>\n<h2 id=\"开头的文件与文件夹\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#开头的文件与文件夹\"><span><code v-pre>.</code> 开头的文件与文件夹</span></a></h2>\n<p>由于以 <code v-pre>.</code> 开头的文件或文件夹在 Unix 中视为隐藏文件或文件夹，故 Glob 不会匹配任何以 <code v-pre>.</code> 开头的路径部分，如 <code v-pre>.github/dependabot.yml</code> 或 <code v-pre>.eslintrc.js</code>。</p>\n<p>如果的确想要匹配 <code v-pre>.</code> 开头的文件或文件夹，可以显示标注出来，如 <code v-pre>.*.js</code> 可以匹配 <code v-pre>.eslintrc.js</code>。</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/basic/glob.md","filePathRelative":"code/basic/glob.md","frontmatter":{"title":"Glob","icon":"regexp","author":"陈慧玲","date":"2021-02-18T00:00:00.000Z","category":"基础","order":6},"sfcBlocks":{"template":{"type":"template","content":"<template><p>本文介绍 Glob 匹配。</p>\n<!-- more -->\n<h2 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h2>\n<p>Glob 是当您要进行路径匹配时键入的模式。</p>\n<p>在解析一条匹配模式前，Glob 首先将 <code v-pre>{}</code> 部分展开为一组匹配模式。<code v-pre>{}</code> 内的模式之间使用逗号分隔。</p>\n<p>如 <code v-pre>a{/b/c,bcd}</code> 将扩展为 <code v-pre>a/b/c</code> 和 <code v-pre>abcd</code></p>\n<p><code v-pre>{}</code> 可以嵌套，可与其他模式联用。</p>\n<p>Glob 的魔术字符如下:</p>\n<ul>\n<li>\n<p><code v-pre>*</code>: 匹配路径部分中的 0 个或多个字符</p>\n</li>\n<li>\n<p><code v-pre>?</code>: 匹配单个字符</p>\n</li>\n<li>\n<p><code v-pre>[...]</code>: 匹配字符范围。<code v-pre>[^...]</code>和 <code v-pre>[!...]</code> 表示匹配不在范围内的字符</p>\n<details class=\"hint-container details\"><summary>例子</summary>\n<ul>\n<li><code v-pre>[xyz].js</code> 只能匹配 <code v-pre>x.js</code>, <code v-pre>y.js</code>, <code v-pre>z.js</code>，但不会匹配 <code v-pre>xy.js</code>, <code v-pre>xyz.js</code> 等，因为整个中括号只代表一个字符。其等价于 <code v-pre>[x-z].js</code></li>\n<li><code v-pre>[!xyz].js</code> 能匹配 <code v-pre>a.js</code>, <code v-pre>b.js</code>, <code v-pre>u.js</code>，但不会匹配 <code v-pre>x.js</code>, <code v-pre>y.js</code> <code v-pre>z.js</code>，<code v-pre>ab.js</code> 等。其等价于 <code v-pre>[^xyz].js</code> 和 <code v-pre>[!x-z].js</code>。</li>\n</ul>\n</details>\n</li>\n<li>\n<p><code v-pre>!(pattern|pattern|pattern)</code>: 匹配与提供的任何模式都不匹配的任何内容。</p>\n</li>\n<li>\n<p><code v-pre>?(pattern|pattern|pattern)</code>: 匹配 0 或一个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>+(pattern|pattern|pattern)</code> 匹配一个或多个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>*(a|b|c)</code>: 匹配 0 或多个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>@(pattern|pat*|pat?erN)</code>: 匹配恰好一个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>**</code>: 如果其在路径部分中单独出现，则匹配路径中的 0 个或多个目录与子目录。请注意它不对 symlinked 目录 (符号链接目录) 进行爬取。</p>\n<details class=\"hint-container details\"><summary>例子</summary>\n<ul>\n<li><code v-pre>**</code> 能匹配匹配所有的目录和文件。</li>\n<li><code v-pre>**/*.js</code> 能匹配所有的 js 文件。</li>\n<li><code v-pre>a/**/b.txt</code> 能匹配目录里任何一个 a 文件夹内的所有 b.txt 文件。</li>\n</ul>\n</details>\n</li>\n</ul>\n<h2 id=\"开头的文件与文件夹\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#开头的文件与文件夹\"><span><code v-pre>.</code> 开头的文件与文件夹</span></a></h2>\n<p>由于以 <code v-pre>.</code> 开头的文件或文件夹在 Unix 中视为隐藏文件或文件夹，故 Glob 不会匹配任何以 <code v-pre>.</code> 开头的路径部分，如 <code v-pre>.github/dependabot.yml</code> 或 <code v-pre>.eslintrc.js</code>。</p>\n<p>如果的确想要匹配 <code v-pre>.</code> 开头的文件或文件夹，可以显示标注出来，如 <code v-pre>.*.js</code> 可以匹配 <code v-pre>.eslintrc.js</code>。</p>\n</template>","contentStripped":"<p>本文介绍 Glob 匹配。</p>\n<!-- more -->\n<h2 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h2>\n<p>Glob 是当您要进行路径匹配时键入的模式。</p>\n<p>在解析一条匹配模式前，Glob 首先将 <code v-pre>{}</code> 部分展开为一组匹配模式。<code v-pre>{}</code> 内的模式之间使用逗号分隔。</p>\n<p>如 <code v-pre>a{/b/c,bcd}</code> 将扩展为 <code v-pre>a/b/c</code> 和 <code v-pre>abcd</code></p>\n<p><code v-pre>{}</code> 可以嵌套，可与其他模式联用。</p>\n<p>Glob 的魔术字符如下:</p>\n<ul>\n<li>\n<p><code v-pre>*</code>: 匹配路径部分中的 0 个或多个字符</p>\n</li>\n<li>\n<p><code v-pre>?</code>: 匹配单个字符</p>\n</li>\n<li>\n<p><code v-pre>[...]</code>: 匹配字符范围。<code v-pre>[^...]</code>和 <code v-pre>[!...]</code> 表示匹配不在范围内的字符</p>\n<details class=\"hint-container details\"><summary>例子</summary>\n<ul>\n<li><code v-pre>[xyz].js</code> 只能匹配 <code v-pre>x.js</code>, <code v-pre>y.js</code>, <code v-pre>z.js</code>，但不会匹配 <code v-pre>xy.js</code>, <code v-pre>xyz.js</code> 等，因为整个中括号只代表一个字符。其等价于 <code v-pre>[x-z].js</code></li>\n<li><code v-pre>[!xyz].js</code> 能匹配 <code v-pre>a.js</code>, <code v-pre>b.js</code>, <code v-pre>u.js</code>，但不会匹配 <code v-pre>x.js</code>, <code v-pre>y.js</code> <code v-pre>z.js</code>，<code v-pre>ab.js</code> 等。其等价于 <code v-pre>[^xyz].js</code> 和 <code v-pre>[!x-z].js</code>。</li>\n</ul>\n</details>\n</li>\n<li>\n<p><code v-pre>!(pattern|pattern|pattern)</code>: 匹配与提供的任何模式都不匹配的任何内容。</p>\n</li>\n<li>\n<p><code v-pre>?(pattern|pattern|pattern)</code>: 匹配 0 或一个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>+(pattern|pattern|pattern)</code> 匹配一个或多个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>*(a|b|c)</code>: 匹配 0 或多个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>@(pattern|pat*|pat?erN)</code>: 匹配恰好一个内部模式。</p>\n</li>\n<li>\n<p><code v-pre>**</code>: 如果其在路径部分中单独出现，则匹配路径中的 0 个或多个目录与子目录。请注意它不对 symlinked 目录 (符号链接目录) 进行爬取。</p>\n<details class=\"hint-container details\"><summary>例子</summary>\n<ul>\n<li><code v-pre>**</code> 能匹配匹配所有的目录和文件。</li>\n<li><code v-pre>**/*.js</code> 能匹配所有的 js 文件。</li>\n<li><code v-pre>a/**/b.txt</code> 能匹配目录里任何一个 a 文件夹内的所有 b.txt 文件。</li>\n</ul>\n</details>\n</li>\n</ul>\n<h2 id=\"开头的文件与文件夹\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#开头的文件与文件夹\"><span><code v-pre>.</code> 开头的文件与文件夹</span></a></h2>\n<p>由于以 <code v-pre>.</code> 开头的文件或文件夹在 Unix 中视为隐藏文件或文件夹，故 Glob 不会匹配任何以 <code v-pre>.</code> 开头的路径部分，如 <code v-pre>.github/dependabot.yml</code> 或 <code v-pre>.eslintrc.js</code>。</p>\n<p>如果的确想要匹配 <code v-pre>.</code> 开头的文件或文件夹，可以显示标注出来，如 <code v-pre>.*.js</code> 可以匹配 <code v-pre>.eslintrc.js</code>。</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n本文介绍 Glob 匹配。\n\n<!-- more -->\n\n## 简介\n\nGlob 是当您要进行路径匹配时键入的模式。\n\n在解析一条匹配模式前，Glob 首先将 `{}` 部分展开为一组匹配模式。`{}` 内的模式之间使用逗号分隔。\n\n如 `a{/b/c,bcd}` 将扩展为 `a/b/c` 和 `abcd`\n\n`{}` 可以嵌套，可与其他模式联用。\n\nGlob 的魔术字符如下:\n\n- `*`: 匹配路径部分中的 0 个或多个字符\n\n- `?`: 匹配单个字符\n\n- `[...]`: 匹配字符范围。`[^...]`和 `[!...]` 表示匹配不在范围内的字符\n\n  ::: details 例子\n\n  - `[xyz].js` 只能匹配 `x.js`, `y.js`, `z.js`，但不会匹配 `xy.js`, `xyz.js` 等，因为整个中括号只代表一个字符。其等价于 `[x-z].js`\n  - `[!xyz].js` 能匹配 `a.js`, `b.js`, `u.js`，但不会匹配 `x.js`, `y.js` `z.js`，`ab.js` 等。其等价于 `[^xyz].js` 和 `[!x-z].js`。\n\n  :::\n\n- `!(pattern|pattern|pattern)`: 匹配与提供的任何模式都不匹配的任何内容。\n\n- `?(pattern|pattern|pattern)`: 匹配 0 或一个内部模式。\n- `+(pattern|pattern|pattern)` 匹配一个或多个内部模式。\n- `*(a|b|c)`: 匹配 0 或多个内部模式。\n- `@(pattern|pat*|pat?erN)`: 匹配恰好一个内部模式。\n\n- `**`: 如果其在路径部分中单独出现，则匹配路径中的 0 个或多个目录与子目录。请注意它不对 symlinked 目录 (符号链接目录) 进行爬取。\n\n  ::: details 例子\n\n  - `**` 能匹配匹配所有的目录和文件。\n  - `**/*.js` 能匹配所有的 js 文件。\n  - `a/**/b.txt` 能匹配目录里任何一个 a 文件夹内的所有 b.txt 文件。\n\n  :::\n\n## `.` 开头的文件与文件夹\n\n由于以 `.` 开头的文件或文件夹在 Unix 中视为隐藏文件或文件夹，故 Glob 不会匹配任何以 `.` 开头的路径部分，如 `.github/dependabot.yml` 或 `.eslintrc.js`。\n\n如果的确想要匹配 `.` 开头的文件或文件夹，可以显示标注出来，如 `.*.js` 可以匹配 `.eslintrc.js`。\n","excerpt":"","title":"","headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":". 开头的文件与文件夹","slug":"开头的文件与文件夹","link":"#开头的文件与文件夹","children":[]}]}}
