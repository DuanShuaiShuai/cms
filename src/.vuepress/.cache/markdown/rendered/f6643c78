{"content":"<p>本页面介绍的一系列 API 都是和小程序数据缓存(数据存储)相关的 API。</p>\n<p>可以利用数据缓存存储一些不重要的信息，比如用户的设置、用户的操作历史记录等。</p>\n<!-- more -->\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">概要</p>\n<p><strong>最常用的三个</strong>:</p>\n<p>异步:</p>\n<ul>\n<li><code v-pre>wx.setStorage</code>: 存储某个 <code v-pre>value</code> 到某个 <code v-pre>key</code></li>\n<li><code v-pre>wx.getStorage</code>: 读取某个 <code v-pre>key</code> 的 <code v-pre>value</code></li>\n<li><code v-pre>wx.removeStorage</code>: 删除某个 <code v-pre>key</code> 及其对应的 <code v-pre>value</code></li>\n</ul>\n<p>它们还有对应的同步 API 版本:</p>\n<ul>\n<li><code v-pre>wx.setStorageSync</code></li>\n<li><code v-pre>wx.getStorageSync</code></li>\n<li><code v-pre>wx.removeStorageSync</code></li>\n</ul>\n<p>清除缓存</p>\n<ul>\n<li><code v-pre>wx.clearStorage</code>: 清除全部数据缓存</li>\n<li><code v-pre>wx.clearStorageSync</code>: 上方 API 的同步版本</li>\n</ul>\n</div>\n<h2 id=\"相关注意事项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#相关注意事项\"><span>相关注意事项</span></a></h2>\n<ul>\n<li>\n<p>除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>当系统空间不足或用户长时间不使用小程序时，数据缓存可能被清理。</p>\n<p>所以要做好数据缓存丢失的逻辑。</p>\n</div>\n</li>\n<li>\n<p>单个 <code v-pre>key</code> 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。</p>\n</li>\n</ul>\n<h2 id=\"wx-setstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-setstorage-object-object\"><span>wx.setStorage(Object object)</span></a></h2>\n<p>将数据存储在本地缓存中指定的 <code v-pre>key</code> 中。会覆盖掉原来该 <code v-pre>key</code> 对应的内容。</p>\n<h3 id=\"setstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setstorage-参数\"><span>setStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>是</td>\n<td>需要存储的内容。只支持原生类型、Date、及能够通过 <code v-pre>JSON.stringify</code> 序列化的对象。</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-setstoragesync-string-key-any-data\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-setstoragesync-string-key-any-data\"><span>wx.setStorageSync(string key, any data)</span></a></h2>\n<p><code v-pre>wx.setStorage</code> 的同步版本</p>\n<h3 id=\"setstoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setstoragesync-参数\"><span>setStorageSync 参数</span></a></h3>\n<ul>\n<li>\n<p>string key</p>\n<p>本地缓存中指定的 key</p>\n</li>\n<li>\n<p>any data</p>\n<p>需要存储的内容。只支持原生类型、Date、及能够通过 <code v-pre>JSON.stringify</code> 序列化的对象。</p>\n</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {}</span></span></code></pre>\n</div><h2 id=\"wx-getstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-getstorage-object-object\"><span>wx.getStorage(Object object)</span></a></h2>\n<p>从本地缓存中异步获取指定 key 的内容</p>\n<h3 id=\"getstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstorage-参数\"><span>getStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>Object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>key 对应的内容</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-getstoragesync-string-key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-getstoragesync-string-key\"><span>wx.getStorageSync(string key)</span></a></h2>\n<p><code v-pre>wx.getStorage</code> 的同步版本</p>\n<h3 id=\"getstoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstoragesync-参数\"><span>getStorageSync 参数</span></a></h3>\n<ul>\n<li>string key: 本地缓存中指定的 <code v-pre>key</code></li>\n</ul>\n<h3 id=\"getstoragesync-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstoragesync-返回值\"><span>getStorageSync 返回值</span></a></h3>\n<ul>\n<li>any data : <code v-pre>key</code> 对应的内容</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> value</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // Do something with return value</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"wx-removestorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-removestorage-object-object\"><span>wx.removeStorage(Object object)</span></a></h2>\n<p>从本地缓存中移除指定 key</p>\n<h3 id=\"removestorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#removestorage-参数\"><span>removeStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">removeStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-removestoragesync-string-key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-removestoragesync-string-key\"><span>wx.removeStorageSync(string key)</span></a></h2>\n<p><code v-pre>wx.removeStorage</code> 的同步版本</p>\n<h3 id=\"removestoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#removestoragesync-参数\"><span>removeStorageSync 参数</span></a></h3>\n<ul>\n<li>string key: 本地缓存中指定的 <code v-pre>key</code></li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">removeStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"wx-clearstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-clearstorage-object-object\"><span>wx.clearStorage(Object object)</span></a></h2>\n<p>清理本地数据缓存</p>\n<h3 id=\"clearstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#clearstorage-参数\"><span>clearStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">clearStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n</div><h2 id=\"wx-clearstoragesync\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-clearstoragesync\"><span>wx.clearStorageSync()</span></a></h2>\n<p><code v-pre>wx.clearStorage</code> 的同步版本</p>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">clearStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div>","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/mini-app/guide/service/api/storage.md","filePathRelative":"code/mini-app/guide/service/api/storage.md","frontmatter":{"date":"2020-10-09T00:00:00.000Z","title":"数据缓存 API","icon":"storage","category":"小程序"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>本页面介绍的一系列 API 都是和小程序数据缓存(数据存储)相关的 API。</p>\n<p>可以利用数据缓存存储一些不重要的信息，比如用户的设置、用户的操作历史记录等。</p>\n<!-- more -->\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">概要</p>\n<p><strong>最常用的三个</strong>:</p>\n<p>异步:</p>\n<ul>\n<li><code v-pre>wx.setStorage</code>: 存储某个 <code v-pre>value</code> 到某个 <code v-pre>key</code></li>\n<li><code v-pre>wx.getStorage</code>: 读取某个 <code v-pre>key</code> 的 <code v-pre>value</code></li>\n<li><code v-pre>wx.removeStorage</code>: 删除某个 <code v-pre>key</code> 及其对应的 <code v-pre>value</code></li>\n</ul>\n<p>它们还有对应的同步 API 版本:</p>\n<ul>\n<li><code v-pre>wx.setStorageSync</code></li>\n<li><code v-pre>wx.getStorageSync</code></li>\n<li><code v-pre>wx.removeStorageSync</code></li>\n</ul>\n<p>清除缓存</p>\n<ul>\n<li><code v-pre>wx.clearStorage</code>: 清除全部数据缓存</li>\n<li><code v-pre>wx.clearStorageSync</code>: 上方 API 的同步版本</li>\n</ul>\n</div>\n<h2 id=\"相关注意事项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#相关注意事项\"><span>相关注意事项</span></a></h2>\n<ul>\n<li>\n<p>除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>当系统空间不足或用户长时间不使用小程序时，数据缓存可能被清理。</p>\n<p>所以要做好数据缓存丢失的逻辑。</p>\n</div>\n</li>\n<li>\n<p>单个 <code v-pre>key</code> 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。</p>\n</li>\n</ul>\n<h2 id=\"wx-setstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-setstorage-object-object\"><span>wx.setStorage(Object object)</span></a></h2>\n<p>将数据存储在本地缓存中指定的 <code v-pre>key</code> 中。会覆盖掉原来该 <code v-pre>key</code> 对应的内容。</p>\n<h3 id=\"setstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setstorage-参数\"><span>setStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>是</td>\n<td>需要存储的内容。只支持原生类型、Date、及能够通过 <code v-pre>JSON.stringify</code> 序列化的对象。</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-setstoragesync-string-key-any-data\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-setstoragesync-string-key-any-data\"><span>wx.setStorageSync(string key, any data)</span></a></h2>\n<p><code v-pre>wx.setStorage</code> 的同步版本</p>\n<h3 id=\"setstoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setstoragesync-参数\"><span>setStorageSync 参数</span></a></h3>\n<ul>\n<li>\n<p>string key</p>\n<p>本地缓存中指定的 key</p>\n</li>\n<li>\n<p>any data</p>\n<p>需要存储的内容。只支持原生类型、Date、及能够通过 <code v-pre>JSON.stringify</code> 序列化的对象。</p>\n</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {}</span></span></code></pre>\n</div><h2 id=\"wx-getstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-getstorage-object-object\"><span>wx.getStorage(Object object)</span></a></h2>\n<p>从本地缓存中异步获取指定 key 的内容</p>\n<h3 id=\"getstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstorage-参数\"><span>getStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>Object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>key 对应的内容</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-getstoragesync-string-key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-getstoragesync-string-key\"><span>wx.getStorageSync(string key)</span></a></h2>\n<p><code v-pre>wx.getStorage</code> 的同步版本</p>\n<h3 id=\"getstoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstoragesync-参数\"><span>getStorageSync 参数</span></a></h3>\n<ul>\n<li>string key: 本地缓存中指定的 <code v-pre>key</code></li>\n</ul>\n<h3 id=\"getstoragesync-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstoragesync-返回值\"><span>getStorageSync 返回值</span></a></h3>\n<ul>\n<li>any data : <code v-pre>key</code> 对应的内容</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> value</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // Do something with return value</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"wx-removestorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-removestorage-object-object\"><span>wx.removeStorage(Object object)</span></a></h2>\n<p>从本地缓存中移除指定 key</p>\n<h3 id=\"removestorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#removestorage-参数\"><span>removeStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">removeStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-removestoragesync-string-key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-removestoragesync-string-key\"><span>wx.removeStorageSync(string key)</span></a></h2>\n<p><code v-pre>wx.removeStorage</code> 的同步版本</p>\n<h3 id=\"removestoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#removestoragesync-参数\"><span>removeStorageSync 参数</span></a></h3>\n<ul>\n<li>string key: 本地缓存中指定的 <code v-pre>key</code></li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">removeStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"wx-clearstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-clearstorage-object-object\"><span>wx.clearStorage(Object object)</span></a></h2>\n<p>清理本地数据缓存</p>\n<h3 id=\"clearstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#clearstorage-参数\"><span>clearStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">clearStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n</div><h2 id=\"wx-clearstoragesync\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-clearstoragesync\"><span>wx.clearStorageSync()</span></a></h2>\n<p><code v-pre>wx.clearStorage</code> 的同步版本</p>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">clearStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div></template>","contentStripped":"<p>本页面介绍的一系列 API 都是和小程序数据缓存(数据存储)相关的 API。</p>\n<p>可以利用数据缓存存储一些不重要的信息，比如用户的设置、用户的操作历史记录等。</p>\n<!-- more -->\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">概要</p>\n<p><strong>最常用的三个</strong>:</p>\n<p>异步:</p>\n<ul>\n<li><code v-pre>wx.setStorage</code>: 存储某个 <code v-pre>value</code> 到某个 <code v-pre>key</code></li>\n<li><code v-pre>wx.getStorage</code>: 读取某个 <code v-pre>key</code> 的 <code v-pre>value</code></li>\n<li><code v-pre>wx.removeStorage</code>: 删除某个 <code v-pre>key</code> 及其对应的 <code v-pre>value</code></li>\n</ul>\n<p>它们还有对应的同步 API 版本:</p>\n<ul>\n<li><code v-pre>wx.setStorageSync</code></li>\n<li><code v-pre>wx.getStorageSync</code></li>\n<li><code v-pre>wx.removeStorageSync</code></li>\n</ul>\n<p>清除缓存</p>\n<ul>\n<li><code v-pre>wx.clearStorage</code>: 清除全部数据缓存</li>\n<li><code v-pre>wx.clearStorageSync</code>: 上方 API 的同步版本</li>\n</ul>\n</div>\n<h2 id=\"相关注意事项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#相关注意事项\"><span>相关注意事项</span></a></h2>\n<ul>\n<li>\n<p>除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>当系统空间不足或用户长时间不使用小程序时，数据缓存可能被清理。</p>\n<p>所以要做好数据缓存丢失的逻辑。</p>\n</div>\n</li>\n<li>\n<p>单个 <code v-pre>key</code> 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。</p>\n</li>\n</ul>\n<h2 id=\"wx-setstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-setstorage-object-object\"><span>wx.setStorage(Object object)</span></a></h2>\n<p>将数据存储在本地缓存中指定的 <code v-pre>key</code> 中。会覆盖掉原来该 <code v-pre>key</code> 对应的内容。</p>\n<h3 id=\"setstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setstorage-参数\"><span>setStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>是</td>\n<td>需要存储的内容。只支持原生类型、Date、及能够通过 <code v-pre>JSON.stringify</code> 序列化的对象。</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-setstoragesync-string-key-any-data\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-setstoragesync-string-key-any-data\"><span>wx.setStorageSync(string key, any data)</span></a></h2>\n<p><code v-pre>wx.setStorage</code> 的同步版本</p>\n<h3 id=\"setstoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#setstoragesync-参数\"><span>setStorageSync 参数</span></a></h3>\n<ul>\n<li>\n<p>string key</p>\n<p>本地缓存中指定的 key</p>\n</li>\n<li>\n<p>any data</p>\n<p>需要存储的内容。只支持原生类型、Date、及能够通过 <code v-pre>JSON.stringify</code> 序列化的对象。</p>\n</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">setStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"value\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {}</span></span></code></pre>\n</div><h2 id=\"wx-getstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-getstorage-object-object\"><span>wx.getStorage(Object object)</span></a></h2>\n<p>从本地缓存中异步获取指定 key 的内容</p>\n<h3 id=\"getstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstorage-参数\"><span>getStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>Object.success 回调函数</p>\n<p>参数</p>\n<p>Object res</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>any</td>\n<td>key 对应的内容</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">data</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-getstoragesync-string-key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-getstoragesync-string-key\"><span>wx.getStorageSync(string key)</span></a></h2>\n<p><code v-pre>wx.getStorage</code> 的同步版本</p>\n<h3 id=\"getstoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstoragesync-参数\"><span>getStorageSync 参数</span></a></h3>\n<ul>\n<li>string key: 本地缓存中指定的 <code v-pre>key</code></li>\n</ul>\n<h3 id=\"getstoragesync-返回值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#getstoragesync-返回值\"><span>getStorageSync 返回值</span></a></h3>\n<ul>\n<li>any data : <code v-pre>key</code> 对应的内容</li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> value</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">value</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // Do something with return value</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"wx-removestorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-removestorage-object-object\"><span>wx.removeStorage(Object object)</span></a></h2>\n<p>从本地缓存中移除指定 key</p>\n<h3 id=\"removestorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#removestorage-参数\"><span>removeStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>string</td>\n<td>是</td>\n<td>本地缓存中指定的 key</td>\n</tr>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">removeStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  key</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h2 id=\"wx-removestoragesync-string-key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-removestoragesync-string-key\"><span>wx.removeStorageSync(string key)</span></a></h2>\n<p><code v-pre>wx.removeStorage</code> 的同步版本</p>\n<h3 id=\"removestoragesync-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#removestoragesync-参数\"><span>removeStorageSync 参数</span></a></h3>\n<ul>\n<li>string key: 本地缓存中指定的 <code v-pre>key</code></li>\n</ul>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">removeStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"key\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"wx-clearstorage-object-object\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-clearstorage-object-object\"><span>wx.clearStorage(Object object)</span></a></h2>\n<p>清理本地数据缓存</p>\n<h3 id=\"clearstorage-参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#clearstorage-参数\"><span>clearStorage 参数</span></a></h3>\n<p>Object object</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>类型</th>\n<th>必填</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>success</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用成功的回调函数</td>\n</tr>\n<tr>\n<td>fail</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用失败的回调函数</td>\n</tr>\n<tr>\n<td>complete</td>\n<td>function</td>\n<td>否</td>\n<td>接口调用结束的回调函数(调用成功、失败都会执行)</td>\n</tr>\n</tbody>\n</table>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">clearStorage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n</div><h2 id=\"wx-clearstoragesync\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#wx-clearstoragesync\"><span>wx.clearStorageSync()</span></a></h2>\n<p><code v-pre>wx.clearStorage</code> 的同步版本</p>\n<p>示例代码</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">try</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">clearStorageSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">} </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">catch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Do something when catch error</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n本页面介绍的一系列 API 都是和小程序数据缓存(数据存储)相关的 API。\n\n可以利用数据缓存存储一些不重要的信息，比如用户的设置、用户的操作历史记录等。\n\n<!-- more -->\n\n::: tip 概要\n\n**最常用的三个**:\n\n异步:\n\n- `wx.setStorage`: 存储某个 `value` 到某个 `key`\n- `wx.getStorage`: 读取某个 `key` 的 `value`\n- `wx.removeStorage`: 删除某个 `key` 及其对应的 `value`\n\n它们还有对应的同步 API 版本:\n\n- `wx.setStorageSync`\n- `wx.getStorageSync`\n- `wx.removeStorageSync`\n\n清除缓存\n\n- `wx.clearStorage`: 清除全部数据缓存\n- `wx.clearStorageSync`: 上方 API 的同步版本\n\n:::\n\n## 相关注意事项\n\n- 除非用户主动删除或因存储空间原因被系统清理，否则数据都一直可用。\n\n  ::: warning\n\n  当系统空间不足或用户长时间不使用小程序时，数据缓存可能被清理。\n\n  所以要做好数据缓存丢失的逻辑。\n\n  :::\n\n- 单个 `key` 允许存储的最大数据长度为 1MB，所有数据存储上限为 10MB。\n\n## wx.setStorage(Object object)\n\n将数据存储在本地缓存中指定的 `key` 中。会覆盖掉原来该 `key` 对应的内容。\n\n### setStorage 参数\n\nObject object\n\n| 属性     | 类型     | 必填 | 说明                                                                             |\n| -------- | -------- | ---- | -------------------------------------------------------------------------------- |\n| key      | string   | 是   | 本地缓存中指定的 key                                                             |\n| data     | any      | 是   | 需要存储的内容。只支持原生类型、Date、及能够通过 `JSON.stringify` 序列化的对象。 |\n| success  | function | 否   | 接口调用成功的回调函数                                                           |\n| fail     | function | 否   | 接口调用失败的回调函数                                                           |\n| complete | function | 否   | 接口调用结束的回调函数(调用成功、失败都会执行)                                   |\n\n示例代码\n\n```js\nwx.setStorage({\n  key: \"key\",\n  data: \"value\",\n});\n```\n\n## wx.setStorageSync(string key, any data)\n\n`wx.setStorage` 的同步版本\n\n### setStorageSync 参数\n\n- string key\n\n  本地缓存中指定的 key\n\n- any data\n\n  需要存储的内容。只支持原生类型、Date、及能够通过 `JSON.stringify` 序列化的对象。\n\n示例代码\n\n```js\ntry {\n  wx.setStorageSync(\"key\", \"value\");\n} catch (err) {}\n```\n\n## wx.getStorage(Object object)\n\n从本地缓存中异步获取指定 key 的内容\n\n### getStorage 参数\n\nObject object\n\n| 属性     | 类型     | 必填 | 说明                                           |\n| -------- | -------- | ---- | ---------------------------------------------- |\n| key      | string   | 是   | 本地缓存中指定的 key                           |\n| success  | function | 否   | 接口调用成功的回调函数                         |\n| fail     | function | 否   | 接口调用失败的回调函数                         |\n| complete | function | 否   | 接口调用结束的回调函数(调用成功、失败都会执行) |\n\nObject.success 回调函数\n\n参数\n\nObject res\n\n| 属性 | 类型 | 说明           |\n| ---- | ---- | -------------- |\n| data | any  | key 对应的内容 |\n\n示例代码\n\n```js\nwx.getStorage({\n  key: \"key\",\n  success: (res) => {\n    console.log(res.data);\n  },\n});\n```\n\n## wx.getStorageSync(string key)\n\n`wx.getStorage` 的同步版本\n\n### getStorageSync 参数\n\n- string key: 本地缓存中指定的 `key`\n\n### getStorageSync 返回值\n\n- any data : `key` 对应的内容\n\n示例代码\n\n```js\ntry {\n  const value = wx.getStorageSync(\"key\");\n\n  if (value) {\n    // Do something with return value\n  }\n} catch (err) {\n  // Do something when catch error\n}\n```\n\n## wx.removeStorage(Object object)\n\n从本地缓存中移除指定 key\n\n### removeStorage 参数\n\nObject object\n\n| 属性     | 类型     | 必填 | 说明                                           |\n| -------- | -------- | ---- | ---------------------------------------------- |\n| key      | string   | 是   | 本地缓存中指定的 key                           |\n| success  | function | 否   | 接口调用成功的回调函数                         |\n| fail     | function | 否   | 接口调用失败的回调函数                         |\n| complete | function | 否   | 接口调用结束的回调函数(调用成功、失败都会执行) |\n\n示例代码\n\n```js\nwx.removeStorage({\n  key: \"key\",\n  success: (res) => {\n    console.log(res);\n  },\n});\n```\n\n## wx.removeStorageSync(string key)\n\n`wx.removeStorage` 的同步版本\n\n### removeStorageSync 参数\n\n- string key: 本地缓存中指定的 `key`\n\n示例代码\n\n```js\ntry {\n  wx.removeStorageSync(\"key\");\n} catch (err) {\n  // Do something when catch error\n}\n```\n\n## wx.clearStorage(Object object)\n\n清理本地数据缓存\n\n### clearStorage 参数\n\nObject object\n\n| 属性     | 类型     | 必填 | 说明                                           |\n| -------- | -------- | ---- | ---------------------------------------------- |\n| success  | function | 否   | 接口调用成功的回调函数                         |\n| fail     | function | 否   | 接口调用失败的回调函数                         |\n| complete | function | 否   | 接口调用结束的回调函数(调用成功、失败都会执行) |\n\n示例代码\n\n```js\nwx.clearStorage();\n```\n\n## wx.clearStorageSync()\n\n`wx.clearStorage` 的同步版本\n\n示例代码\n\n```js\ntry {\n  wx.clearStorageSync();\n} catch (err) {\n  // Do something when catch error\n}\n```\n","excerpt":"","title":"","headers":[{"level":2,"title":"相关注意事项","slug":"相关注意事项","link":"#相关注意事项","children":[]},{"level":2,"title":"wx.setStorage(Object object)","slug":"wx-setstorage-object-object","link":"#wx-setstorage-object-object","children":[{"level":3,"title":"setStorage 参数","slug":"setstorage-参数","link":"#setstorage-参数","children":[]}]},{"level":2,"title":"wx.setStorageSync(string key, any data)","slug":"wx-setstoragesync-string-key-any-data","link":"#wx-setstoragesync-string-key-any-data","children":[{"level":3,"title":"setStorageSync 参数","slug":"setstoragesync-参数","link":"#setstoragesync-参数","children":[]}]},{"level":2,"title":"wx.getStorage(Object object)","slug":"wx-getstorage-object-object","link":"#wx-getstorage-object-object","children":[{"level":3,"title":"getStorage 参数","slug":"getstorage-参数","link":"#getstorage-参数","children":[]}]},{"level":2,"title":"wx.getStorageSync(string key)","slug":"wx-getstoragesync-string-key","link":"#wx-getstoragesync-string-key","children":[{"level":3,"title":"getStorageSync 参数","slug":"getstoragesync-参数","link":"#getstoragesync-参数","children":[]},{"level":3,"title":"getStorageSync 返回值","slug":"getstoragesync-返回值","link":"#getstoragesync-返回值","children":[]}]},{"level":2,"title":"wx.removeStorage(Object object)","slug":"wx-removestorage-object-object","link":"#wx-removestorage-object-object","children":[{"level":3,"title":"removeStorage 参数","slug":"removestorage-参数","link":"#removestorage-参数","children":[]}]},{"level":2,"title":"wx.removeStorageSync(string key)","slug":"wx-removestoragesync-string-key","link":"#wx-removestoragesync-string-key","children":[{"level":3,"title":"removeStorageSync 参数","slug":"removestoragesync-参数","link":"#removestoragesync-参数","children":[]}]},{"level":2,"title":"wx.clearStorage(Object object)","slug":"wx-clearstorage-object-object","link":"#wx-clearstorage-object-object","children":[{"level":3,"title":"clearStorage 参数","slug":"clearstorage-参数","link":"#clearstorage-参数","children":[]}]},{"level":2,"title":"wx.clearStorageSync()","slug":"wx-clearstoragesync","link":"#wx-clearstoragesync","children":[]}]}}
