{"content":"<p>在正式编写第一个 Python 程序前，我们先复习一下什么是命令行模式和 Python 交互模式。</p>\n<!-- more -->\n<h2 id=\"命令行模式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行模式\"><span>命令行模式</span></a></h2>\n<p>打开“命令提示符”，就进入到命令行模式，它的提示符类似 <code v-pre>C:\\&gt;</code>:</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>如何打开，请见 <RouteLink to=\"/code/windows/cmd.html\">打开命令行</RouteLink></p>\n</div>\n<h2 id=\"python-交互模式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#python-交互模式\"><span>Python 交互模式</span></a></h2>\n<p>在命令行模式下敲命令 <code v-pre>python</code>，就进入到 Python 交互模式，它的提示符是 <code v-pre>&gt;&gt;&gt;</code>。</p>\n<p>在交互模式的提示符 <code v-pre>&gt;&gt;&gt;</code> 下，直接输入代码，按回车，就可以立刻得到代码执行结果。</p>\n<blockquote>\n<p>请敲入 <code v-pre>100 + 200</code> 然后按回车，您就会得到 <code v-pre>300</code>。</p>\n</blockquote>\n<p>如果要让 Python 打印出指定的文字，可以用 <code v-pre>print()</code> 函数，然后把希望打印的文字用单引号或者双引号括起来，但不能混用单引号和双引号。</p>\n<blockquote>\n<p>输入 <code v-pre>print('hello, world')</code> 后回车。</p>\n</blockquote>\n<p>最后，用 <code v-pre>exit()</code> 退出 Python，我们的第一个 Python 程序完成! 唯一的缺憾是没有保存下来，下次运行时还要再输入一遍代码。</p>\n<p>在 Python 的交互式命令行写程序，好处是一下就能得到结果，坏处是没法保存，下次还想运行的时候，还得再敲一遍。</p>\n<p>所以，实际开发的时候，我们总是使用一个文本编辑器来写代码，写完了，保存为一个文件，这样，程序就可以反复运行了。</p>\n<p>现在，我们就把上次的 <code v-pre>'hello, world'</code> 程序用文本编辑器写出来，保存下来。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">文本编辑器</p>\n<p>关于文本编辑器，请使用 <RouteLink to=\"/software/vscode/\">VS Code</RouteLink></p>\n</div>\n<p>安装好文本编辑器后，输入以下代码:</p>\n<div class=\"language-py\" data-highlighter=\"shiki\" data-ext=\"py\" data-title=\"py\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">print</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hello, world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n</div><p>注意 <code v-pre>print</code> 前面不要有任何空格。然后，选择一个目录，例如 <code v-pre>C:\\work</code>，把文件保存为 hello.py，就可以打开命令行窗口，把当前目录切换到 hello.py 所在目录，就可以运行这个程序了:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">C:/work</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">python</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n</div><p>也可以保存为别的名字，比如 first.py，但是必须要以 <code v-pre>.py</code> 结尾，其他的都不行。此外，文件名只能是英文字母、数字和下划线的组合。</p>\n<p>如果当前目录下没有 hello.py 这个文件，运行 <code v-pre>python hello.py</code> 就会报错:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">C:/Users/Mister-Hope</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">python</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">python:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> can't open file 'hello.py': [Errno 2] No such file or directory</span></span></code></pre>\n</div><p>报错的意思就是，无法打开 hello.py 这个文件，因为文件不存在。这个时候，就要检查一下当前目录下是否有这个文件了。如果 hello.py 存放在另外一个目录下，要首先用 <code v-pre>cd</code> 命令切换当前目录。</p>\n<h2 id=\"直接运行-py-文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#直接运行-py-文件\"><span>直接运行 py 文件</span></a></h2>\n<p>您可能有疑问，能不能像 <code v-pre>.exe</code> 文件那样直接运行 <code v-pre>.py</code> 文件呢? 在 Windows 上是不行的，但是，在 Mac 和 Linux 上是可以的，方法是在 <code v-pre>.py</code> 文件的第一行加上一个特殊的注释:</p>\n<div class=\"language-py\" data-highlighter=\"shiki\" data-ext=\"py\" data-title=\"py\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># !/usr/bin/env python3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">print</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hello, world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n</div><p>然后，通过命令给 hello.py 以执行权限:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a+x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span></code></pre>\n</div><p>就可以直接运行 hello.py 了，比如在 Mac 下运行:</p>\n<h2 id=\"小结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小结\"><span>小结</span></a></h2>\n<p>用文本编辑器写 Python 程序，然后保存为后缀为 <code v-pre>.py</code> 的文件，就可以用 Python 直接运行这个程序了。</p>\n<p>Python 的交互模式和直接运行 <code v-pre>.py</code> 文件有什么区别呢?</p>\n<p>直接输入 python 进入交互模式，相当于启动了 Python 解释器，但是等待您一行一行地输入源代码，每输入一行就执行一行。</p>\n<p>直接运行 <code v-pre>.py</code> 文件相当于启动了 Python 解释器，然后一次性把 <code v-pre>.py</code> 文件的源代码给执行了，您是没有机会以交互的方式输入源代码的。</p>\n<p>用 Python 开发程序，完全可以一边在文本编辑器里写代码，一边开一个交互式命令窗口，在写代码的过程中，把部分代码粘到命令行去验证，事半功倍! 前提是得有个 27’ 的超大显示器!</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/language/python/guide/write.md","filePathRelative":"code/language/python/guide/write.md","frontmatter":{"title":"第一个 Python 程序","icon":"info","author":"廖雪峰","date":"2020-05-20T00:00:00.000Z","category":"Python"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>在正式编写第一个 Python 程序前，我们先复习一下什么是命令行模式和 Python 交互模式。</p>\n<!-- more -->\n<h2 id=\"命令行模式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行模式\"><span>命令行模式</span></a></h2>\n<p>打开“命令提示符”，就进入到命令行模式，它的提示符类似 <code v-pre>C:\\&gt;</code>:</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>如何打开，请见 <RouteLink to=\"/code/windows/cmd.html\">打开命令行</RouteLink></p>\n</div>\n<h2 id=\"python-交互模式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#python-交互模式\"><span>Python 交互模式</span></a></h2>\n<p>在命令行模式下敲命令 <code v-pre>python</code>，就进入到 Python 交互模式，它的提示符是 <code v-pre>&gt;&gt;&gt;</code>。</p>\n<p>在交互模式的提示符 <code v-pre>&gt;&gt;&gt;</code> 下，直接输入代码，按回车，就可以立刻得到代码执行结果。</p>\n<blockquote>\n<p>请敲入 <code v-pre>100 + 200</code> 然后按回车，您就会得到 <code v-pre>300</code>。</p>\n</blockquote>\n<p>如果要让 Python 打印出指定的文字，可以用 <code v-pre>print()</code> 函数，然后把希望打印的文字用单引号或者双引号括起来，但不能混用单引号和双引号。</p>\n<blockquote>\n<p>输入 <code v-pre>print('hello, world')</code> 后回车。</p>\n</blockquote>\n<p>最后，用 <code v-pre>exit()</code> 退出 Python，我们的第一个 Python 程序完成! 唯一的缺憾是没有保存下来，下次运行时还要再输入一遍代码。</p>\n<p>在 Python 的交互式命令行写程序，好处是一下就能得到结果，坏处是没法保存，下次还想运行的时候，还得再敲一遍。</p>\n<p>所以，实际开发的时候，我们总是使用一个文本编辑器来写代码，写完了，保存为一个文件，这样，程序就可以反复运行了。</p>\n<p>现在，我们就把上次的 <code v-pre>'hello, world'</code> 程序用文本编辑器写出来，保存下来。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">文本编辑器</p>\n<p>关于文本编辑器，请使用 <RouteLink to=\"/software/vscode/\">VS Code</RouteLink></p>\n</div>\n<p>安装好文本编辑器后，输入以下代码:</p>\n<div class=\"language-py\" data-highlighter=\"shiki\" data-ext=\"py\" data-title=\"py\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">print</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hello, world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n</div><p>注意 <code v-pre>print</code> 前面不要有任何空格。然后，选择一个目录，例如 <code v-pre>C:\\work</code>，把文件保存为 hello.py，就可以打开命令行窗口，把当前目录切换到 hello.py 所在目录，就可以运行这个程序了:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">C:/work</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">python</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n</div><p>也可以保存为别的名字，比如 first.py，但是必须要以 <code v-pre>.py</code> 结尾，其他的都不行。此外，文件名只能是英文字母、数字和下划线的组合。</p>\n<p>如果当前目录下没有 hello.py 这个文件，运行 <code v-pre>python hello.py</code> 就会报错:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">C:/Users/Mister-Hope</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">python</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">python:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> can't open file 'hello.py': [Errno 2] No such file or directory</span></span></code></pre>\n</div><p>报错的意思就是，无法打开 hello.py 这个文件，因为文件不存在。这个时候，就要检查一下当前目录下是否有这个文件了。如果 hello.py 存放在另外一个目录下，要首先用 <code v-pre>cd</code> 命令切换当前目录。</p>\n<h2 id=\"直接运行-py-文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#直接运行-py-文件\"><span>直接运行 py 文件</span></a></h2>\n<p>您可能有疑问，能不能像 <code v-pre>.exe</code> 文件那样直接运行 <code v-pre>.py</code> 文件呢? 在 Windows 上是不行的，但是，在 Mac 和 Linux 上是可以的，方法是在 <code v-pre>.py</code> 文件的第一行加上一个特殊的注释:</p>\n<div class=\"language-py\" data-highlighter=\"shiki\" data-ext=\"py\" data-title=\"py\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># !/usr/bin/env python3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">print</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hello, world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n</div><p>然后，通过命令给 hello.py 以执行权限:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a+x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span></code></pre>\n</div><p>就可以直接运行 hello.py 了，比如在 Mac 下运行:</p>\n<h2 id=\"小结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小结\"><span>小结</span></a></h2>\n<p>用文本编辑器写 Python 程序，然后保存为后缀为 <code v-pre>.py</code> 的文件，就可以用 Python 直接运行这个程序了。</p>\n<p>Python 的交互模式和直接运行 <code v-pre>.py</code> 文件有什么区别呢?</p>\n<p>直接输入 python 进入交互模式，相当于启动了 Python 解释器，但是等待您一行一行地输入源代码，每输入一行就执行一行。</p>\n<p>直接运行 <code v-pre>.py</code> 文件相当于启动了 Python 解释器，然后一次性把 <code v-pre>.py</code> 文件的源代码给执行了，您是没有机会以交互的方式输入源代码的。</p>\n<p>用 Python 开发程序，完全可以一边在文本编辑器里写代码，一边开一个交互式命令窗口，在写代码的过程中，把部分代码粘到命令行去验证，事半功倍! 前提是得有个 27’ 的超大显示器!</p>\n</template>","contentStripped":"<p>在正式编写第一个 Python 程序前，我们先复习一下什么是命令行模式和 Python 交互模式。</p>\n<!-- more -->\n<h2 id=\"命令行模式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行模式\"><span>命令行模式</span></a></h2>\n<p>打开“命令提示符”，就进入到命令行模式，它的提示符类似 <code v-pre>C:\\&gt;</code>:</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">相关信息</p>\n<p>如何打开，请见 <RouteLink to=\"/code/windows/cmd.html\">打开命令行</RouteLink></p>\n</div>\n<h2 id=\"python-交互模式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#python-交互模式\"><span>Python 交互模式</span></a></h2>\n<p>在命令行模式下敲命令 <code v-pre>python</code>，就进入到 Python 交互模式，它的提示符是 <code v-pre>&gt;&gt;&gt;</code>。</p>\n<p>在交互模式的提示符 <code v-pre>&gt;&gt;&gt;</code> 下，直接输入代码，按回车，就可以立刻得到代码执行结果。</p>\n<blockquote>\n<p>请敲入 <code v-pre>100 + 200</code> 然后按回车，您就会得到 <code v-pre>300</code>。</p>\n</blockquote>\n<p>如果要让 Python 打印出指定的文字，可以用 <code v-pre>print()</code> 函数，然后把希望打印的文字用单引号或者双引号括起来，但不能混用单引号和双引号。</p>\n<blockquote>\n<p>输入 <code v-pre>print('hello, world')</code> 后回车。</p>\n</blockquote>\n<p>最后，用 <code v-pre>exit()</code> 退出 Python，我们的第一个 Python 程序完成! 唯一的缺憾是没有保存下来，下次运行时还要再输入一遍代码。</p>\n<p>在 Python 的交互式命令行写程序，好处是一下就能得到结果，坏处是没法保存，下次还想运行的时候，还得再敲一遍。</p>\n<p>所以，实际开发的时候，我们总是使用一个文本编辑器来写代码，写完了，保存为一个文件，这样，程序就可以反复运行了。</p>\n<p>现在，我们就把上次的 <code v-pre>'hello, world'</code> 程序用文本编辑器写出来，保存下来。</p>\n<div class=\"hint-container info\">\n<p class=\"hint-container-title\">文本编辑器</p>\n<p>关于文本编辑器，请使用 <RouteLink to=\"/software/vscode/\">VS Code</RouteLink></p>\n</div>\n<p>安装好文本编辑器后，输入以下代码:</p>\n<div class=\"language-py\" data-highlighter=\"shiki\" data-ext=\"py\" data-title=\"py\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">print</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hello, world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n</div><p>注意 <code v-pre>print</code> 前面不要有任何空格。然后，选择一个目录，例如 <code v-pre>C:\\work</code>，把文件保存为 hello.py，就可以打开命令行窗口，把当前目录切换到 hello.py 所在目录，就可以运行这个程序了:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">C:/work</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">python</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">hello,</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> world</span></span></code></pre>\n</div><p>也可以保存为别的名字，比如 first.py，但是必须要以 <code v-pre>.py</code> 结尾，其他的都不行。此外，文件名只能是英文字母、数字和下划线的组合。</p>\n<p>如果当前目录下没有 hello.py 这个文件，运行 <code v-pre>python hello.py</code> 就会报错:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">C:/Users/Mister-Hope</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">python</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">python:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> can't open file 'hello.py': [Errno 2] No such file or directory</span></span></code></pre>\n</div><p>报错的意思就是，无法打开 hello.py 这个文件，因为文件不存在。这个时候，就要检查一下当前目录下是否有这个文件了。如果 hello.py 存放在另外一个目录下，要首先用 <code v-pre>cd</code> 命令切换当前目录。</p>\n<h2 id=\"直接运行-py-文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#直接运行-py-文件\"><span>直接运行 py 文件</span></a></h2>\n<p>您可能有疑问，能不能像 <code v-pre>.exe</code> 文件那样直接运行 <code v-pre>.py</code> 文件呢? 在 Windows 上是不行的，但是，在 Mac 和 Linux 上是可以的，方法是在 <code v-pre>.py</code> 文件的第一行加上一个特殊的注释:</p>\n<div class=\"language-py\" data-highlighter=\"shiki\" data-ext=\"py\" data-title=\"py\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># !/usr/bin/env python3</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">print</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'hello, world'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span></code></pre>\n</div><p>然后，通过命令给 hello.py 以执行权限:</p>\n<div class=\"language-sh\" data-highlighter=\"shiki\" data-ext=\"sh\" data-title=\"sh\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chmod</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a+x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> hello.py</span></span></code></pre>\n</div><p>就可以直接运行 hello.py 了，比如在 Mac 下运行:</p>\n<h2 id=\"小结\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小结\"><span>小结</span></a></h2>\n<p>用文本编辑器写 Python 程序，然后保存为后缀为 <code v-pre>.py</code> 的文件，就可以用 Python 直接运行这个程序了。</p>\n<p>Python 的交互模式和直接运行 <code v-pre>.py</code> 文件有什么区别呢?</p>\n<p>直接输入 python 进入交互模式，相当于启动了 Python 解释器，但是等待您一行一行地输入源代码，每输入一行就执行一行。</p>\n<p>直接运行 <code v-pre>.py</code> 文件相当于启动了 Python 解释器，然后一次性把 <code v-pre>.py</code> 文件的源代码给执行了，您是没有机会以交互的方式输入源代码的。</p>\n<p>用 Python 开发程序，完全可以一边在文本编辑器里写代码，一边开一个交互式命令窗口，在写代码的过程中，把部分代码粘到命令行去验证，事半功倍! 前提是得有个 27’ 的超大显示器!</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n在正式编写第一个 Python 程序前，我们先复习一下什么是命令行模式和 Python 交互模式。\n\n<!-- more -->\n\n## 命令行模式\n\n打开“命令提示符”，就进入到命令行模式，它的提示符类似 `C:\\>`:\n\n::: info\n\n如何打开，请见 [打开命令行](../../../windows/cmd.md)\n\n:::\n\n## Python 交互模式\n\n在命令行模式下敲命令 `python`，就进入到 Python 交互模式，它的提示符是 `>>>`。\n\n在交互模式的提示符 `>>>` 下，直接输入代码，按回车，就可以立刻得到代码执行结果。\n\n> 请敲入 `100 + 200` 然后按回车，您就会得到 `300`。\n\n如果要让 Python 打印出指定的文字，可以用 `print()` 函数，然后把希望打印的文字用单引号或者双引号括起来，但不能混用单引号和双引号。\n\n> 输入 `print('hello, world')` 后回车。\n\n最后，用 `exit()` 退出 Python，我们的第一个 Python 程序完成! 唯一的缺憾是没有保存下来，下次运行时还要再输入一遍代码。\n\n在 Python 的交互式命令行写程序，好处是一下就能得到结果，坏处是没法保存，下次还想运行的时候，还得再敲一遍。\n\n所以，实际开发的时候，我们总是使用一个文本编辑器来写代码，写完了，保存为一个文件，这样，程序就可以反复运行了。\n\n现在，我们就把上次的 `'hello, world'` 程序用文本编辑器写出来，保存下来。\n\n::: info 文本编辑器\n\n关于文本编辑器，请使用 [VS Code](../../../../software/vscode/README.md)\n\n:::\n\n安装好文本编辑器后，输入以下代码:\n\n```py\nprint('hello, world')\n```\n\n注意 `print` 前面不要有任何空格。然后，选择一个目录，例如 `C:\\work`，把文件保存为 hello.py，就可以打开命令行窗口，把当前目录切换到 hello.py 所在目录，就可以运行这个程序了:\n\n```sh\nC:/work> python hello.py\nhello, world\n```\n\n也可以保存为别的名字，比如 first.py，但是必须要以 `.py` 结尾，其他的都不行。此外，文件名只能是英文字母、数字和下划线的组合。\n\n如果当前目录下没有 hello.py 这个文件，运行 `python hello.py` 就会报错:\n\n```sh\nC:/Users/Mister-Hope> python hello.py\npython: can't open file 'hello.py': [Errno 2] No such file or directory\n```\n\n报错的意思就是，无法打开 hello.py 这个文件，因为文件不存在。这个时候，就要检查一下当前目录下是否有这个文件了。如果 hello.py 存放在另外一个目录下，要首先用 `cd` 命令切换当前目录。\n\n## 直接运行 py 文件\n\n您可能有疑问，能不能像 `.exe` 文件那样直接运行 `.py` 文件呢? 在 Windows 上是不行的，但是，在 Mac 和 Linux 上是可以的，方法是在 `.py` 文件的第一行加上一个特殊的注释:\n\n```py\n# !/usr/bin/env python3\n\nprint('hello, world')\n```\n\n然后，通过命令给 hello.py 以执行权限:\n\n```sh\nchmod a+x hello.py\n```\n\n就可以直接运行 hello.py 了，比如在 Mac 下运行:\n\n## 小结\n\n用文本编辑器写 Python 程序，然后保存为后缀为 `.py` 的文件，就可以用 Python 直接运行这个程序了。\n\nPython 的交互模式和直接运行 `.py` 文件有什么区别呢?\n\n直接输入 python 进入交互模式，相当于启动了 Python 解释器，但是等待您一行一行地输入源代码，每输入一行就执行一行。\n\n直接运行 `.py` 文件相当于启动了 Python 解释器，然后一次性把 `.py` 文件的源代码给执行了，您是没有机会以交互的方式输入源代码的。\n\n用 Python 开发程序，完全可以一边在文本编辑器里写代码，一边开一个交互式命令窗口，在写代码的过程中，把部分代码粘到命令行去验证，事半功倍! 前提是得有个 27’ 的超大显示器!\n","excerpt":"","title":"","headers":[{"level":2,"title":"命令行模式","slug":"命令行模式","link":"#命令行模式","children":[]},{"level":2,"title":"Python 交互模式","slug":"python-交互模式","link":"#python-交互模式","children":[]},{"level":2,"title":"直接运行 py 文件","slug":"直接运行-py-文件","link":"#直接运行-py-文件","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"links":[{"raw":"../../../windows/cmd.md","relative":"code/windows/cmd.md","absolute":"/code/windows/cmd.md"},{"raw":"../../../../software/vscode/README.md","relative":"software/vscode/README.md","absolute":"/software/vscode/README.md"}]}}
