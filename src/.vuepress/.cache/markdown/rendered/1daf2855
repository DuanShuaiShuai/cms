{"content":"<p>文件系统是小程序提供的一套以小程序和用户维度隔离的存储以及一套相应的管理接口。通过 <code v-pre>wx.getFileSystemManager()</code> 可以获取到全局唯一的文件系统管理器，所有文件系统的管理操作通过 FileSystemManager 来调用。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getFileSystemManager</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n</div><p>文件主要分为两大类:</p>\n<ul>\n<li>代码包文件: 代码包文件指的是在项目目录中添加的文件。</li>\n<li>本地文件: 通过调用接口本地产生，或通过网络下载下来，存储到本地的文件。</li>\n</ul>\n<!-- more -->\n<p>其中本地文件又分为三种:</p>\n<ul>\n<li>\n<p>本地临时文件: 临时产生，随时会被回收的文件。不限制存储大小。</p>\n</li>\n<li>\n<p>本地缓存文件: 小程序通过接口把本地临时文件缓存后产生的文件，不能自定义目录和文件名。跟本地用户文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。</p>\n</li>\n<li>\n<p>本地用户文件: 小程序通过接口把本地临时文件缓存后产生的文件，允许自定义目录和文件名。跟本地缓存文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。</p>\n</li>\n</ul>\n<h2 id=\"代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#代码包文件\"><span>代码包文件</span></a></h2>\n<p>由于代码包文件大小限制，代码包文件适用于放置首次加载时需要的文件。</p>\n<h3 id=\"访问代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#访问代码包文件\"><span>访问代码包文件</span></a></h3>\n<p>代码包文件的访问方式是从项目根目录开始写文件路径，不支持相对路径的写法。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>这个和 Node.js 是不一样的，请特别注意一下。</p>\n<p>如: <code v-pre>/a/b/c</code>、<code v-pre>a/b/c</code> 都是合法的，<code v-pre>./a/b/c</code> <code v-pre>../a/b/c</code> 则不合法。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/code-package.ea949c8d.png\" alt=\"path\" tabindex=\"0\" loading=\"lazy\"><figcaption>path</figcaption></figure>\n</div>\n<h3 id=\"修改代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#修改代码包文件\"><span>修改代码包文件</span></a></h3>\n<p>代码包内的文件无法在运行后动态修改或删除，修改代码包文件需要重新发布版本。</p>\n<h3 id=\"本地文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地文件\"><span>本地文件</span></a></h3>\n<p>本地文件指的是小程序被用户添加到手机后，会有一块独立的文件存储区域，以用户维度隔离。即同一台手机，每个微信用户不能访问到其他登录用户的文件，同一个用户不同 appId 之间的文件也不能互相访问。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/file-sandbox.9ef4d15a.png\" alt=\"本地文件沙盒.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>本地文件沙盒.png</figcaption></figure>\n<p>本地文件的文件路径均为以下格式:</p>\n<div v-pre>\n<p><code v-pre>{{协议名}}://文件路径</code></p>\n</div>\n<blockquote>\n<p>其中，协议名在 iOS/Android 客户端为 <code v-pre>&quot;wxfile&quot;</code>，在开发者工具上为 <code v-pre>&quot;http&quot;</code>，开发者无需关注这个差异，也不应在代码中去硬编码完整文件路径。</p>\n</blockquote>\n<h3 id=\"本地临时文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地临时文件\"><span>本地临时文件</span></a></h3>\n<p>本地临时文件只能通过调用特定接口产生，不能直接写入内容。本地临时文件产生后，仅在当前生命周期内有效，重启之后即不可用。因此，不可把本地临时文件路径存储起来下次使用。如果需要下次在使用，可通过 <code v-pre>FileSystemManager.saveFile()</code> 或 <code v-pre>FileSystemManager.copyFile()</code> 接口把本地临时文件转换成本地缓存文件或本地用户文件。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chooseImage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> } </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// tempFilePaths 的每一项是一个本地临时文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h3 id=\"本地缓存文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地缓存文件\"><span>本地缓存文件 <Badge text=\"无需使用\" type=\"grey\" /></span></a></h3>\n<p>本地缓存文件只能通过调用特定接口产生，不能直接写入内容。本地缓存文件产生后，重启之后仍可用。本地缓存文件只能通过 <code v-pre>FileSystemManager.saveFile()</code> 接口将本地临时文件保存获得。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">saveFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  tempFilePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 传入一个本地临时文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">savedFilePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// res.savedFilePath 为一个本地缓存文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>本地缓存文件是最初的设计，1.7.0 版本开始，提供了功能更完整的本地用户文件，可以完全覆盖本地缓存文件的功能，如果不需要兼容低于 1.7.0 版本，可以不使用本地缓存文件。</p>\n</div>\n<h3 id=\"本地用户文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地用户文件\"><span>本地用户文件 <Badge text=\"重要\" type=\"error\" /></span></a></h3>\n<blockquote>\n<p>从 1.7.0 版本开始新增</p>\n</blockquote>\n<p>小程序提供了一个用户文件目录，有完全自由的读写权限。通过 <code v-pre>wx.env.USER_DATA_PATH</code> 可以获取到这个目录的路径。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 在本地用户文件目录下创建一个文件 hello.txt，写入内容 \"hello, world\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getFileSystemManager</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">env</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">USER_DATA_PATH</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/hello.txt`</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello, world\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"utf8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><h4 id=\"读写权限\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#读写权限\"><span>读写权限</span></a></h4>\n<table>\n<thead>\n<tr>\n<th>接口、组件</th>\n<th>读</th>\n<th>写</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>代码包文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地临时文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地缓存文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地用户文件</td>\n<td>有</td>\n<td>有</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"清理策略\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#清理策略\"><span>清理策略</span></a></h3>\n<ul>\n<li>本地临时文件只保证在小程序当前生命周期内，一旦小程序被关闭就可能被清理，即下次冷启动不保证可用。</li>\n<li>本地缓存文件和本地用户文件的清理时机跟代码包一样，只有在代码包被清理的时会被清理。</li>\n</ul>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>所以说本地用户文件是十分保险的，本地用户文件一定和小程序文件一起消失。</p>\n<p>注: 如果用户太长时间不使用小程序或者手机空间不足，小程序代码包也是可能被杀掉的。这样用户本地的所有数据就会一起丢失。用户再次打开小程序会重新下载小程序代码包并进入初始化流程。</p>\n</div>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/work/cms/src/code/mini-app/guide/ability/file-system.md","filePathRelative":"code/mini-app/guide/ability/file-system.md","frontmatter":{"date":"2020-10-09T00:00:00.000Z","title":"文件系统","icon":"file","category":"小程序"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>文件系统是小程序提供的一套以小程序和用户维度隔离的存储以及一套相应的管理接口。通过 <code v-pre>wx.getFileSystemManager()</code> 可以获取到全局唯一的文件系统管理器，所有文件系统的管理操作通过 FileSystemManager 来调用。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getFileSystemManager</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n</div><p>文件主要分为两大类:</p>\n<ul>\n<li>代码包文件: 代码包文件指的是在项目目录中添加的文件。</li>\n<li>本地文件: 通过调用接口本地产生，或通过网络下载下来，存储到本地的文件。</li>\n</ul>\n<!-- more -->\n<p>其中本地文件又分为三种:</p>\n<ul>\n<li>\n<p>本地临时文件: 临时产生，随时会被回收的文件。不限制存储大小。</p>\n</li>\n<li>\n<p>本地缓存文件: 小程序通过接口把本地临时文件缓存后产生的文件，不能自定义目录和文件名。跟本地用户文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。</p>\n</li>\n<li>\n<p>本地用户文件: 小程序通过接口把本地临时文件缓存后产生的文件，允许自定义目录和文件名。跟本地缓存文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。</p>\n</li>\n</ul>\n<h2 id=\"代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#代码包文件\"><span>代码包文件</span></a></h2>\n<p>由于代码包文件大小限制，代码包文件适用于放置首次加载时需要的文件。</p>\n<h3 id=\"访问代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#访问代码包文件\"><span>访问代码包文件</span></a></h3>\n<p>代码包文件的访问方式是从项目根目录开始写文件路径，不支持相对路径的写法。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>这个和 Node.js 是不一样的，请特别注意一下。</p>\n<p>如: <code v-pre>/a/b/c</code>、<code v-pre>a/b/c</code> 都是合法的，<code v-pre>./a/b/c</code> <code v-pre>../a/b/c</code> 则不合法。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/code-package.ea949c8d.png\" alt=\"path\" tabindex=\"0\" loading=\"lazy\"><figcaption>path</figcaption></figure>\n</div>\n<h3 id=\"修改代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#修改代码包文件\"><span>修改代码包文件</span></a></h3>\n<p>代码包内的文件无法在运行后动态修改或删除，修改代码包文件需要重新发布版本。</p>\n<h3 id=\"本地文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地文件\"><span>本地文件</span></a></h3>\n<p>本地文件指的是小程序被用户添加到手机后，会有一块独立的文件存储区域，以用户维度隔离。即同一台手机，每个微信用户不能访问到其他登录用户的文件，同一个用户不同 appId 之间的文件也不能互相访问。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/file-sandbox.9ef4d15a.png\" alt=\"本地文件沙盒.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>本地文件沙盒.png</figcaption></figure>\n<p>本地文件的文件路径均为以下格式:</p>\n<div v-pre>\n<p><code v-pre>{{协议名}}://文件路径</code></p>\n</div>\n<blockquote>\n<p>其中，协议名在 iOS/Android 客户端为 <code v-pre>&quot;wxfile&quot;</code>，在开发者工具上为 <code v-pre>&quot;http&quot;</code>，开发者无需关注这个差异，也不应在代码中去硬编码完整文件路径。</p>\n</blockquote>\n<h3 id=\"本地临时文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地临时文件\"><span>本地临时文件</span></a></h3>\n<p>本地临时文件只能通过调用特定接口产生，不能直接写入内容。本地临时文件产生后，仅在当前生命周期内有效，重启之后即不可用。因此，不可把本地临时文件路径存储起来下次使用。如果需要下次在使用，可通过 <code v-pre>FileSystemManager.saveFile()</code> 或 <code v-pre>FileSystemManager.copyFile()</code> 接口把本地临时文件转换成本地缓存文件或本地用户文件。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chooseImage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> } </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// tempFilePaths 的每一项是一个本地临时文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h3 id=\"本地缓存文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地缓存文件\"><span>本地缓存文件 <Badge text=\"无需使用\" type=\"grey\" /></span></a></h3>\n<p>本地缓存文件只能通过调用特定接口产生，不能直接写入内容。本地缓存文件产生后，重启之后仍可用。本地缓存文件只能通过 <code v-pre>FileSystemManager.saveFile()</code> 接口将本地临时文件保存获得。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">saveFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  tempFilePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 传入一个本地临时文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">savedFilePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// res.savedFilePath 为一个本地缓存文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>本地缓存文件是最初的设计，1.7.0 版本开始，提供了功能更完整的本地用户文件，可以完全覆盖本地缓存文件的功能，如果不需要兼容低于 1.7.0 版本，可以不使用本地缓存文件。</p>\n</div>\n<h3 id=\"本地用户文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地用户文件\"><span>本地用户文件 <Badge text=\"重要\" type=\"error\" /></span></a></h3>\n<blockquote>\n<p>从 1.7.0 版本开始新增</p>\n</blockquote>\n<p>小程序提供了一个用户文件目录，有完全自由的读写权限。通过 <code v-pre>wx.env.USER_DATA_PATH</code> 可以获取到这个目录的路径。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 在本地用户文件目录下创建一个文件 hello.txt，写入内容 \"hello, world\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getFileSystemManager</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">env</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">USER_DATA_PATH</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/hello.txt`</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello, world\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"utf8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><h4 id=\"读写权限\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#读写权限\"><span>读写权限</span></a></h4>\n<table>\n<thead>\n<tr>\n<th>接口、组件</th>\n<th>读</th>\n<th>写</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>代码包文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地临时文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地缓存文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地用户文件</td>\n<td>有</td>\n<td>有</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"清理策略\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#清理策略\"><span>清理策略</span></a></h3>\n<ul>\n<li>本地临时文件只保证在小程序当前生命周期内，一旦小程序被关闭就可能被清理，即下次冷启动不保证可用。</li>\n<li>本地缓存文件和本地用户文件的清理时机跟代码包一样，只有在代码包被清理的时会被清理。</li>\n</ul>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>所以说本地用户文件是十分保险的，本地用户文件一定和小程序文件一起消失。</p>\n<p>注: 如果用户太长时间不使用小程序或者手机空间不足，小程序代码包也是可能被杀掉的。这样用户本地的所有数据就会一起丢失。用户再次打开小程序会重新下载小程序代码包并进入初始化流程。</p>\n</div>\n</template>","contentStripped":"<p>文件系统是小程序提供的一套以小程序和用户维度隔离的存储以及一套相应的管理接口。通过 <code v-pre>wx.getFileSystemManager()</code> 可以获取到全局唯一的文件系统管理器，所有文件系统的管理操作通过 FileSystemManager 来调用。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getFileSystemManager</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span></code></pre>\n</div><p>文件主要分为两大类:</p>\n<ul>\n<li>代码包文件: 代码包文件指的是在项目目录中添加的文件。</li>\n<li>本地文件: 通过调用接口本地产生，或通过网络下载下来，存储到本地的文件。</li>\n</ul>\n<!-- more -->\n<p>其中本地文件又分为三种:</p>\n<ul>\n<li>\n<p>本地临时文件: 临时产生，随时会被回收的文件。不限制存储大小。</p>\n</li>\n<li>\n<p>本地缓存文件: 小程序通过接口把本地临时文件缓存后产生的文件，不能自定义目录和文件名。跟本地用户文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。</p>\n</li>\n<li>\n<p>本地用户文件: 小程序通过接口把本地临时文件缓存后产生的文件，允许自定义目录和文件名。跟本地缓存文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。</p>\n</li>\n</ul>\n<h2 id=\"代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#代码包文件\"><span>代码包文件</span></a></h2>\n<p>由于代码包文件大小限制，代码包文件适用于放置首次加载时需要的文件。</p>\n<h3 id=\"访问代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#访问代码包文件\"><span>访问代码包文件</span></a></h3>\n<p>代码包文件的访问方式是从项目根目录开始写文件路径，不支持相对路径的写法。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>这个和 Node.js 是不一样的，请特别注意一下。</p>\n<p>如: <code v-pre>/a/b/c</code>、<code v-pre>a/b/c</code> 都是合法的，<code v-pre>./a/b/c</code> <code v-pre>../a/b/c</code> 则不合法。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/code-package.ea949c8d.png\" alt=\"path\" tabindex=\"0\" loading=\"lazy\"><figcaption>path</figcaption></figure>\n</div>\n<h3 id=\"修改代码包文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#修改代码包文件\"><span>修改代码包文件</span></a></h3>\n<p>代码包内的文件无法在运行后动态修改或删除，修改代码包文件需要重新发布版本。</p>\n<h3 id=\"本地文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地文件\"><span>本地文件</span></a></h3>\n<p>本地文件指的是小程序被用户添加到手机后，会有一块独立的文件存储区域，以用户维度隔离。即同一台手机，每个微信用户不能访问到其他登录用户的文件，同一个用户不同 appId 之间的文件也不能互相访问。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/file-sandbox.9ef4d15a.png\" alt=\"本地文件沙盒.png\" tabindex=\"0\" loading=\"lazy\"><figcaption>本地文件沙盒.png</figcaption></figure>\n<p>本地文件的文件路径均为以下格式:</p>\n<div v-pre>\n<p><code v-pre>{{协议名}}://文件路径</code></p>\n</div>\n<blockquote>\n<p>其中，协议名在 iOS/Android 客户端为 <code v-pre>&quot;wxfile&quot;</code>，在开发者工具上为 <code v-pre>&quot;http&quot;</code>，开发者无需关注这个差异，也不应在代码中去硬编码完整文件路径。</p>\n</blockquote>\n<h3 id=\"本地临时文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地临时文件\"><span>本地临时文件</span></a></h3>\n<p>本地临时文件只能通过调用特定接口产生，不能直接写入内容。本地临时文件产生后，仅在当前生命周期内有效，重启之后即不可用。因此，不可把本地临时文件路径存储起来下次使用。如果需要下次在使用，可通过 <code v-pre>FileSystemManager.saveFile()</code> 或 <code v-pre>FileSystemManager.copyFile()</code> 接口把本地临时文件转换成本地缓存文件或本地用户文件。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">chooseImage</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">tempFilePaths</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> } </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// tempFilePaths 的每一项是一个本地临时文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><h3 id=\"本地缓存文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地缓存文件\"><span>本地缓存文件 <Badge text=\"无需使用\" type=\"grey\" /></span></a></h3>\n<p>本地缓存文件只能通过调用特定接口产生，不能直接写入内容。本地缓存文件产生后，重启之后仍可用。本地缓存文件只能通过 <code v-pre>FileSystemManager.saveFile()</code> 接口将本地临时文件保存获得。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">saveFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  tempFilePath</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 传入一个本地临时文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">savedFilePath</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// res.savedFilePath 为一个本地缓存文件路径</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>本地缓存文件是最初的设计，1.7.0 版本开始，提供了功能更完整的本地用户文件，可以完全覆盖本地缓存文件的功能，如果不需要兼容低于 1.7.0 版本，可以不使用本地缓存文件。</p>\n</div>\n<h3 id=\"本地用户文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#本地用户文件\"><span>本地用户文件 <Badge text=\"重要\" type=\"error\" /></span></a></h3>\n<blockquote>\n<p>从 1.7.0 版本开始新增</p>\n</blockquote>\n<p>小程序提供了一个用户文件目录，有完全自由的读写权限。通过 <code v-pre>wx.env.USER_DATA_PATH</code> 可以获取到这个目录的路径。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 在本地用户文件目录下创建一个文件 hello.txt，写入内容 \"hello, world\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getFileSystemManager</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">`</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">env</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">USER_DATA_PATH</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/hello.txt`</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello, world\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"utf8\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><h4 id=\"读写权限\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#读写权限\"><span>读写权限</span></a></h4>\n<table>\n<thead>\n<tr>\n<th>接口、组件</th>\n<th>读</th>\n<th>写</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>代码包文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地临时文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地缓存文件</td>\n<td>有</td>\n<td>无</td>\n</tr>\n<tr>\n<td>本地用户文件</td>\n<td>有</td>\n<td>有</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"清理策略\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#清理策略\"><span>清理策略</span></a></h3>\n<ul>\n<li>本地临时文件只保证在小程序当前生命周期内，一旦小程序被关闭就可能被清理，即下次冷启动不保证可用。</li>\n<li>本地缓存文件和本地用户文件的清理时机跟代码包一样，只有在代码包被清理的时会被清理。</li>\n</ul>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>所以说本地用户文件是十分保险的，本地用户文件一定和小程序文件一起消失。</p>\n<p>注: 如果用户太长时间不使用小程序或者手机空间不足，小程序代码包也是可能被杀掉的。这样用户本地的所有数据就会一起丢失。用户再次打开小程序会重新下载小程序代码包并进入初始化流程。</p>\n</div>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n文件系统是小程序提供的一套以小程序和用户维度隔离的存储以及一套相应的管理接口。通过 `wx.getFileSystemManager()` 可以获取到全局唯一的文件系统管理器，所有文件系统的管理操作通过 FileSystemManager 来调用。\n\n```js\nconst fs = wx.getFileSystemManager();\n```\n\n文件主要分为两大类:\n\n- 代码包文件: 代码包文件指的是在项目目录中添加的文件。\n- 本地文件: 通过调用接口本地产生，或通过网络下载下来，存储到本地的文件。\n\n<!-- more -->\n\n其中本地文件又分为三种:\n\n- 本地临时文件: 临时产生，随时会被回收的文件。不限制存储大小。\n\n- 本地缓存文件: 小程序通过接口把本地临时文件缓存后产生的文件，不能自定义目录和文件名。跟本地用户文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。\n\n- 本地用户文件: 小程序通过接口把本地临时文件缓存后产生的文件，允许自定义目录和文件名。跟本地缓存文件共计，普通小程序最多可存储 10MB，游戏类目的小程序最多可存储 50MB。\n\n## 代码包文件\n\n由于代码包文件大小限制，代码包文件适用于放置首次加载时需要的文件。\n\n### 访问代码包文件\n\n代码包文件的访问方式是从项目根目录开始写文件路径，不支持相对路径的写法。\n\n::: warning\n\n这个和 Node.js 是不一样的，请特别注意一下。\n\n如: `/a/b/c`、`a/b/c` 都是合法的，`./a/b/c` `../a/b/c` 则不合法。\n\n![path](https://res.wx.qq.com/wxdoc/dist/assets/img/code-package.ea949c8d.png)\n\n:::\n\n### 修改代码包文件\n\n代码包内的文件无法在运行后动态修改或删除，修改代码包文件需要重新发布版本。\n\n### 本地文件\n\n本地文件指的是小程序被用户添加到手机后，会有一块独立的文件存储区域，以用户维度隔离。即同一台手机，每个微信用户不能访问到其他登录用户的文件，同一个用户不同 appId 之间的文件也不能互相访问。\n\n![本地文件沙盒.png](https://res.wx.qq.com/wxdoc/dist/assets/img/file-sandbox.9ef4d15a.png)\n\n本地文件的文件路径均为以下格式:\n\n::: v-pre\n\n`{{协议名}}://文件路径`\n\n:::\n\n> 其中，协议名在 iOS/Android 客户端为 `\"wxfile\"`，在开发者工具上为 `\"http\"`，开发者无需关注这个差异，也不应在代码中去硬编码完整文件路径。\n\n### 本地临时文件\n\n本地临时文件只能通过调用特定接口产生，不能直接写入内容。本地临时文件产生后，仅在当前生命周期内有效，重启之后即不可用。因此，不可把本地临时文件路径存储起来下次使用。如果需要下次在使用，可通过 `FileSystemManager.saveFile()` 或 `FileSystemManager.copyFile()` 接口把本地临时文件转换成本地缓存文件或本地用户文件。\n\n```js\nwx.chooseImage({\n  success: (res) => {\n    const { tempFilePaths } = res; // tempFilePaths 的每一项是一个本地临时文件路径\n  },\n});\n```\n\n### 本地缓存文件 <Badge text=\"无需使用\" type=\"grey\" />\n\n本地缓存文件只能通过调用特定接口产生，不能直接写入内容。本地缓存文件产生后，重启之后仍可用。本地缓存文件只能通过 `FileSystemManager.saveFile()` 接口将本地临时文件保存获得。\n\n```js\nfs.saveFile({\n  tempFilePath: \"\", // 传入一个本地临时文件路径\n  success: (res) => {\n    console.log(res.savedFilePath); // res.savedFilePath 为一个本地缓存文件路径\n  },\n});\n```\n\n::: tip\n\n本地缓存文件是最初的设计，1.7.0 版本开始，提供了功能更完整的本地用户文件，可以完全覆盖本地缓存文件的功能，如果不需要兼容低于 1.7.0 版本，可以不使用本地缓存文件。\n\n:::\n\n### 本地用户文件 <Badge text=\"重要\" type=\"error\" />\n\n> 从 1.7.0 版本开始新增\n\n小程序提供了一个用户文件目录，有完全自由的读写权限。通过 `wx.env.USER_DATA_PATH` 可以获取到这个目录的路径。\n\n```js\n// 在本地用户文件目录下创建一个文件 hello.txt，写入内容 \"hello, world\"\nconst fs = wx.getFileSystemManager();\nfs.writeFileSync(`${wx.env.USER_DATA_PATH}/hello.txt`, \"hello, world\", \"utf8\");\n```\n\n#### 读写权限\n\n| 接口、组件   | 读  | 写  |\n| ------------ | --- | --- |\n| 代码包文件   | 有  | 无  |\n| 本地临时文件 | 有  | 无  |\n| 本地缓存文件 | 有  | 无  |\n| 本地用户文件 | 有  | 有  |\n\n### 清理策略\n\n- 本地临时文件只保证在小程序当前生命周期内，一旦小程序被关闭就可能被清理，即下次冷启动不保证可用。\n- 本地缓存文件和本地用户文件的清理时机跟代码包一样，只有在代码包被清理的时会被清理。\n\n::: tip\n\n所以说本地用户文件是十分保险的，本地用户文件一定和小程序文件一起消失。\n\n注: 如果用户太长时间不使用小程序或者手机空间不足，小程序代码包也是可能被杀掉的。这样用户本地的所有数据就会一起丢失。用户再次打开小程序会重新下载小程序代码包并进入初始化流程。\n\n:::\n","excerpt":"","title":"","headers":[{"level":2,"title":"代码包文件","slug":"代码包文件","link":"#代码包文件","children":[{"level":3,"title":"访问代码包文件","slug":"访问代码包文件","link":"#访问代码包文件","children":[]},{"level":3,"title":"修改代码包文件","slug":"修改代码包文件","link":"#修改代码包文件","children":[]},{"level":3,"title":"本地文件","slug":"本地文件","link":"#本地文件","children":[]},{"level":3,"title":"本地临时文件","slug":"本地临时文件","link":"#本地临时文件","children":[]},{"level":3,"title":"本地缓存文件","slug":"本地缓存文件","link":"#本地缓存文件","children":[]},{"level":3,"title":"本地用户文件","slug":"本地用户文件","link":"#本地用户文件","children":[]},{"level":3,"title":"清理策略","slug":"清理策略","link":"#清理策略","children":[]}]}]}}
