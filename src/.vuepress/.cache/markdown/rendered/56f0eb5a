{"content":"<p>二进制位运算符用于直接对二进制位进行计算，一共有 7 个。</p>\n<ul>\n<li><strong>二进制或运算符</strong>(or): 符号为 <code v-pre>|</code>，表示若两个二进制位都为 <code v-pre>0</code>，则结果为 <code v-pre>0</code>，否则为 <code v-pre>1</code>。</li>\n<li><strong>二进制与运算符</strong>(and): 符号为 <code v-pre>&amp;</code>，表示若两个二进制位都为 1，则结果为 1，否则为 0。</li>\n<li><strong>二进制否运算符</strong>(not): 符号为 <code v-pre>~</code>，表示对一个二进制位取反。</li>\n<li><strong>异或运算符</strong>(xor): 符号为 <code v-pre>^</code>，表示若两个二进制位不相同，则结果为 1，否则为 0。</li>\n<li><strong>左移运算符</strong>(left shift): 符号为 <code v-pre>&lt;&lt;</code>，详见下文解释。</li>\n<li><strong>右移运算符</strong>(right shift): 符号为 <code v-pre>&gt;&gt;</code>，详见下文解释。</li>\n<li><strong>头部补零的右移运算符</strong>(zero filled right shift): 符号为 <code v-pre>&gt;&gt;&gt;</code>，详见下文解释。</li>\n</ul>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/language/js/operators/bit.md","filePathRelative":"code/language/js/operators/bit.md","frontmatter":{"title":"二进制位运算符","icon":"bit","date":"2019-09-28T00:00:00.000Z","category":"JavaScript"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>二进制位运算符用于直接对二进制位进行计算，一共有 7 个。</p>\n<ul>\n<li><strong>二进制或运算符</strong>(or): 符号为 <code v-pre>|</code>，表示若两个二进制位都为 <code v-pre>0</code>，则结果为 <code v-pre>0</code>，否则为 <code v-pre>1</code>。</li>\n<li><strong>二进制与运算符</strong>(and): 符号为 <code v-pre>&amp;</code>，表示若两个二进制位都为 1，则结果为 1，否则为 0。</li>\n<li><strong>二进制否运算符</strong>(not): 符号为 <code v-pre>~</code>，表示对一个二进制位取反。</li>\n<li><strong>异或运算符</strong>(xor): 符号为 <code v-pre>^</code>，表示若两个二进制位不相同，则结果为 1，否则为 0。</li>\n<li><strong>左移运算符</strong>(left shift): 符号为 <code v-pre>&lt;&lt;</code>，详见下文解释。</li>\n<li><strong>右移运算符</strong>(right shift): 符号为 <code v-pre>&gt;&gt;</code>，详见下文解释。</li>\n<li><strong>头部补零的右移运算符</strong>(zero filled right shift): 符号为 <code v-pre>&gt;&gt;&gt;</code>，详见下文解释。</li>\n</ul>\n</template>","contentStripped":"<p>二进制位运算符用于直接对二进制位进行计算，一共有 7 个。</p>\n<ul>\n<li><strong>二进制或运算符</strong>(or): 符号为 <code v-pre>|</code>，表示若两个二进制位都为 <code v-pre>0</code>，则结果为 <code v-pre>0</code>，否则为 <code v-pre>1</code>。</li>\n<li><strong>二进制与运算符</strong>(and): 符号为 <code v-pre>&amp;</code>，表示若两个二进制位都为 1，则结果为 1，否则为 0。</li>\n<li><strong>二进制否运算符</strong>(not): 符号为 <code v-pre>~</code>，表示对一个二进制位取反。</li>\n<li><strong>异或运算符</strong>(xor): 符号为 <code v-pre>^</code>，表示若两个二进制位不相同，则结果为 1，否则为 0。</li>\n<li><strong>左移运算符</strong>(left shift): 符号为 <code v-pre>&lt;&lt;</code>，详见下文解释。</li>\n<li><strong>右移运算符</strong>(right shift): 符号为 <code v-pre>&gt;&gt;</code>，详见下文解释。</li>\n<li><strong>头部补零的右移运算符</strong>(zero filled right shift): 符号为 <code v-pre>&gt;&gt;&gt;</code>，详见下文解释。</li>\n</ul>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n二进制位运算符用于直接对二进制位进行计算，一共有 7 个。\n\n- **二进制或运算符**(or): 符号为 `|`，表示若两个二进制位都为 `0`，则结果为 `0`，否则为 `1`。\n- **二进制与运算符**(and): 符号为 `&`，表示若两个二进制位都为 1，则结果为 1，否则为 0。\n- **二进制否运算符**(not): 符号为 `~`，表示对一个二进制位取反。\n- **异或运算符**(xor): 符号为 `^`，表示若两个二进制位不相同，则结果为 1，否则为 0。\n- **左移运算符**(left shift): 符号为 `<<`，详见下文解释。\n- **右移运算符**(right shift): 符号为 `>>`，详见下文解释。\n- **头部补零的右移运算符**(zero filled right shift): 符号为 `>>>`，详见下文解释。\n\n","excerpt":"","title":"","headers":[]}}
