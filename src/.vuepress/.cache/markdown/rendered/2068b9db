{"content":"<p>JSON: JavaScript Object Notation(JavaScript 对象表示法)</p>\n<ul>\n<li>\n<p>JSON 是存储和交换文本信息的语法。类似 XML。</p>\n</li>\n<li>\n<p>JSON 比 XML 更小、更快，更易解析。</p>\n</li>\n<li>\n<p>JSON 是轻量级的文本数据交换格式</p>\n</li>\n<li>\n<p>JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。</p>\n</li>\n<li>\n<p>JSON 具有自我描述性，更易理解</p>\n</li>\n</ul>\n<!-- more -->\n<h2 id=\"json-值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-值\"><span>JSON 值</span></a></h2>\n<p>JSON 值可以是:</p>\n<ul>\n<li>数字(整数或浮点数)</li>\n<li>字符串(在双引号中)</li>\n<li>逻辑值(<code v-pre>true</code> 或 <code v-pre>false</code>)</li>\n<li>数组(在中括号中)</li>\n<li>对象(在大括号中)</li>\n<li>null</li>\n</ul>\n<h2 id=\"json-数字\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-数字\"><span>JSON 数字</span></a></h2>\n<p>JSON 数字可以是整型或者浮点型:</p>\n<p><strong>例:</strong></p>\n<ul>\n<li><code v-pre>5201314</code></li>\n<li><code v-pre>-1</code></li>\n<li><code v-pre>3.141592654</code></li>\n</ul>\n<h2 id=\"json-布尔值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-布尔值\"><span>JSON 布尔值</span></a></h2>\n<p>JSON 布尔值可以是 <code v-pre>true</code> 或者 <code v-pre>false</code></p>\n<h2 id=\"json-字符串\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-字符串\"><span>JSON 字符串</span></a></h2>\n<p>JSON 字符串需要用双括号 <code v-pre>&quot;</code> 包含，如果内部含有英文引号 <code v-pre>&quot;</code>，需要使用 <code v-pre>\\</code> 转义。</p>\n<p><strong>例:</strong></p>\n<ul>\n<li><code v-pre>&quot;Mister.Duan is handsome&quot;</code></li>\n<li><code v-pre>&quot;春眠不觉晓，处处闻啼鸟&quot;</code></li>\n<li><code v-pre>&quot;A saying goes: \\&quot;Great hopes make great man.\\&quot;&quot;</code></li>\n</ul>\n<h2 id=\"json-对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-对象\"><span>JSON 对象</span></a></h2>\n<p>JSON 对象在大括号 <code v-pre>{}</code> 中书写以 <code v-pre>键: 值</code> 对的方式书写，不同键值对之间用 <code v-pre>,</code> 分隔。</p>\n<p><strong>例:</strong></p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"tag\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"heading\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"校园卡说明\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"text\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"校园卡是东师的金融消费卡\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"json-数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-数组\"><span>JSON 数组</span></a></h2>\n<p>JSON 数组在中括号 <code v-pre>[]</code> 中书写，不同元素间用 <code v-pre>,</code> 隔开。</p>\n<h2 id=\"json-null\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-null\"><span>JSON null</span></a></h2>\n<p>JSON 可以设置 <code v-pre>null</code> 值</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/work/cms/src/code/language/json/README.md","filePathRelative":"code/language/json/README.md","frontmatter":{"title":"JSON 教程","icon":"json","date":"2020-07-25T00:00:00.000Z","category":"JSON"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>JSON: JavaScript Object Notation(JavaScript 对象表示法)</p>\n<ul>\n<li>\n<p>JSON 是存储和交换文本信息的语法。类似 XML。</p>\n</li>\n<li>\n<p>JSON 比 XML 更小、更快，更易解析。</p>\n</li>\n<li>\n<p>JSON 是轻量级的文本数据交换格式</p>\n</li>\n<li>\n<p>JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。</p>\n</li>\n<li>\n<p>JSON 具有自我描述性，更易理解</p>\n</li>\n</ul>\n<!-- more -->\n<h2 id=\"json-值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-值\"><span>JSON 值</span></a></h2>\n<p>JSON 值可以是:</p>\n<ul>\n<li>数字(整数或浮点数)</li>\n<li>字符串(在双引号中)</li>\n<li>逻辑值(<code v-pre>true</code> 或 <code v-pre>false</code>)</li>\n<li>数组(在中括号中)</li>\n<li>对象(在大括号中)</li>\n<li>null</li>\n</ul>\n<h2 id=\"json-数字\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-数字\"><span>JSON 数字</span></a></h2>\n<p>JSON 数字可以是整型或者浮点型:</p>\n<p><strong>例:</strong></p>\n<ul>\n<li><code v-pre>5201314</code></li>\n<li><code v-pre>-1</code></li>\n<li><code v-pre>3.141592654</code></li>\n</ul>\n<h2 id=\"json-布尔值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-布尔值\"><span>JSON 布尔值</span></a></h2>\n<p>JSON 布尔值可以是 <code v-pre>true</code> 或者 <code v-pre>false</code></p>\n<h2 id=\"json-字符串\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-字符串\"><span>JSON 字符串</span></a></h2>\n<p>JSON 字符串需要用双括号 <code v-pre>&quot;</code> 包含，如果内部含有英文引号 <code v-pre>&quot;</code>，需要使用 <code v-pre>\\</code> 转义。</p>\n<p><strong>例:</strong></p>\n<ul>\n<li><code v-pre>&quot;Mister.Duan is handsome&quot;</code></li>\n<li><code v-pre>&quot;春眠不觉晓，处处闻啼鸟&quot;</code></li>\n<li><code v-pre>&quot;A saying goes: \\&quot;Great hopes make great man.\\&quot;&quot;</code></li>\n</ul>\n<h2 id=\"json-对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-对象\"><span>JSON 对象</span></a></h2>\n<p>JSON 对象在大括号 <code v-pre>{}</code> 中书写以 <code v-pre>键: 值</code> 对的方式书写，不同键值对之间用 <code v-pre>,</code> 分隔。</p>\n<p><strong>例:</strong></p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"tag\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"heading\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"校园卡说明\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"text\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"校园卡是东师的金融消费卡\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"json-数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-数组\"><span>JSON 数组</span></a></h2>\n<p>JSON 数组在中括号 <code v-pre>[]</code> 中书写，不同元素间用 <code v-pre>,</code> 隔开。</p>\n<h2 id=\"json-null\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-null\"><span>JSON null</span></a></h2>\n<p>JSON 可以设置 <code v-pre>null</code> 值</p>\n</template>","contentStripped":"<p>JSON: JavaScript Object Notation(JavaScript 对象表示法)</p>\n<ul>\n<li>\n<p>JSON 是存储和交换文本信息的语法。类似 XML。</p>\n</li>\n<li>\n<p>JSON 比 XML 更小、更快，更易解析。</p>\n</li>\n<li>\n<p>JSON 是轻量级的文本数据交换格式</p>\n</li>\n<li>\n<p>JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。</p>\n</li>\n<li>\n<p>JSON 具有自我描述性，更易理解</p>\n</li>\n</ul>\n<!-- more -->\n<h2 id=\"json-值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-值\"><span>JSON 值</span></a></h2>\n<p>JSON 值可以是:</p>\n<ul>\n<li>数字(整数或浮点数)</li>\n<li>字符串(在双引号中)</li>\n<li>逻辑值(<code v-pre>true</code> 或 <code v-pre>false</code>)</li>\n<li>数组(在中括号中)</li>\n<li>对象(在大括号中)</li>\n<li>null</li>\n</ul>\n<h2 id=\"json-数字\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-数字\"><span>JSON 数字</span></a></h2>\n<p>JSON 数字可以是整型或者浮点型:</p>\n<p><strong>例:</strong></p>\n<ul>\n<li><code v-pre>5201314</code></li>\n<li><code v-pre>-1</code></li>\n<li><code v-pre>3.141592654</code></li>\n</ul>\n<h2 id=\"json-布尔值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-布尔值\"><span>JSON 布尔值</span></a></h2>\n<p>JSON 布尔值可以是 <code v-pre>true</code> 或者 <code v-pre>false</code></p>\n<h2 id=\"json-字符串\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-字符串\"><span>JSON 字符串</span></a></h2>\n<p>JSON 字符串需要用双括号 <code v-pre>&quot;</code> 包含，如果内部含有英文引号 <code v-pre>&quot;</code>，需要使用 <code v-pre>\\</code> 转义。</p>\n<p><strong>例:</strong></p>\n<ul>\n<li><code v-pre>&quot;Mister.Duan is handsome&quot;</code></li>\n<li><code v-pre>&quot;春眠不觉晓，处处闻啼鸟&quot;</code></li>\n<li><code v-pre>&quot;A saying goes: \\&quot;Great hopes make great man.\\&quot;&quot;</code></li>\n</ul>\n<h2 id=\"json-对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-对象\"><span>JSON 对象</span></a></h2>\n<p>JSON 对象在大括号 <code v-pre>{}</code> 中书写以 <code v-pre>键: 值</code> 对的方式书写，不同键值对之间用 <code v-pre>,</code> 分隔。</p>\n<p><strong>例:</strong></p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"tag\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"heading\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"校园卡说明\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"text\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"校园卡是东师的金融消费卡\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h2 id=\"json-数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-数组\"><span>JSON 数组</span></a></h2>\n<p>JSON 数组在中括号 <code v-pre>[]</code> 中书写，不同元素间用 <code v-pre>,</code> 隔开。</p>\n<h2 id=\"json-null\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#json-null\"><span>JSON null</span></a></h2>\n<p>JSON 可以设置 <code v-pre>null</code> 值</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\nJSON: JavaScript Object Notation(JavaScript 对象表示法)\n\n- JSON 是存储和交换文本信息的语法。类似 XML。\n\n- JSON 比 XML 更小、更快，更易解析。\n\n- JSON 是轻量级的文本数据交换格式\n\n- JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。\n\n- JSON 具有自我描述性，更易理解\n\n<!-- more -->\n\n## JSON 值\n\nJSON 值可以是:\n\n- 数字(整数或浮点数)\n- 字符串(在双引号中)\n- 逻辑值(`true` 或 `false`)\n- 数组(在中括号中)\n- 对象(在大括号中)\n- null\n\n## JSON 数字\n\nJSON 数字可以是整型或者浮点型:\n\n**例:**\n\n- `5201314`\n- `-1`\n- `3.141592654`\n\n## JSON 布尔值\n\nJSON 布尔值可以是 `true` 或者 `false`\n\n## JSON 字符串\n\nJSON 字符串需要用双括号 `\"` 包含，如果内部含有英文引号 `\"`，需要使用 `\\` 转义。\n\n**例:**\n\n- `\"Mister.Duan is handsome\"`\n- `\"春眠不觉晓，处处闻啼鸟\"`\n- `\"A saying goes: \\\"Great hopes make great man.\\\"\"`\n\n## JSON 对象\n\nJSON 对象在大括号 `{}` 中书写以 `键: 值` 对的方式书写，不同键值对之间用 `,` 分隔。\n\n**例:**\n\n```json\n{\n  \"tag\": \"text\",\n  \"heading\": \"校园卡说明\",\n  \"text\": \"校园卡是东师的金融消费卡\"\n}\n```\n\n## JSON 数组\n\nJSON 数组在中括号 `[]` 中书写，不同元素间用 `,` 隔开。\n\n## JSON null\n\nJSON 可以设置 `null` 值\n","excerpt":"","title":"","headers":[{"level":2,"title":"JSON 值","slug":"json-值","link":"#json-值","children":[]},{"level":2,"title":"JSON 数字","slug":"json-数字","link":"#json-数字","children":[]},{"level":2,"title":"JSON 布尔值","slug":"json-布尔值","link":"#json-布尔值","children":[]},{"level":2,"title":"JSON 字符串","slug":"json-字符串","link":"#json-字符串","children":[]},{"level":2,"title":"JSON 对象","slug":"json-对象","link":"#json-对象","children":[]},{"level":2,"title":"JSON 数组","slug":"json-数组","link":"#json-数组","children":[]},{"level":2,"title":"JSON null","slug":"json-null","link":"#json-null","children":[]}]}}
