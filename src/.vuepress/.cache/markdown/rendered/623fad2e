{"content":"<p>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<p>Markdown 的目标是实现「易读易写」。它的扩展名为 <code v-pre>.md</code>。</p>\n<!-- more -->\n<h2 id=\"设计理念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#设计理念\"><span>设计理念</span></a></h2>\n<p>Markdown 最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。</p>\n<p>其语法在设计时受到一些既有 text-to-HTML 格式的影响，包括 <a href=\"http://docutils.sourceforge.net/mirror/setext.html\" target=\"_blank\" rel=\"noopener noreferrer\">Setext</a>、<a href=\"http://www.aaronsw.com/2002/atx/\" target=\"_blank\" rel=\"noopener noreferrer\">atx</a>、<a href=\"http://textism.com/tools/textile/\" target=\"_blank\" rel=\"noopener noreferrer\">Textile</a>、<a href=\"http://docutils.sourceforge.net/rst.html\" target=\"_blank\" rel=\"noopener noreferrer\">reStructuredText</a>、<a href=\"http://www.triptico.com/software/grutatxt.html\" target=\"_blank\" rel=\"noopener noreferrer\">Grutatext</a> 和 <a href=\"http://ettext.taint.org/doc/\" target=\"_blank\" rel=\"noopener noreferrer\">EtText</a>，然而最大灵感来源其实是纯文字的电子邮件格式。因此 Markdown 的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。假如您有使用过电子邮件，引言写法看起来就真的像是引用一段文字。</p>\n<p>Markdown 具有一系列衍生版本，用于扩展 Markdown 的功能 (如表格、脚注、内嵌 HTML 等等) ，这些功能并不在最初的设计中，但它们能让 Markdown 转换成更多的格式，例如 LaTeX，Docbook。Markdown 增强版中比较有名的有 Markdown Extra、MultiMarkdown、 Maruku 等。这些衍生版本要么基于工具，如 Pandoc；要么基于网站，如 GitHub 和 Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p>\n<h2 id=\"用途\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#用途\"><span>用途</span></a></h2>\n<p>Markdown 的语法有个主要的目的: 用来作为一种网络内容的<strong>写作用语言</strong>。Markdown 的重点在于，它能让文件<strong>更容易阅读、编写</strong>。因此，Markdown 的格式语法只涵盖纯文字可以涵盖的范围。</p>\n<p>Markdown 的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台 WordPress 能很好的支持 Markdown。</p>\n<p>用于编写说明文档，并且以 “README.md” 的文件名保存在软件的目录下面。</p>\n<p>除此之外，我们还可以快速将 Markdown 转化为演讲 PPT、Word 产品文档、LaTex 论文甚至是用非常少量的代码完成最小可用原型。在数据科学领域，Markdown 已经广泛使用，极大地推进了动态可重复性研究的历史进程。</p>\n<h2 id=\"特点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特点\"><span>特点</span></a></h2>\n<h3 id=\"行内-html\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#行内-html\"><span>行内 HTML</span></a></h3>\n<p>不在 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p>\n<p>只有块元素 ── 比如 <code v-pre>&lt;div&gt;</code>、<code v-pre>&lt;table&gt;</code>、<code v-pre>&lt;pre&gt;</code>、<code v-pre>&lt;p&gt;</code> 等标签，必须在前后加上空行，以利与内容区隔。而且这些 (元素) 的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 的解析器有智慧型判断，可以避免在块标签前后加上没有必要的 <code v-pre>&lt;p&gt;</code> 标签。</p>\n<p>举例来说，在 Markdown 文件里加上一段 HTML 表格:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">This is a regular paragraph.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">table</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">td</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>Foo&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">td</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">table</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">This is another regular paragraph.</span></span></code></pre>\n</div><div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>Markdown 语法在 HTML 块标签中将不会被进行处理。</p>\n<p>例如，您无法在 HTML 块内使用 Markdown 形式的 <code v-pre>*强调*</code>。</p>\n</div>\n<h3 id=\"特殊字符自动转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特殊字符自动转换\"><span>特殊字符自动转换</span></a></h3>\n<p>简单来说，在 Markdown 中，您无需考虑 HTML 本应考虑的特殊字符转义的问题。</p>\n<p>比如对于 <code v-pre>AT&amp;T</code>，Markdown 就会将它转为 <code v-pre>AT&amp;amp;T</code>。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">HTML 中的特殊字符</p>\n<p>在 HTML 文件中，有两个字符需要特殊处理: <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 。 <code v-pre>&lt;</code> 符号用于起始标签，<code v-pre>&amp;</code> 符号则用于标记 HTML 实体，如果您只是想要使用这些符号，您必须要使用实体的形式，像是 <code v-pre>&amp;lt;</code> 和 <code v-pre>&amp;amp;</code>。</p>\n<p>使用 HTML 时，<code v-pre>&amp;</code> 符号其实很容易让写作网络文件的人感到困扰。</p>\n<p>如果您要打 「AT&amp;T」 ，您必须要写成 <code v-pre>「AT&amp;amp;T」</code>。</p>\n<p>同时您还得转换网址内的 <code v-pre>&amp;</code> 符号，如果您要链接到 <code v-pre>http://images.google.com/images?num=30&amp;q=larry+bird</code>，您必须要把网址转成 <code v-pre>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code>，才能放到链接标签的 <code v-pre>href</code> 属性里。</p>\n<p>不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。</p>\n</div>\n<p>Markdown 即允许您直接使用这些符号。也允许您使用转义符号。</p>\n<p>比如您如果要在文件中插入一个著作权的符号，但是您又不想费力地输入这个不常见的特殊符号，您可以直接在 Markdown 中输入 <code v-pre>&amp;copy;</code>，Markdown 会推测出它是转移符号，并把它输出为 ©。</p>\n<p>类似的状况也会发生在 <code v-pre>&lt;</code> 符号上，因为 Markdown 支持 <a href=\"#%E8%A1%8C%E5%86%85-HTML\">行内 HTML</a> ，如果您是使用 <code v-pre>&lt;</code> 符号作为 HTML 标签使用，那 Markdown 也不会对它做任何转换，但是如果您是写:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">4 &#x3C; 5</span></span></code></pre>\n</div><p>Markdown 将会把它转换为:</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">4 </span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">&#x26;lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> 5</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>需要注意的是，code 范围内，不论是行内还是块， <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让您可以很容易地用 Markdown 写 HTML code (和 HTML 相对而言， HTML 语法中，您要把所有的 <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。)</p>\n</div>\n<h2 id=\"编写\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#编写\"><span>编写</span></a></h2>\n<p>Markdown 就是一个扩展名为 <code v-pre>.md</code> 的文本文件。</p>\n<p>理论上您可以使用任何编辑器 (如 <RouteLink to=\"/software/vscode/\">VS Code</RouteLink>)编辑 Markdown，也可以使用专门的 Markdown 编辑器 (如 <a href=\"https://typora.io\" target=\"_blank\" rel=\"noopener noreferrer\">Typora</a>) 进行编写。</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/language/markdown/intro.md","filePathRelative":"code/language/markdown/intro.md","frontmatter":{"date":"2021-02-21T00:00:00.000Z","title":"Markdown 介绍","icon":"info","category":"Markdown","tag":["Markdown"]},"sfcBlocks":{"template":{"type":"template","content":"<template><p>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<p>Markdown 的目标是实现「易读易写」。它的扩展名为 <code v-pre>.md</code>。</p>\n<!-- more -->\n<h2 id=\"设计理念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#设计理念\"><span>设计理念</span></a></h2>\n<p>Markdown 最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。</p>\n<p>其语法在设计时受到一些既有 text-to-HTML 格式的影响，包括 <a href=\"http://docutils.sourceforge.net/mirror/setext.html\" target=\"_blank\" rel=\"noopener noreferrer\">Setext</a>、<a href=\"http://www.aaronsw.com/2002/atx/\" target=\"_blank\" rel=\"noopener noreferrer\">atx</a>、<a href=\"http://textism.com/tools/textile/\" target=\"_blank\" rel=\"noopener noreferrer\">Textile</a>、<a href=\"http://docutils.sourceforge.net/rst.html\" target=\"_blank\" rel=\"noopener noreferrer\">reStructuredText</a>、<a href=\"http://www.triptico.com/software/grutatxt.html\" target=\"_blank\" rel=\"noopener noreferrer\">Grutatext</a> 和 <a href=\"http://ettext.taint.org/doc/\" target=\"_blank\" rel=\"noopener noreferrer\">EtText</a>，然而最大灵感来源其实是纯文字的电子邮件格式。因此 Markdown 的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。假如您有使用过电子邮件，引言写法看起来就真的像是引用一段文字。</p>\n<p>Markdown 具有一系列衍生版本，用于扩展 Markdown 的功能 (如表格、脚注、内嵌 HTML 等等) ，这些功能并不在最初的设计中，但它们能让 Markdown 转换成更多的格式，例如 LaTeX，Docbook。Markdown 增强版中比较有名的有 Markdown Extra、MultiMarkdown、 Maruku 等。这些衍生版本要么基于工具，如 Pandoc；要么基于网站，如 GitHub 和 Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p>\n<h2 id=\"用途\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#用途\"><span>用途</span></a></h2>\n<p>Markdown 的语法有个主要的目的: 用来作为一种网络内容的<strong>写作用语言</strong>。Markdown 的重点在于，它能让文件<strong>更容易阅读、编写</strong>。因此，Markdown 的格式语法只涵盖纯文字可以涵盖的范围。</p>\n<p>Markdown 的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台 WordPress 能很好的支持 Markdown。</p>\n<p>用于编写说明文档，并且以 “README.md” 的文件名保存在软件的目录下面。</p>\n<p>除此之外，我们还可以快速将 Markdown 转化为演讲 PPT、Word 产品文档、LaTex 论文甚至是用非常少量的代码完成最小可用原型。在数据科学领域，Markdown 已经广泛使用，极大地推进了动态可重复性研究的历史进程。</p>\n<h2 id=\"特点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特点\"><span>特点</span></a></h2>\n<h3 id=\"行内-html\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#行内-html\"><span>行内 HTML</span></a></h3>\n<p>不在 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p>\n<p>只有块元素 ── 比如 <code v-pre>&lt;div&gt;</code>、<code v-pre>&lt;table&gt;</code>、<code v-pre>&lt;pre&gt;</code>、<code v-pre>&lt;p&gt;</code> 等标签，必须在前后加上空行，以利与内容区隔。而且这些 (元素) 的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 的解析器有智慧型判断，可以避免在块标签前后加上没有必要的 <code v-pre>&lt;p&gt;</code> 标签。</p>\n<p>举例来说，在 Markdown 文件里加上一段 HTML 表格:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">This is a regular paragraph.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">table</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">td</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>Foo&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">td</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">table</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">This is another regular paragraph.</span></span></code></pre>\n</div><div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>Markdown 语法在 HTML 块标签中将不会被进行处理。</p>\n<p>例如，您无法在 HTML 块内使用 Markdown 形式的 <code v-pre>*强调*</code>。</p>\n</div>\n<h3 id=\"特殊字符自动转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特殊字符自动转换\"><span>特殊字符自动转换</span></a></h3>\n<p>简单来说，在 Markdown 中，您无需考虑 HTML 本应考虑的特殊字符转义的问题。</p>\n<p>比如对于 <code v-pre>AT&amp;T</code>，Markdown 就会将它转为 <code v-pre>AT&amp;amp;T</code>。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">HTML 中的特殊字符</p>\n<p>在 HTML 文件中，有两个字符需要特殊处理: <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 。 <code v-pre>&lt;</code> 符号用于起始标签，<code v-pre>&amp;</code> 符号则用于标记 HTML 实体，如果您只是想要使用这些符号，您必须要使用实体的形式，像是 <code v-pre>&amp;lt;</code> 和 <code v-pre>&amp;amp;</code>。</p>\n<p>使用 HTML 时，<code v-pre>&amp;</code> 符号其实很容易让写作网络文件的人感到困扰。</p>\n<p>如果您要打 「AT&amp;T」 ，您必须要写成 <code v-pre>「AT&amp;amp;T」</code>。</p>\n<p>同时您还得转换网址内的 <code v-pre>&amp;</code> 符号，如果您要链接到 <code v-pre>http://images.google.com/images?num=30&amp;q=larry+bird</code>，您必须要把网址转成 <code v-pre>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code>，才能放到链接标签的 <code v-pre>href</code> 属性里。</p>\n<p>不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。</p>\n</div>\n<p>Markdown 即允许您直接使用这些符号。也允许您使用转义符号。</p>\n<p>比如您如果要在文件中插入一个著作权的符号，但是您又不想费力地输入这个不常见的特殊符号，您可以直接在 Markdown 中输入 <code v-pre>&amp;copy;</code>，Markdown 会推测出它是转移符号，并把它输出为 ©。</p>\n<p>类似的状况也会发生在 <code v-pre>&lt;</code> 符号上，因为 Markdown 支持 <a href=\"#%E8%A1%8C%E5%86%85-HTML\">行内 HTML</a> ，如果您是使用 <code v-pre>&lt;</code> 符号作为 HTML 标签使用，那 Markdown 也不会对它做任何转换，但是如果您是写:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">4 &#x3C; 5</span></span></code></pre>\n</div><p>Markdown 将会把它转换为:</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">4 </span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">&#x26;lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> 5</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>需要注意的是，code 范围内，不论是行内还是块， <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让您可以很容易地用 Markdown 写 HTML code (和 HTML 相对而言， HTML 语法中，您要把所有的 <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。)</p>\n</div>\n<h2 id=\"编写\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#编写\"><span>编写</span></a></h2>\n<p>Markdown 就是一个扩展名为 <code v-pre>.md</code> 的文本文件。</p>\n<p>理论上您可以使用任何编辑器 (如 <RouteLink to=\"/software/vscode/\">VS Code</RouteLink>)编辑 Markdown，也可以使用专门的 Markdown 编辑器 (如 <a href=\"https://typora.io\" target=\"_blank\" rel=\"noopener noreferrer\">Typora</a>) 进行编写。</p>\n</template>","contentStripped":"<p>Markdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<p>Markdown 的目标是实现「易读易写」。它的扩展名为 <code v-pre>.md</code>。</p>\n<!-- more -->\n<h2 id=\"设计理念\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#设计理念\"><span>设计理念</span></a></h2>\n<p>Markdown 最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。</p>\n<p>其语法在设计时受到一些既有 text-to-HTML 格式的影响，包括 <a href=\"http://docutils.sourceforge.net/mirror/setext.html\" target=\"_blank\" rel=\"noopener noreferrer\">Setext</a>、<a href=\"http://www.aaronsw.com/2002/atx/\" target=\"_blank\" rel=\"noopener noreferrer\">atx</a>、<a href=\"http://textism.com/tools/textile/\" target=\"_blank\" rel=\"noopener noreferrer\">Textile</a>、<a href=\"http://docutils.sourceforge.net/rst.html\" target=\"_blank\" rel=\"noopener noreferrer\">reStructuredText</a>、<a href=\"http://www.triptico.com/software/grutatxt.html\" target=\"_blank\" rel=\"noopener noreferrer\">Grutatext</a> 和 <a href=\"http://ettext.taint.org/doc/\" target=\"_blank\" rel=\"noopener noreferrer\">EtText</a>，然而最大灵感来源其实是纯文字的电子邮件格式。因此 Markdown 的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。假如您有使用过电子邮件，引言写法看起来就真的像是引用一段文字。</p>\n<p>Markdown 具有一系列衍生版本，用于扩展 Markdown 的功能 (如表格、脚注、内嵌 HTML 等等) ，这些功能并不在最初的设计中，但它们能让 Markdown 转换成更多的格式，例如 LaTeX，Docbook。Markdown 增强版中比较有名的有 Markdown Extra、MultiMarkdown、 Maruku 等。这些衍生版本要么基于工具，如 Pandoc；要么基于网站，如 GitHub 和 Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p>\n<h2 id=\"用途\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#用途\"><span>用途</span></a></h2>\n<p>Markdown 的语法有个主要的目的: 用来作为一种网络内容的<strong>写作用语言</strong>。Markdown 的重点在于，它能让文件<strong>更容易阅读、编写</strong>。因此，Markdown 的格式语法只涵盖纯文字可以涵盖的范围。</p>\n<p>Markdown 的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台 WordPress 能很好的支持 Markdown。</p>\n<p>用于编写说明文档，并且以 “README.md” 的文件名保存在软件的目录下面。</p>\n<p>除此之外，我们还可以快速将 Markdown 转化为演讲 PPT、Word 产品文档、LaTex 论文甚至是用非常少量的代码完成最小可用原型。在数据科学领域，Markdown 已经广泛使用，极大地推进了动态可重复性研究的历史进程。</p>\n<h2 id=\"特点\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特点\"><span>特点</span></a></h2>\n<h3 id=\"行内-html\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#行内-html\"><span>行内 HTML</span></a></h3>\n<p>不在 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。</p>\n<p>只有块元素 ── 比如 <code v-pre>&lt;div&gt;</code>、<code v-pre>&lt;table&gt;</code>、<code v-pre>&lt;pre&gt;</code>、<code v-pre>&lt;p&gt;</code> 等标签，必须在前后加上空行，以利与内容区隔。而且这些 (元素) 的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 的解析器有智慧型判断，可以避免在块标签前后加上没有必要的 <code v-pre>&lt;p&gt;</code> 标签。</p>\n<p>举例来说，在 Markdown 文件里加上一段 HTML 表格:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">This is a regular paragraph.</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">table</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">td</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>Foo&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">td</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">tr</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">table</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">This is another regular paragraph.</span></span></code></pre>\n</div><div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>Markdown 语法在 HTML 块标签中将不会被进行处理。</p>\n<p>例如，您无法在 HTML 块内使用 Markdown 形式的 <code v-pre>*强调*</code>。</p>\n</div>\n<h3 id=\"特殊字符自动转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特殊字符自动转换\"><span>特殊字符自动转换</span></a></h3>\n<p>简单来说，在 Markdown 中，您无需考虑 HTML 本应考虑的特殊字符转义的问题。</p>\n<p>比如对于 <code v-pre>AT&amp;T</code>，Markdown 就会将它转为 <code v-pre>AT&amp;amp;T</code>。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">HTML 中的特殊字符</p>\n<p>在 HTML 文件中，有两个字符需要特殊处理: <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 。 <code v-pre>&lt;</code> 符号用于起始标签，<code v-pre>&amp;</code> 符号则用于标记 HTML 实体，如果您只是想要使用这些符号，您必须要使用实体的形式，像是 <code v-pre>&amp;lt;</code> 和 <code v-pre>&amp;amp;</code>。</p>\n<p>使用 HTML 时，<code v-pre>&amp;</code> 符号其实很容易让写作网络文件的人感到困扰。</p>\n<p>如果您要打 「AT&amp;T」 ，您必须要写成 <code v-pre>「AT&amp;amp;T」</code>。</p>\n<p>同时您还得转换网址内的 <code v-pre>&amp;</code> 符号，如果您要链接到 <code v-pre>http://images.google.com/images?num=30&amp;q=larry+bird</code>，您必须要把网址转成 <code v-pre>http://images.google.com/images?num=30&amp;amp;q=larry+bird</code>，才能放到链接标签的 <code v-pre>href</code> 属性里。</p>\n<p>不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。</p>\n</div>\n<p>Markdown 即允许您直接使用这些符号。也允许您使用转义符号。</p>\n<p>比如您如果要在文件中插入一个著作权的符号，但是您又不想费力地输入这个不常见的特殊符号，您可以直接在 Markdown 中输入 <code v-pre>&amp;copy;</code>，Markdown 会推测出它是转移符号，并把它输出为 ©。</p>\n<p>类似的状况也会发生在 <code v-pre>&lt;</code> 符号上，因为 Markdown 支持 <a href=\"#%E8%A1%8C%E5%86%85-HTML\">行内 HTML</a> ，如果您是使用 <code v-pre>&lt;</code> 符号作为 HTML 标签使用，那 Markdown 也不会对它做任何转换，但是如果您是写:</p>\n<div class=\"language-md\" data-highlighter=\"shiki\" data-ext=\"md\" data-title=\"md\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">4 &#x3C; 5</span></span></code></pre>\n</div><p>Markdown 将会把它转换为:</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">4 </span><span style=\"--shiki-light:#986801;--shiki-dark:#E06C75\">&#x26;lt;</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> 5</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>需要注意的是，code 范围内，不论是行内还是块， <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 两个符号都<em>一定</em>会被转换成 HTML 实体，这项特性让您可以很容易地用 Markdown 写 HTML code (和 HTML 相对而言， HTML 语法中，您要把所有的 <code v-pre>&lt;</code> 和 <code v-pre>&amp;</code> 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。)</p>\n</div>\n<h2 id=\"编写\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#编写\"><span>编写</span></a></h2>\n<p>Markdown 就是一个扩展名为 <code v-pre>.md</code> 的文本文件。</p>\n<p>理论上您可以使用任何编辑器 (如 <RouteLink to=\"/software/vscode/\">VS Code</RouteLink>)编辑 Markdown，也可以使用专门的 Markdown 编辑器 (如 <a href=\"https://typora.io\" target=\"_blank\" rel=\"noopener noreferrer\">Typora</a>) 进行编写。</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\nMarkdown 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。\n\nMarkdown 的目标是实现「易读易写」。它的扩展名为 `.md`。\n\n<!-- more -->\n\n## 设计理念\n\nMarkdown 最需要强调的便是它的可读性。一份使用 Markdown 格式撰写的文件应该可以直接以纯文字发布，并且看起来不会像是由许多标签或是格式指令所构成。\n\n其语法在设计时受到一些既有 text-to-HTML 格式的影响，包括 [Setext][1]、[atx][2]、[Textile][3]、[reStructuredText][4]、[Grutatext][5] 和 [EtText][6]，然而最大灵感来源其实是纯文字的电子邮件格式。因此 Markdown 的语法全由标点符号所组成，并经过严谨慎选，是为了让它们看起来就像所要表达的意思。像是在文字两旁加上星号，看起来就像\\*强调\\*。Markdown 的列表看起来，嗯，就是列表。假如您有使用过电子邮件，引言写法看起来就真的像是引用一段文字。\n\nMarkdown 具有一系列衍生版本，用于扩展 Markdown 的功能 (如表格、脚注、内嵌 HTML 等等) ，这些功能并不在最初的设计中，但它们能让 Markdown 转换成更多的格式，例如 LaTeX，Docbook。Markdown 增强版中比较有名的有 Markdown Extra、MultiMarkdown、 Maruku 等。这些衍生版本要么基于工具，如 Pandoc；要么基于网站，如 GitHub 和 Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。\n\n## 用途\n\nMarkdown 的语法有个主要的目的: 用来作为一种网络内容的**写作用语言**。Markdown 的重点在于，它能让文件**更容易阅读、编写**。因此，Markdown 的格式语法只涵盖纯文字可以涵盖的范围。\n\nMarkdown 的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台 WordPress 能很好的支持 Markdown。\n\n用于编写说明文档，并且以 “README.md” 的文件名保存在软件的目录下面。\n\n除此之外，我们还可以快速将 Markdown 转化为演讲 PPT、Word 产品文档、LaTex 论文甚至是用非常少量的代码完成最小可用原型。在数据科学领域，Markdown 已经广泛使用，极大地推进了动态可重复性研究的历史进程。\n\n## 特点\n\n### 行内 HTML\n\n不在 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。\n\n只有块元素 ── 比如 `<div>`、`<table>`、`<pre>`、`<p>` 等标签，必须在前后加上空行，以利与内容区隔。而且这些 (元素) 的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 的解析器有智慧型判断，可以避免在块标签前后加上没有必要的 `<p>` 标签。\n\n举例来说，在 Markdown 文件里加上一段 HTML 表格:\n\n```md\nThis is a regular paragraph.\n\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n\nThis is another regular paragraph.\n```\n\n::: warning\n\nMarkdown 语法在 HTML 块标签中将不会被进行处理。\n\n例如，您无法在 HTML 块内使用 Markdown 形式的 `*强调*`。\n\n:::\n\n### 特殊字符自动转换\n\n简单来说，在 Markdown 中，您无需考虑 HTML 本应考虑的特殊字符转义的问题。\n\n比如对于 `AT&T`，Markdown 就会将它转为 `AT&amp;T`。\n\n::: tip HTML 中的特殊字符\n\n在 HTML 文件中，有两个字符需要特殊处理: `<` 和 `&` 。 `<` 符号用于起始标签，`&` 符号则用于标记 HTML 实体，如果您只是想要使用这些符号，您必须要使用实体的形式，像是 `&lt;` 和 `&amp;`。\n\n使用 HTML 时，`&` 符号其实很容易让写作网络文件的人感到困扰。\n\n如果您要打 「AT&T」 ，您必须要写成 `「AT&amp;T」`。\n\n同时您还得转换网址内的 `&` 符号，如果您要链接到 `http://images.google.com/images?num=30&q=larry+bird`，您必须要把网址转成 `http://images.google.com/images?num=30&amp;q=larry+bird`，才能放到链接标签的 `href` 属性里。\n\n不用说也知道这很容易忘记，这也可能是 HTML 标准检查所检查到的错误中，数量最多的。\n\n:::\n\nMarkdown 即允许您直接使用这些符号。也允许您使用转义符号。\n\n比如您如果要在文件中插入一个著作权的符号，但是您又不想费力地输入这个不常见的特殊符号，您可以直接在 Markdown 中输入 `&copy;`，Markdown 会推测出它是转移符号，并把它输出为 &copy;。\n\n类似的状况也会发生在 `<` 符号上，因为 Markdown 支持 [行内 HTML](#行内-HTML) ，如果您是使用 `<` 符号作为 HTML 标签使用，那 Markdown 也不会对它做任何转换，但是如果您是写:\n\n```md\n4 < 5\n```\n\nMarkdown 将会把它转换为:\n\n```html\n4 &lt; 5\n```\n\n::: tip\n\n需要注意的是，code 范围内，不论是行内还是块， `<` 和 `&` 两个符号都*一定*会被转换成 HTML 实体，这项特性让您可以很容易地用 Markdown 写 HTML code (和 HTML 相对而言， HTML 语法中，您要把所有的 `<` 和 `&` 都转换为 HTML 实体，才能在 HTML 文件里面写出 HTML code。)\n\n:::\n\n## 编写\n\nMarkdown 就是一个扩展名为 `.md` 的文本文件。\n\n理论上您可以使用任何编辑器 (如 [VS Code](../../../software/vscode/README.md))编辑 Markdown，也可以使用专门的 Markdown 编辑器 (如 [Typora](https://typora.io)) 进行编写。\n\n[1]: http://docutils.sourceforge.net/mirror/setext.html\n[2]: http://www.aaronsw.com/2002/atx/\n[3]: http://textism.com/tools/textile/\n[4]: http://docutils.sourceforge.net/rst.html\n[5]: http://www.triptico.com/software/grutatxt.html\n[6]: http://ettext.taint.org/doc/\n","excerpt":"","references":{"1":{"title":"","href":"http://docutils.sourceforge.net/mirror/setext.html"},"2":{"title":"","href":"http://www.aaronsw.com/2002/atx/"},"3":{"title":"","href":"http://textism.com/tools/textile/"},"4":{"title":"","href":"http://docutils.sourceforge.net/rst.html"},"5":{"title":"","href":"http://www.triptico.com/software/grutatxt.html"},"6":{"title":"","href":"http://ettext.taint.org/doc/"}},"title":"","headers":[{"level":2,"title":"设计理念","slug":"设计理念","link":"#设计理念","children":[]},{"level":2,"title":"用途","slug":"用途","link":"#用途","children":[]},{"level":2,"title":"特点","slug":"特点","link":"#特点","children":[{"level":3,"title":"行内 HTML","slug":"行内-html","link":"#行内-html","children":[]},{"level":3,"title":"特殊字符自动转换","slug":"特殊字符自动转换","link":"#特殊字符自动转换","children":[]}]},{"level":2,"title":"编写","slug":"编写","link":"#编写","children":[]}],"links":[{"raw":"../../../software/vscode/README.md","relative":"software/vscode/README.md","absolute":"/software/vscode/README.md"}]}}
