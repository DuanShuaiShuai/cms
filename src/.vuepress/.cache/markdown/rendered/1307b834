{"content":"<p>从小程序基础库版本 2.2.1 或以上、及开发者工具 1.02.1808300 或以上开始，小程序支持使用 npm 安装第三方包。</p>\n<p>此文档要求开发者们对 npm 有一定的了解，因此不会再去介绍 npm 的基本功能。如若之前未接触过 npm，请翻阅官方 npm 文档进行学习。</p>\n<!-- more -->\n<h2 id=\"使用-npm-包\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用-npm-包\"><span>使用 npm 包</span></a></h2>\n<ol>\n<li>\n<p>在小程序中执行命令安装 npm 包:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span></span></code></pre>\n</div><p>此处并没有强制要求 <code v-pre>node_modules</code> 必须在小程序根目录下(即 <code v-pre>project.config.js</code> 中的 <code v-pre>miniprogramRoot</code> 字段)，也可以存在于小程序根目录下的各个子目录中。但是不允许 <code v-pre>node_modules</code> 在小程序根目录外。</p>\n</li>\n<li>\n<p>点击开发者工具中的菜单栏: 工具 --&gt; 构建 npm</p>\n</li>\n<li>\n<p>勾选“使用 npm 模块”选项:</p>\n</li>\n<li>\n<p>构建完成后即可使用 npm 包。</p>\n</li>\n</ol>\n<p><strong>js 中引入 npm 包</strong>:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> myPackage</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"packageName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> packageOther</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"packageName/other\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>使用 npm 包中的自定义组件:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"usingComponents\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"myPackage\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"packageName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"package-other\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"packageName/other\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>此处使用 npm 包时如果只引入包名，则默认寻找包名下的 <code v-pre>index.js</code> 文件或者 <code v-pre>index</code> 组件。</p>\n</div>\n<h2 id=\"发布-npm-包\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布-npm-包\"><span>发布 npm 包</span></a></h2>\n<h3 id=\"发布小程序-npm-包的约束\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布小程序-npm-包的约束\"><span>发布小程序 npm 包的约束</span></a></h3>\n<p>这里要发布的 npm 包是特指专为小程序定制的 npm 包(下称小程序 npm 包)。因为小程序自定义组件的特殊性，原有的 npm 包机制无法满足我们的需求，所以这里需要对小程序 npm 包做一些约束:</p>\n<ol>\n<li>\n<p>小程序 npm 包要求根目录下必须有构建文件生成目录(默认为 miniprogram_dist 目录)，此目录可以通过在 package.json 文件中新增一个 miniprogram 字段来指定，比如:</p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"miniprogram-custom-component\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"version\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1.0.0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"description\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"miniprogram\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dist\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {},</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"dependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div></li>\n<li>\n<p>小程序 npm 包里只有构建文件生成目录会被算入小程序包的占用空间，上传小程序代码时也只会上传该目录的代码。如果小程序 npm 包有一些测试、构建相关的代码请放到构建文件生成目录外。另外也可以使用 <code v-pre>.npmignore</code> 文件来避免将一些非业务代码文件发布到 npm 中。</p>\n</li>\n<li>\n<p>测试、构建相关的依赖请放入 <code v-pre>devDependencies</code> 字段中避免被一起打包到小程序包中。</p>\n</li>\n</ol>\n<h3 id=\"发布其他-npm-包的约束\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布其他-npm-包的约束\"><span>发布其他 npm 包的约束</span></a></h3>\n<p>如果是已经发布过的一些 npm 包，因为一些原因无法改造成小程序 npm 包的结构的话，也可以通过微调后被使用，但是请确保遵循以下几点:</p>\n<ol>\n<li>\n<p>只支持纯 js 包，不支持自定义组件。</p>\n</li>\n<li>\n<p>必须有入口文件，即需要保证 package.json 中的 main 字段是指向一个正确的入口，如果 package.json 中没有 main 字段，则以 npm 包根目录下的 index.js 作为入口文件。</p>\n</li>\n<li>\n<p>测试、构建相关的依赖请放入 devDependencies 字段中避免被一起打包到小程序包中，这一点和小程序 npm 包的要求相同。</p>\n</li>\n<li>\n<p>不支持依赖 c++ addon，不支持依赖 Node.js 的内置库:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> addon</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"./addon.node\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不支持!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> http</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不支持!</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>对于一些纯 js 实现的 Node.js 内置库(如 path 模块)，可以通过额外安装其他开发者实现的 npm 包来支持。</p>\n</div>\n</li>\n<li>\n<p>使用 <code v-pre>require</code> 依赖的时候下列几种方式也是不允许的:</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不允许将 require 赋值给其他变量后再使用，以下代码不会去解析出具体依赖</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> r</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">r</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">r</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> r2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">r2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不允许 require 一个变量，以下代码依赖运行时，无法解析出具体依赖</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> m</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">m</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>小程序环境比较特殊，一些全局变量(如 window 对象)和构造器(如 Function 构造器)是无法使用的。</p>\n</li>\n</ol>\n<h2 id=\"原理介绍\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#原理介绍\"><span>原理介绍</span></a></h2>\n<p>为了帮助大家更好的理解发布 npm 包中提到的各种要求，这里简单介绍一下原理:</p>\n<ol>\n<li>\n<p>首先 <code v-pre>node_modules</code> 目录不会参与编译、上传和打包中，所以小程序想要使用 npm 包必须走一遍“构建 npm”的过程，在最外层的 <code v-pre>node_modules</code> 的同级目录下会生成一个 <code v-pre>miniprogram_npm</code> 目录，里面会存放构建打包后的 npm 包，也就是小程序真正使用的 npm 包。</p>\n</li>\n<li>\n<p>构建打包分为两种: 小程序 npm 包会直接拷贝构建文件生成目录下的所有文件到 <code v-pre>miniprogram_npm</code> 中；其他 npm 包则会从入口 js 文件开始走一遍依赖分析和打包过程(类似 webpack)。</p>\n</li>\n<li>\n<p>寻找 npm 包的过程和 npm 的实现类似，从依赖 npm 包的文件所在目录开始逐层往外找，直到找到可用的 npm 包或是小程序根目录为止。下面简单介绍下构建打包前后的目录情况，构建之前的结构:</p>\n</li>\n</ol>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>|--node_modules</span></span>\n<span class=\"line\"><span>|    |--testComp // 小程序 npm 包</span></span>\n<span class=\"line\"><span>|    |    |--package.json</span></span>\n<span class=\"line\"><span>|    |    |--src</span></span>\n<span class=\"line\"><span>|    |    |--miniprogram_dist</span></span>\n<span class=\"line\"><span>|    |         |-index.js</span></span>\n<span class=\"line\"><span>|    |         |-index.json</span></span>\n<span class=\"line\"><span>|    |         |-index.wxss</span></span>\n<span class=\"line\"><span>|    |         |-index.wxml</span></span>\n<span class=\"line\"><span>|    |--testa // 其他 npm 包</span></span>\n<span class=\"line\"><span>|         |--package.json</span></span>\n<span class=\"line\"><span>|         |--lib</span></span>\n<span class=\"line\"><span>|         |    |--entry.js</span></span>\n<span class=\"line\"><span>|         |--node_modules</span></span>\n<span class=\"line\"><span>|              |--testb</span></span>\n<span class=\"line\"><span>|                   |--package.json</span></span>\n<span class=\"line\"><span>|                   |--main.js</span></span>\n<span class=\"line\"><span>|--pages</span></span>\n<span class=\"line\"><span>|--app.js</span></span>\n<span class=\"line\"><span>|--app.wxss</span></span>\n<span class=\"line\"><span>|--app.json</span></span>\n<span class=\"line\"><span>|--project.config.js</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>构建之后的结构:</p>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>|--node_modules</span></span>\n<span class=\"line\"><span>|--miniprogram_npm</span></span>\n<span class=\"line\"><span>|    |--testComp // 小程序 npm 包</span></span>\n<span class=\"line\"><span>|    |    |-index.js</span></span>\n<span class=\"line\"><span>|    |    |-index.json</span></span>\n<span class=\"line\"><span>|    |    |-index.wxss</span></span>\n<span class=\"line\"><span>|    |    |-index.wxml</span></span>\n<span class=\"line\"><span>|    |--testa // 其他 npm 包</span></span>\n<span class=\"line\"><span>|         |--index.js // 打包后的文件</span></span>\n<span class=\"line\"><span>|         |--miniprogram_npm</span></span>\n<span class=\"line\"><span>|              |--testb</span></span>\n<span class=\"line\"><span>|                   |--index.js // 打包后的文件</span></span>\n<span class=\"line\"><span>|                   |--index.js.map</span></span>\n<span class=\"line\"><span>|--pages</span></span>\n<span class=\"line\"><span>|--app.js</span></span>\n<span class=\"line\"><span>|--app.wxss</span></span>\n<span class=\"line\"><span>|--app.json</span></span>\n<span class=\"line\"><span>|--project.config.js</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>打包生成的代码在同级目录下会生成 source map 文件，方便进行逆向调试。</p>\n</div>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/mini-app/tools/npm.md","filePathRelative":"code/mini-app/tools/npm.md","frontmatter":{"date":"2020-10-09T00:00:00.000Z","title":"npm 支持","icon":"npm","category":"小程序"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>从小程序基础库版本 2.2.1 或以上、及开发者工具 1.02.1808300 或以上开始，小程序支持使用 npm 安装第三方包。</p>\n<p>此文档要求开发者们对 npm 有一定的了解，因此不会再去介绍 npm 的基本功能。如若之前未接触过 npm，请翻阅官方 npm 文档进行学习。</p>\n<!-- more -->\n<h2 id=\"使用-npm-包\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用-npm-包\"><span>使用 npm 包</span></a></h2>\n<ol>\n<li>\n<p>在小程序中执行命令安装 npm 包:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span></span></code></pre>\n</div><p>此处并没有强制要求 <code v-pre>node_modules</code> 必须在小程序根目录下(即 <code v-pre>project.config.js</code> 中的 <code v-pre>miniprogramRoot</code> 字段)，也可以存在于小程序根目录下的各个子目录中。但是不允许 <code v-pre>node_modules</code> 在小程序根目录外。</p>\n</li>\n<li>\n<p>点击开发者工具中的菜单栏: 工具 --&gt; 构建 npm</p>\n</li>\n<li>\n<p>勾选“使用 npm 模块”选项:</p>\n</li>\n<li>\n<p>构建完成后即可使用 npm 包。</p>\n</li>\n</ol>\n<p><strong>js 中引入 npm 包</strong>:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> myPackage</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"packageName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> packageOther</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"packageName/other\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>使用 npm 包中的自定义组件:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"usingComponents\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"myPackage\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"packageName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"package-other\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"packageName/other\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>此处使用 npm 包时如果只引入包名，则默认寻找包名下的 <code v-pre>index.js</code> 文件或者 <code v-pre>index</code> 组件。</p>\n</div>\n<h2 id=\"发布-npm-包\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布-npm-包\"><span>发布 npm 包</span></a></h2>\n<h3 id=\"发布小程序-npm-包的约束\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布小程序-npm-包的约束\"><span>发布小程序 npm 包的约束</span></a></h3>\n<p>这里要发布的 npm 包是特指专为小程序定制的 npm 包(下称小程序 npm 包)。因为小程序自定义组件的特殊性，原有的 npm 包机制无法满足我们的需求，所以这里需要对小程序 npm 包做一些约束:</p>\n<ol>\n<li>\n<p>小程序 npm 包要求根目录下必须有构建文件生成目录(默认为 miniprogram_dist 目录)，此目录可以通过在 package.json 文件中新增一个 miniprogram 字段来指定，比如:</p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"miniprogram-custom-component\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"version\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1.0.0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"description\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"miniprogram\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dist\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {},</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"dependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div></li>\n<li>\n<p>小程序 npm 包里只有构建文件生成目录会被算入小程序包的占用空间，上传小程序代码时也只会上传该目录的代码。如果小程序 npm 包有一些测试、构建相关的代码请放到构建文件生成目录外。另外也可以使用 <code v-pre>.npmignore</code> 文件来避免将一些非业务代码文件发布到 npm 中。</p>\n</li>\n<li>\n<p>测试、构建相关的依赖请放入 <code v-pre>devDependencies</code> 字段中避免被一起打包到小程序包中。</p>\n</li>\n</ol>\n<h3 id=\"发布其他-npm-包的约束\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布其他-npm-包的约束\"><span>发布其他 npm 包的约束</span></a></h3>\n<p>如果是已经发布过的一些 npm 包，因为一些原因无法改造成小程序 npm 包的结构的话，也可以通过微调后被使用，但是请确保遵循以下几点:</p>\n<ol>\n<li>\n<p>只支持纯 js 包，不支持自定义组件。</p>\n</li>\n<li>\n<p>必须有入口文件，即需要保证 package.json 中的 main 字段是指向一个正确的入口，如果 package.json 中没有 main 字段，则以 npm 包根目录下的 index.js 作为入口文件。</p>\n</li>\n<li>\n<p>测试、构建相关的依赖请放入 devDependencies 字段中避免被一起打包到小程序包中，这一点和小程序 npm 包的要求相同。</p>\n</li>\n<li>\n<p>不支持依赖 c++ addon，不支持依赖 Node.js 的内置库:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> addon</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"./addon.node\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不支持!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> http</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不支持!</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>对于一些纯 js 实现的 Node.js 内置库(如 path 模块)，可以通过额外安装其他开发者实现的 npm 包来支持。</p>\n</div>\n</li>\n<li>\n<p>使用 <code v-pre>require</code> 依赖的时候下列几种方式也是不允许的:</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不允许将 require 赋值给其他变量后再使用，以下代码不会去解析出具体依赖</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> r</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">r</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">r</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> r2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">r2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不允许 require 一个变量，以下代码依赖运行时，无法解析出具体依赖</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> m</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">m</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>小程序环境比较特殊，一些全局变量(如 window 对象)和构造器(如 Function 构造器)是无法使用的。</p>\n</li>\n</ol>\n<h2 id=\"原理介绍\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#原理介绍\"><span>原理介绍</span></a></h2>\n<p>为了帮助大家更好的理解发布 npm 包中提到的各种要求，这里简单介绍一下原理:</p>\n<ol>\n<li>\n<p>首先 <code v-pre>node_modules</code> 目录不会参与编译、上传和打包中，所以小程序想要使用 npm 包必须走一遍“构建 npm”的过程，在最外层的 <code v-pre>node_modules</code> 的同级目录下会生成一个 <code v-pre>miniprogram_npm</code> 目录，里面会存放构建打包后的 npm 包，也就是小程序真正使用的 npm 包。</p>\n</li>\n<li>\n<p>构建打包分为两种: 小程序 npm 包会直接拷贝构建文件生成目录下的所有文件到 <code v-pre>miniprogram_npm</code> 中；其他 npm 包则会从入口 js 文件开始走一遍依赖分析和打包过程(类似 webpack)。</p>\n</li>\n<li>\n<p>寻找 npm 包的过程和 npm 的实现类似，从依赖 npm 包的文件所在目录开始逐层往外找，直到找到可用的 npm 包或是小程序根目录为止。下面简单介绍下构建打包前后的目录情况，构建之前的结构:</p>\n</li>\n</ol>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>|--node_modules</span></span>\n<span class=\"line\"><span>|    |--testComp // 小程序 npm 包</span></span>\n<span class=\"line\"><span>|    |    |--package.json</span></span>\n<span class=\"line\"><span>|    |    |--src</span></span>\n<span class=\"line\"><span>|    |    |--miniprogram_dist</span></span>\n<span class=\"line\"><span>|    |         |-index.js</span></span>\n<span class=\"line\"><span>|    |         |-index.json</span></span>\n<span class=\"line\"><span>|    |         |-index.wxss</span></span>\n<span class=\"line\"><span>|    |         |-index.wxml</span></span>\n<span class=\"line\"><span>|    |--testa // 其他 npm 包</span></span>\n<span class=\"line\"><span>|         |--package.json</span></span>\n<span class=\"line\"><span>|         |--lib</span></span>\n<span class=\"line\"><span>|         |    |--entry.js</span></span>\n<span class=\"line\"><span>|         |--node_modules</span></span>\n<span class=\"line\"><span>|              |--testb</span></span>\n<span class=\"line\"><span>|                   |--package.json</span></span>\n<span class=\"line\"><span>|                   |--main.js</span></span>\n<span class=\"line\"><span>|--pages</span></span>\n<span class=\"line\"><span>|--app.js</span></span>\n<span class=\"line\"><span>|--app.wxss</span></span>\n<span class=\"line\"><span>|--app.json</span></span>\n<span class=\"line\"><span>|--project.config.js</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>构建之后的结构:</p>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>|--node_modules</span></span>\n<span class=\"line\"><span>|--miniprogram_npm</span></span>\n<span class=\"line\"><span>|    |--testComp // 小程序 npm 包</span></span>\n<span class=\"line\"><span>|    |    |-index.js</span></span>\n<span class=\"line\"><span>|    |    |-index.json</span></span>\n<span class=\"line\"><span>|    |    |-index.wxss</span></span>\n<span class=\"line\"><span>|    |    |-index.wxml</span></span>\n<span class=\"line\"><span>|    |--testa // 其他 npm 包</span></span>\n<span class=\"line\"><span>|         |--index.js // 打包后的文件</span></span>\n<span class=\"line\"><span>|         |--miniprogram_npm</span></span>\n<span class=\"line\"><span>|              |--testb</span></span>\n<span class=\"line\"><span>|                   |--index.js // 打包后的文件</span></span>\n<span class=\"line\"><span>|                   |--index.js.map</span></span>\n<span class=\"line\"><span>|--pages</span></span>\n<span class=\"line\"><span>|--app.js</span></span>\n<span class=\"line\"><span>|--app.wxss</span></span>\n<span class=\"line\"><span>|--app.json</span></span>\n<span class=\"line\"><span>|--project.config.js</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>打包生成的代码在同级目录下会生成 source map 文件，方便进行逆向调试。</p>\n</div>\n</template>","contentStripped":"<p>从小程序基础库版本 2.2.1 或以上、及开发者工具 1.02.1808300 或以上开始，小程序支持使用 npm 安装第三方包。</p>\n<p>此文档要求开发者们对 npm 有一定的了解，因此不会再去介绍 npm 的基本功能。如若之前未接触过 npm，请翻阅官方 npm 文档进行学习。</p>\n<!-- more -->\n<h2 id=\"使用-npm-包\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用-npm-包\"><span>使用 npm 包</span></a></h2>\n<ol>\n<li>\n<p>在小程序中执行命令安装 npm 包:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span></span></code></pre>\n</div><p>此处并没有强制要求 <code v-pre>node_modules</code> 必须在小程序根目录下(即 <code v-pre>project.config.js</code> 中的 <code v-pre>miniprogramRoot</code> 字段)，也可以存在于小程序根目录下的各个子目录中。但是不允许 <code v-pre>node_modules</code> 在小程序根目录外。</p>\n</li>\n<li>\n<p>点击开发者工具中的菜单栏: 工具 --&gt; 构建 npm</p>\n</li>\n<li>\n<p>勾选“使用 npm 模块”选项:</p>\n</li>\n<li>\n<p>构建完成后即可使用 npm 包。</p>\n</li>\n</ol>\n<p><strong>js 中引入 npm 包</strong>:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> myPackage</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"packageName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> packageOther</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"packageName/other\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>使用 npm 包中的自定义组件:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"usingComponents\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"myPackage\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"packageName\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"package-other\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"packageName/other\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>此处使用 npm 包时如果只引入包名，则默认寻找包名下的 <code v-pre>index.js</code> 文件或者 <code v-pre>index</code> 组件。</p>\n</div>\n<h2 id=\"发布-npm-包\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布-npm-包\"><span>发布 npm 包</span></a></h2>\n<h3 id=\"发布小程序-npm-包的约束\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布小程序-npm-包的约束\"><span>发布小程序 npm 包的约束</span></a></h3>\n<p>这里要发布的 npm 包是特指专为小程序定制的 npm 包(下称小程序 npm 包)。因为小程序自定义组件的特殊性，原有的 npm 包机制无法满足我们的需求，所以这里需要对小程序 npm 包做一些约束:</p>\n<ol>\n<li>\n<p>小程序 npm 包要求根目录下必须有构建文件生成目录(默认为 miniprogram_dist 目录)，此目录可以通过在 package.json 文件中新增一个 miniprogram 字段来指定，比如:</p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"miniprogram-custom-component\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"version\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"1.0.0\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"description\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"miniprogram\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"dist\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {},</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"dependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div></li>\n<li>\n<p>小程序 npm 包里只有构建文件生成目录会被算入小程序包的占用空间，上传小程序代码时也只会上传该目录的代码。如果小程序 npm 包有一些测试、构建相关的代码请放到构建文件生成目录外。另外也可以使用 <code v-pre>.npmignore</code> 文件来避免将一些非业务代码文件发布到 npm 中。</p>\n</li>\n<li>\n<p>测试、构建相关的依赖请放入 <code v-pre>devDependencies</code> 字段中避免被一起打包到小程序包中。</p>\n</li>\n</ol>\n<h3 id=\"发布其他-npm-包的约束\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#发布其他-npm-包的约束\"><span>发布其他 npm 包的约束</span></a></h3>\n<p>如果是已经发布过的一些 npm 包，因为一些原因无法改造成小程序 npm 包的结构的话，也可以通过微调后被使用，但是请确保遵循以下几点:</p>\n<ol>\n<li>\n<p>只支持纯 js 包，不支持自定义组件。</p>\n</li>\n<li>\n<p>必须有入口文件，即需要保证 package.json 中的 main 字段是指向一个正确的入口，如果 package.json 中没有 main 字段，则以 npm 包根目录下的 index.js 作为入口文件。</p>\n</li>\n<li>\n<p>测试、构建相关的依赖请放入 devDependencies 字段中避免被一起打包到小程序包中，这一点和小程序 npm 包的要求相同。</p>\n</li>\n<li>\n<p>不支持依赖 c++ addon，不支持依赖 Node.js 的内置库:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> addon</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"./addon.node\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不支持!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> http</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"http\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">); </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不支持!</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>对于一些纯 js 实现的 Node.js 内置库(如 path 模块)，可以通过额外安装其他开发者实现的 npm 包来支持。</p>\n</div>\n</li>\n<li>\n<p>使用 <code v-pre>require</code> 依赖的时候下列几种方式也是不允许的:</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不允许将 require 赋值给其他变量后再使用，以下代码不会去解析出具体依赖</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> r</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">r</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">r</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> r2</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">r2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 不允许 require 一个变量，以下代码依赖运行时，无法解析出具体依赖</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">let</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> m</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"testa\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">m</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></li>\n<li>\n<p>小程序环境比较特殊，一些全局变量(如 window 对象)和构造器(如 Function 构造器)是无法使用的。</p>\n</li>\n</ol>\n<h2 id=\"原理介绍\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#原理介绍\"><span>原理介绍</span></a></h2>\n<p>为了帮助大家更好的理解发布 npm 包中提到的各种要求，这里简单介绍一下原理:</p>\n<ol>\n<li>\n<p>首先 <code v-pre>node_modules</code> 目录不会参与编译、上传和打包中，所以小程序想要使用 npm 包必须走一遍“构建 npm”的过程，在最外层的 <code v-pre>node_modules</code> 的同级目录下会生成一个 <code v-pre>miniprogram_npm</code> 目录，里面会存放构建打包后的 npm 包，也就是小程序真正使用的 npm 包。</p>\n</li>\n<li>\n<p>构建打包分为两种: 小程序 npm 包会直接拷贝构建文件生成目录下的所有文件到 <code v-pre>miniprogram_npm</code> 中；其他 npm 包则会从入口 js 文件开始走一遍依赖分析和打包过程(类似 webpack)。</p>\n</li>\n<li>\n<p>寻找 npm 包的过程和 npm 的实现类似，从依赖 npm 包的文件所在目录开始逐层往外找，直到找到可用的 npm 包或是小程序根目录为止。下面简单介绍下构建打包前后的目录情况，构建之前的结构:</p>\n</li>\n</ol>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>|--node_modules</span></span>\n<span class=\"line\"><span>|    |--testComp // 小程序 npm 包</span></span>\n<span class=\"line\"><span>|    |    |--package.json</span></span>\n<span class=\"line\"><span>|    |    |--src</span></span>\n<span class=\"line\"><span>|    |    |--miniprogram_dist</span></span>\n<span class=\"line\"><span>|    |         |-index.js</span></span>\n<span class=\"line\"><span>|    |         |-index.json</span></span>\n<span class=\"line\"><span>|    |         |-index.wxss</span></span>\n<span class=\"line\"><span>|    |         |-index.wxml</span></span>\n<span class=\"line\"><span>|    |--testa // 其他 npm 包</span></span>\n<span class=\"line\"><span>|         |--package.json</span></span>\n<span class=\"line\"><span>|         |--lib</span></span>\n<span class=\"line\"><span>|         |    |--entry.js</span></span>\n<span class=\"line\"><span>|         |--node_modules</span></span>\n<span class=\"line\"><span>|              |--testb</span></span>\n<span class=\"line\"><span>|                   |--package.json</span></span>\n<span class=\"line\"><span>|                   |--main.js</span></span>\n<span class=\"line\"><span>|--pages</span></span>\n<span class=\"line\"><span>|--app.js</span></span>\n<span class=\"line\"><span>|--app.wxss</span></span>\n<span class=\"line\"><span>|--app.json</span></span>\n<span class=\"line\"><span>|--project.config.js</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>构建之后的结构:</p>\n<div class=\"language- line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"\" data-title=\"\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span>|--node_modules</span></span>\n<span class=\"line\"><span>|--miniprogram_npm</span></span>\n<span class=\"line\"><span>|    |--testComp // 小程序 npm 包</span></span>\n<span class=\"line\"><span>|    |    |-index.js</span></span>\n<span class=\"line\"><span>|    |    |-index.json</span></span>\n<span class=\"line\"><span>|    |    |-index.wxss</span></span>\n<span class=\"line\"><span>|    |    |-index.wxml</span></span>\n<span class=\"line\"><span>|    |--testa // 其他 npm 包</span></span>\n<span class=\"line\"><span>|         |--index.js // 打包后的文件</span></span>\n<span class=\"line\"><span>|         |--miniprogram_npm</span></span>\n<span class=\"line\"><span>|              |--testb</span></span>\n<span class=\"line\"><span>|                   |--index.js // 打包后的文件</span></span>\n<span class=\"line\"><span>|                   |--index.js.map</span></span>\n<span class=\"line\"><span>|--pages</span></span>\n<span class=\"line\"><span>|--app.js</span></span>\n<span class=\"line\"><span>|--app.wxss</span></span>\n<span class=\"line\"><span>|--app.json</span></span>\n<span class=\"line\"><span>|--project.config.js</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>打包生成的代码在同级目录下会生成 source map 文件，方便进行逆向调试。</p>\n</div>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n从小程序基础库版本 2.2.1 或以上、及开发者工具 1.02.1808300 或以上开始，小程序支持使用 npm 安装第三方包。\n\n此文档要求开发者们对 npm 有一定的了解，因此不会再去介绍 npm 的基本功能。如若之前未接触过 npm，请翻阅官方 npm 文档进行学习。\n\n<!-- more -->\n\n## 使用 npm 包\n\n1. 在小程序中执行命令安装 npm 包:\n\n   ```bash\n   npm install\n   ```\n\n   此处并没有强制要求 `node_modules` 必须在小程序根目录下(即 `project.config.js` 中的 `miniprogramRoot` 字段)，也可以存在于小程序根目录下的各个子目录中。但是不允许 `node_modules` 在小程序根目录外。\n\n1. 点击开发者工具中的菜单栏: 工具 --> 构建 npm\n\n1. 勾选“使用 npm 模块”选项:\n\n1. 构建完成后即可使用 npm 包。\n\n**js 中引入 npm 包**:\n\n```js\nconst myPackage = require(\"packageName\");\nconst packageOther = require(\"packageName/other\");\n```\n\n使用 npm 包中的自定义组件:\n\n```js\n{\n  \"usingComponents\": {\n    \"myPackage\": \"packageName\",\n    \"package-other\": \"packageName/other\"\n  }\n}\n```\n\n::: tip\n\n此处使用 npm 包时如果只引入包名，则默认寻找包名下的 `index.js` 文件或者 `index` 组件。\n\n:::\n\n## 发布 npm 包\n\n### 发布小程序 npm 包的约束\n\n这里要发布的 npm 包是特指专为小程序定制的 npm 包(下称小程序 npm 包)。因为小程序自定义组件的特殊性，原有的 npm 包机制无法满足我们的需求，所以这里需要对小程序 npm 包做一些约束:\n\n1. 小程序 npm 包要求根目录下必须有构建文件生成目录(默认为 miniprogram_dist 目录)，此目录可以通过在 package.json 文件中新增一个 miniprogram 字段来指定，比如:\n\n   ```json\n   {\n     \"name\": \"miniprogram-custom-component\",\n     \"version\": \"1.0.0\",\n     \"description\": \"\",\n     \"miniprogram\": \"dist\",\n     \"devDependencies\": {},\n     \"dependencies\": {}\n   }\n   ```\n\n1. 小程序 npm 包里只有构建文件生成目录会被算入小程序包的占用空间，上传小程序代码时也只会上传该目录的代码。如果小程序 npm 包有一些测试、构建相关的代码请放到构建文件生成目录外。另外也可以使用 `.npmignore` 文件来避免将一些非业务代码文件发布到 npm 中。\n\n1. 测试、构建相关的依赖请放入 `devDependencies` 字段中避免被一起打包到小程序包中。\n\n### 发布其他 npm 包的约束\n\n如果是已经发布过的一些 npm 包，因为一些原因无法改造成小程序 npm 包的结构的话，也可以通过微调后被使用，但是请确保遵循以下几点:\n\n1. 只支持纯 js 包，不支持自定义组件。\n1. 必须有入口文件，即需要保证 package.json 中的 main 字段是指向一个正确的入口，如果 package.json 中没有 main 字段，则以 npm 包根目录下的 index.js 作为入口文件。\n1. 测试、构建相关的依赖请放入 devDependencies 字段中避免被一起打包到小程序包中，这一点和小程序 npm 包的要求相同。\n1. 不支持依赖 c++ addon，不支持依赖 Node.js 的内置库:\n\n   ```js\n   const addon = require(\"./addon.node\"); // 不支持!\n   const http = require(\"http\"); // 不支持!\n   ```\n\n   ::: tip\n\n   对于一些纯 js 实现的 Node.js 内置库(如 path 模块)，可以通过额外安装其他开发者实现的 npm 包来支持。\n\n   :::\n\n1. 使用 `require` 依赖的时候下列几种方式也是不允许的:\n\n   ```js\n   // 不允许将 require 赋值给其他变量后再使用，以下代码不会去解析出具体依赖\n   let r;\n   r = require;\n   r(\"testa\");\n\n   let r2 = require;\n   r2(\"testa\");\n\n   // 不允许 require 一个变量，以下代码依赖运行时，无法解析出具体依赖\n   let m = \"testa\";\n   require(m);\n   ```\n\n1. 小程序环境比较特殊，一些全局变量(如 window 对象)和构造器(如 Function 构造器)是无法使用的。\n\n## 原理介绍\n\n为了帮助大家更好的理解发布 npm 包中提到的各种要求，这里简单介绍一下原理:\n\n1. 首先 `node_modules` 目录不会参与编译、上传和打包中，所以小程序想要使用 npm 包必须走一遍“构建 npm”的过程，在最外层的 `node_modules` 的同级目录下会生成一个 `miniprogram_npm` 目录，里面会存放构建打包后的 npm 包，也就是小程序真正使用的 npm 包。\n\n1. 构建打包分为两种: 小程序 npm 包会直接拷贝构建文件生成目录下的所有文件到 `miniprogram_npm` 中；其他 npm 包则会从入口 js 文件开始走一遍依赖分析和打包过程(类似 webpack)。\n\n1. 寻找 npm 包的过程和 npm 的实现类似，从依赖 npm 包的文件所在目录开始逐层往外找，直到找到可用的 npm 包或是小程序根目录为止。下面简单介绍下构建打包前后的目录情况，构建之前的结构:\n\n```\n|--node_modules\n|    |--testComp // 小程序 npm 包\n|    |    |--package.json\n|    |    |--src\n|    |    |--miniprogram_dist\n|    |         |-index.js\n|    |         |-index.json\n|    |         |-index.wxss\n|    |         |-index.wxml\n|    |--testa // 其他 npm 包\n|         |--package.json\n|         |--lib\n|         |    |--entry.js\n|         |--node_modules\n|              |--testb\n|                   |--package.json\n|                   |--main.js\n|--pages\n|--app.js\n|--app.wxss\n|--app.json\n|--project.config.js\n```\n\n构建之后的结构:\n\n```\n|--node_modules\n|--miniprogram_npm\n|    |--testComp // 小程序 npm 包\n|    |    |-index.js\n|    |    |-index.json\n|    |    |-index.wxss\n|    |    |-index.wxml\n|    |--testa // 其他 npm 包\n|         |--index.js // 打包后的文件\n|         |--miniprogram_npm\n|              |--testb\n|                   |--index.js // 打包后的文件\n|                   |--index.js.map\n|--pages\n|--app.js\n|--app.wxss\n|--app.json\n|--project.config.js\n```\n\n::: tip\n\n打包生成的代码在同级目录下会生成 source map 文件，方便进行逆向调试。\n\n:::\n","excerpt":"","title":"","headers":[{"level":2,"title":"使用 npm 包","slug":"使用-npm-包","link":"#使用-npm-包","children":[]},{"level":2,"title":"发布 npm 包","slug":"发布-npm-包","link":"#发布-npm-包","children":[{"level":3,"title":"发布小程序 npm 包的约束","slug":"发布小程序-npm-包的约束","link":"#发布小程序-npm-包的约束","children":[]},{"level":3,"title":"发布其他 npm 包的约束","slug":"发布其他-npm-包的约束","link":"#发布其他-npm-包的约束","children":[]}]},{"level":2,"title":"原理介绍","slug":"原理介绍","link":"#原理介绍","children":[]}]}}
