{"content":"<h2 id=\"命令提示符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令提示符\"><span>命令提示符</span></a></h2>\n<p>登录系统后，第一眼看到的内容是:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]#</span></span></code></pre>\n</div><p>这就是 Linux 系统的命令提示符。那么，这个提示符的含义是什么呢?</p>\n<ul>\n<li><code v-pre>[]</code>: 这是提示符的分隔符号，没有特殊含义。</li>\n<li><code v-pre>root</code>: 显示的是当前的登录用户，笔者现在使用的是 root 用户登录。</li>\n<li><code v-pre>@</code>: 分隔符号，没有特殊含义。</li>\n<li><code v-pre>localhost</code>: 当前系统的简写主机名(完整主机名是 <code v-pre>localhost.localdomain</code>)。</li>\n<li><code v-pre>~</code>: 代表用户当前所在的目录，此例中用户当前所在的目录是家目录。</li>\n<li><code v-pre>#</code>: 命令提示符，Linux 用这个符号标识登录的用户权限等级。如果是超级用户，提示符就是 <code v-pre>#</code>；如果是普通用户，提示符就是 <code v-pre>$</code>。</li>\n</ul>\n<p>家目录(又称主目录)是什么? Linux 系统是纯字符界面，用户登录后，要有一个初始登录的位置，这个初始登录位置就称为用户的家:\n超级用户的家目录: <code v-pre>/root</code>。\n普通用户的家目录: <code v-pre>/home/用户名</code>。</p>\n<p>用户在自己的家目录中拥有完整权限，所以我们也建议操作实验可以放在家目录中进行。我们切换一下用户所在目录，看看有什么效果。</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# cd /usr/local</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost local]#</span></span></code></pre>\n</div><p>仔细看，如果切换用户所在目录，那么命令提示符中的会变成用户当前所在目录的最后一个目录(不显示完整的所在目录 <code v-pre>/usr/loca</code>l，只显示最后一个目录 <code v-pre>local</code>)。</p>\n<h2 id=\"命令的基本格式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令的基本格式\"><span>命令的基本格式</span></a></h2>\n<p>接下来看看 Linux 命令的基本格式:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# 命令[选项][参数]</span></span></code></pre>\n</div><p>命令格式中的 <code v-pre>[]</code> 代表可选项，也就是有些命令可以不写选项或参数，也能执行。那么，我们就用 Linux 中最常见的 <code v-pre>ls</code> 命令来解释一下命令的格式(有关 <code v-pre>ls</code> 命令的具体用法，后续章节会详细介绍)。如果按照命令的分类，那么 <code v-pre>ls</code> 命令应该属于目录操作命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">anaconda-ks.cfg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log.syslog</span></span></code></pre>\n</div><ol>\n<li>\n<p>选项的作用</p>\n<p>选项的作用是调整命令功能。如果没有选项，那么命令只能执行最基本的功能；而一旦有选项，则可以显示更加丰富的数据。</p>\n<p>Linux 的选项又分为短格式选项(<code v-pre>-l</code>)和长格式选项(-<code v-pre>-all</code>)。短格式选项是英文的简写，用一个减号调用，例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l</span></span></code></pre>\n</div><p>而长格式选项是英文完整单词，一般用两个减号调用，例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls --all</span></span></code></pre>\n</div><p>一般情况下，短格式选项是长格式选项的缩写，也就是一个短格式选项会有对应的长格式选项。当然也有例外，比如 <code v-pre>ls</code> 命令的短格式选项 <code v-pre>-l</code> 就没有对应的长格式选项。所以具体的命令选项可以通过后面我们要学习的帮助命令来进行査询。</p>\n</li>\n<li>\n<p>参数的作用</p>\n<p>参数是命令的操作对象，一般文件、目录、用户和进程等可以作为参数被命令操作。例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l anaconda-ks.cfg</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">-rw-------.1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1207</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 月</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 14</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 18:18</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> anaconda-ks.cfg</span></span></code></pre>\n</div><p>但是为什么一开始 <code v-pre>ls</code> 命令可以省略参数? 那是因为有默认参数。命令一般都需要加入参数，用于指定命令操作的对象是谁。如果可以省略参数，则一般都有默认参数。例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">anaconda-ks.cfg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log.syslog</span></span></code></pre>\n</div><p>这个 <code v-pre>ls</code> 命令后面没有指定参数，默认参数是当前所在位置，所以会显示当前目录下的文件名。</p>\n</li>\n</ol>\n<p>总结一下: <strong>命令的选项用于调整命令功能，而命令的参数是这个命令的操作对象。</strong></p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/linux/command/command.md","filePathRelative":"linux/command/command.md","frontmatter":{"title":"基本格式","icon":"shell","date":"2019-11-18T00:00:00.000Z","category":"Linux"},"sfcBlocks":{"template":{"type":"template","content":"<template><h2 id=\"命令提示符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令提示符\"><span>命令提示符</span></a></h2>\n<p>登录系统后，第一眼看到的内容是:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]#</span></span></code></pre>\n</div><p>这就是 Linux 系统的命令提示符。那么，这个提示符的含义是什么呢?</p>\n<ul>\n<li><code v-pre>[]</code>: 这是提示符的分隔符号，没有特殊含义。</li>\n<li><code v-pre>root</code>: 显示的是当前的登录用户，笔者现在使用的是 root 用户登录。</li>\n<li><code v-pre>@</code>: 分隔符号，没有特殊含义。</li>\n<li><code v-pre>localhost</code>: 当前系统的简写主机名(完整主机名是 <code v-pre>localhost.localdomain</code>)。</li>\n<li><code v-pre>~</code>: 代表用户当前所在的目录，此例中用户当前所在的目录是家目录。</li>\n<li><code v-pre>#</code>: 命令提示符，Linux 用这个符号标识登录的用户权限等级。如果是超级用户，提示符就是 <code v-pre>#</code>；如果是普通用户，提示符就是 <code v-pre>$</code>。</li>\n</ul>\n<p>家目录(又称主目录)是什么? Linux 系统是纯字符界面，用户登录后，要有一个初始登录的位置，这个初始登录位置就称为用户的家:\n超级用户的家目录: <code v-pre>/root</code>。\n普通用户的家目录: <code v-pre>/home/用户名</code>。</p>\n<p>用户在自己的家目录中拥有完整权限，所以我们也建议操作实验可以放在家目录中进行。我们切换一下用户所在目录，看看有什么效果。</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# cd /usr/local</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost local]#</span></span></code></pre>\n</div><p>仔细看，如果切换用户所在目录，那么命令提示符中的会变成用户当前所在目录的最后一个目录(不显示完整的所在目录 <code v-pre>/usr/loca</code>l，只显示最后一个目录 <code v-pre>local</code>)。</p>\n<h2 id=\"命令的基本格式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令的基本格式\"><span>命令的基本格式</span></a></h2>\n<p>接下来看看 Linux 命令的基本格式:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# 命令[选项][参数]</span></span></code></pre>\n</div><p>命令格式中的 <code v-pre>[]</code> 代表可选项，也就是有些命令可以不写选项或参数，也能执行。那么，我们就用 Linux 中最常见的 <code v-pre>ls</code> 命令来解释一下命令的格式(有关 <code v-pre>ls</code> 命令的具体用法，后续章节会详细介绍)。如果按照命令的分类，那么 <code v-pre>ls</code> 命令应该属于目录操作命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">anaconda-ks.cfg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log.syslog</span></span></code></pre>\n</div><ol>\n<li>\n<p>选项的作用</p>\n<p>选项的作用是调整命令功能。如果没有选项，那么命令只能执行最基本的功能；而一旦有选项，则可以显示更加丰富的数据。</p>\n<p>Linux 的选项又分为短格式选项(<code v-pre>-l</code>)和长格式选项(-<code v-pre>-all</code>)。短格式选项是英文的简写，用一个减号调用，例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l</span></span></code></pre>\n</div><p>而长格式选项是英文完整单词，一般用两个减号调用，例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls --all</span></span></code></pre>\n</div><p>一般情况下，短格式选项是长格式选项的缩写，也就是一个短格式选项会有对应的长格式选项。当然也有例外，比如 <code v-pre>ls</code> 命令的短格式选项 <code v-pre>-l</code> 就没有对应的长格式选项。所以具体的命令选项可以通过后面我们要学习的帮助命令来进行査询。</p>\n</li>\n<li>\n<p>参数的作用</p>\n<p>参数是命令的操作对象，一般文件、目录、用户和进程等可以作为参数被命令操作。例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l anaconda-ks.cfg</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">-rw-------.1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1207</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 月</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 14</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 18:18</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> anaconda-ks.cfg</span></span></code></pre>\n</div><p>但是为什么一开始 <code v-pre>ls</code> 命令可以省略参数? 那是因为有默认参数。命令一般都需要加入参数，用于指定命令操作的对象是谁。如果可以省略参数，则一般都有默认参数。例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">anaconda-ks.cfg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log.syslog</span></span></code></pre>\n</div><p>这个 <code v-pre>ls</code> 命令后面没有指定参数，默认参数是当前所在位置，所以会显示当前目录下的文件名。</p>\n</li>\n</ol>\n<p>总结一下: <strong>命令的选项用于调整命令功能，而命令的参数是这个命令的操作对象。</strong></p>\n</template>","contentStripped":"<h2 id=\"命令提示符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令提示符\"><span>命令提示符</span></a></h2>\n<p>登录系统后，第一眼看到的内容是:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]#</span></span></code></pre>\n</div><p>这就是 Linux 系统的命令提示符。那么，这个提示符的含义是什么呢?</p>\n<ul>\n<li><code v-pre>[]</code>: 这是提示符的分隔符号，没有特殊含义。</li>\n<li><code v-pre>root</code>: 显示的是当前的登录用户，笔者现在使用的是 root 用户登录。</li>\n<li><code v-pre>@</code>: 分隔符号，没有特殊含义。</li>\n<li><code v-pre>localhost</code>: 当前系统的简写主机名(完整主机名是 <code v-pre>localhost.localdomain</code>)。</li>\n<li><code v-pre>~</code>: 代表用户当前所在的目录，此例中用户当前所在的目录是家目录。</li>\n<li><code v-pre>#</code>: 命令提示符，Linux 用这个符号标识登录的用户权限等级。如果是超级用户，提示符就是 <code v-pre>#</code>；如果是普通用户，提示符就是 <code v-pre>$</code>。</li>\n</ul>\n<p>家目录(又称主目录)是什么? Linux 系统是纯字符界面，用户登录后，要有一个初始登录的位置，这个初始登录位置就称为用户的家:\n超级用户的家目录: <code v-pre>/root</code>。\n普通用户的家目录: <code v-pre>/home/用户名</code>。</p>\n<p>用户在自己的家目录中拥有完整权限，所以我们也建议操作实验可以放在家目录中进行。我们切换一下用户所在目录，看看有什么效果。</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# cd /usr/local</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost local]#</span></span></code></pre>\n</div><p>仔细看，如果切换用户所在目录，那么命令提示符中的会变成用户当前所在目录的最后一个目录(不显示完整的所在目录 <code v-pre>/usr/loca</code>l，只显示最后一个目录 <code v-pre>local</code>)。</p>\n<h2 id=\"命令的基本格式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令的基本格式\"><span>命令的基本格式</span></a></h2>\n<p>接下来看看 Linux 命令的基本格式:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# 命令[选项][参数]</span></span></code></pre>\n</div><p>命令格式中的 <code v-pre>[]</code> 代表可选项，也就是有些命令可以不写选项或参数，也能执行。那么，我们就用 Linux 中最常见的 <code v-pre>ls</code> 命令来解释一下命令的格式(有关 <code v-pre>ls</code> 命令的具体用法，后续章节会详细介绍)。如果按照命令的分类，那么 <code v-pre>ls</code> 命令应该属于目录操作命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">anaconda-ks.cfg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log.syslog</span></span></code></pre>\n</div><ol>\n<li>\n<p>选项的作用</p>\n<p>选项的作用是调整命令功能。如果没有选项，那么命令只能执行最基本的功能；而一旦有选项，则可以显示更加丰富的数据。</p>\n<p>Linux 的选项又分为短格式选项(<code v-pre>-l</code>)和长格式选项(-<code v-pre>-all</code>)。短格式选项是英文的简写，用一个减号调用，例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l</span></span></code></pre>\n</div><p>而长格式选项是英文完整单词，一般用两个减号调用，例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls --all</span></span></code></pre>\n</div><p>一般情况下，短格式选项是长格式选项的缩写，也就是一个短格式选项会有对应的长格式选项。当然也有例外，比如 <code v-pre>ls</code> 命令的短格式选项 <code v-pre>-l</code> 就没有对应的长格式选项。所以具体的命令选项可以通过后面我们要学习的帮助命令来进行査询。</p>\n</li>\n<li>\n<p>参数的作用</p>\n<p>参数是命令的操作对象，一般文件、目录、用户和进程等可以作为参数被命令操作。例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls -l anaconda-ks.cfg</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">-rw-------.1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> root</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1207</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 月</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 14</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 18:18</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> anaconda-ks.cfg</span></span></code></pre>\n</div><p>但是为什么一开始 <code v-pre>ls</code> 命令可以省略参数? 那是因为有默认参数。命令一般都需要加入参数，用于指定命令操作的对象是谁。如果可以省略参数，则一般都有默认参数。例如:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">anaconda-ks.cfg</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install.log.syslog</span></span></code></pre>\n</div><p>这个 <code v-pre>ls</code> 命令后面没有指定参数，默认参数是当前所在位置，所以会显示当前目录下的文件名。</p>\n</li>\n</ol>\n<p>总结一下: <strong>命令的选项用于调整命令功能，而命令的参数是这个命令的操作对象。</strong></p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n## 命令提示符\n\n登录系统后，第一眼看到的内容是:\n\n```shellsession\n[root@localhost ~]#\n```\n\n这就是 Linux 系统的命令提示符。那么，这个提示符的含义是什么呢?\n\n- `[]`: 这是提示符的分隔符号，没有特殊含义。\n- `root`: 显示的是当前的登录用户，笔者现在使用的是 root 用户登录。\n- `@`: 分隔符号，没有特殊含义。\n- `localhost`: 当前系统的简写主机名(完整主机名是 `localhost.localdomain`)。\n- `~`: 代表用户当前所在的目录，此例中用户当前所在的目录是家目录。\n- `#`: 命令提示符，Linux 用这个符号标识登录的用户权限等级。如果是超级用户，提示符就是 `#`；如果是普通用户，提示符就是 `$`。\n\n家目录(又称主目录)是什么? Linux 系统是纯字符界面，用户登录后，要有一个初始登录的位置，这个初始登录位置就称为用户的家:\n超级用户的家目录: `/root`。\n普通用户的家目录: `/home/用户名`。\n\n用户在自己的家目录中拥有完整权限，所以我们也建议操作实验可以放在家目录中进行。我们切换一下用户所在目录，看看有什么效果。\n\n```shellsession\n[root@localhost ~]# cd /usr/local\n[root@localhost local]#\n```\n\n仔细看，如果切换用户所在目录，那么命令提示符中的会变成用户当前所在目录的最后一个目录(不显示完整的所在目录 `/usr/loca`l，只显示最后一个目录 `local`)。\n\n## 命令的基本格式\n\n接下来看看 Linux 命令的基本格式:\n\n```shellsession\n[root@localhost ~]# 命令[选项][参数]\n```\n\n命令格式中的 `[]` 代表可选项，也就是有些命令可以不写选项或参数，也能执行。那么，我们就用 Linux 中最常见的 `ls` 命令来解释一下命令的格式(有关 `ls` 命令的具体用法，后续章节会详细介绍)。如果按照命令的分类，那么 `ls` 命令应该属于目录操作命令。\n\n```bash\n[root@localhost ~]# ls\nanaconda-ks.cfg install.log install.log.syslog\n```\n\n1. 选项的作用\n\n   选项的作用是调整命令功能。如果没有选项，那么命令只能执行最基本的功能；而一旦有选项，则可以显示更加丰富的数据。\n\n   Linux 的选项又分为短格式选项(`-l`)和长格式选项(-`-all`)。短格式选项是英文的简写，用一个减号调用，例如:\n\n   ```bash\n   [root@localhost ~]# ls -l\n   ```\n\n   而长格式选项是英文完整单词，一般用两个减号调用，例如:\n\n   ```bash\n   [root@localhost ~]# ls --all\n   ```\n\n   一般情况下，短格式选项是长格式选项的缩写，也就是一个短格式选项会有对应的长格式选项。当然也有例外，比如 `ls` 命令的短格式选项 `-l` 就没有对应的长格式选项。所以具体的命令选项可以通过后面我们要学习的帮助命令来进行査询。\n\n1. 参数的作用\n\n   参数是命令的操作对象，一般文件、目录、用户和进程等可以作为参数被命令操作。例如:\n\n   ```bash\n   [root@localhost ~]# ls -l anaconda-ks.cfg\n   -rw-------.1 root root 1207 1 月 14 18:18 anaconda-ks.cfg\n   ```\n\n   但是为什么一开始 `ls` 命令可以省略参数? 那是因为有默认参数。命令一般都需要加入参数，用于指定命令操作的对象是谁。如果可以省略参数，则一般都有默认参数。例如:\n\n   ```bash\n   [root@localhost ~]# ls\n   anaconda-ks.cfg install.log install.log.syslog\n   ```\n\n   这个 `ls` 命令后面没有指定参数，默认参数是当前所在位置，所以会显示当前目录下的文件名。\n\n总结一下: **命令的选项用于调整命令功能，而命令的参数是这个命令的操作对象。**\n","excerpt":"","title":"","headers":[{"level":2,"title":"命令提示符","slug":"命令提示符","link":"#命令提示符","children":[]},{"level":2,"title":"命令的基本格式","slug":"命令的基本格式","link":"#命令的基本格式","children":[]}]}}
