{"content":"<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>因为 JavaScript 是一门编程语言，不再是 HTML 和 CSS 这种看得见摸得着的东西，所以我们从如何引入、运行并调试开始讲起。</p>\n</div>\n<!-- more -->\n<h2 id=\"练习方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#练习方法\"><span>练习方法</span></a></h2>\n<p>本博客包含大量的示例代码，只要电脑安装了浏览器，就可以用来实验了。读者可以一边读一边运行示例，加深理解。</p>\n<p>推荐安装 <RouteLink to=\"/software/chrome.html\">Chrome 浏览器</RouteLink>，它的“开发者工具”(Developer Tools)里面的“控制台”(console)，就是运行 JavaScript 代码的理想环境。</p>\n<p>进入 Chrome 浏览器的“控制台”，有两种方法。</p>\n<ul>\n<li>直接进入: 按下 <code v-pre>Option + Command + J</code> (Mac) 或者 <code v-pre>Ctrl + Shift + J</code> (Windows / Linux)</li>\n<li>开发者工具进入: 开发者工具的快捷键是 F12，或者 <code v-pre>Option + Command + I</code> (Mac) 以及 <code v-pre>Ctrl + Shift + I</code> (Windows / Linux)，然后选择 Console 面板</li>\n</ul>\n<p>进入控制台以后，就可以在提示符后输入代码，然后按 <code v-pre>Enter</code> 键，代码就会执行。如果按 <code v-pre>Shift + Enter</code> 键，就是代码换行，不会触发执行。建议阅读本教程时，将代码复制到控制台进行实验。</p>\n<p>作为尝试，您可以将下面的程序复制到“控制台”，按下回车后，就可以看到运行结果。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> greetMe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">yourName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Hello \"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> yourName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">greetMe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"World\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// Hello World</span></span></code></pre>\n</div><h2 id=\"javascript-的引入\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的引入\"><span>JavaScript 的引入</span></a></h2>\n<p>JavaScript 代码可以直接嵌在网页的任何地方。</p>\n<p>如果想要在网页显示前就载入并运行 JavaScript，通常我们把代码放到 <code v-pre>&lt;head&gt;</code> 中，如图:</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">      alert</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Hello, world\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>由 <code v-pre>&lt;script&gt;...&lt;/script&gt;</code> 包含的代码就是 JavaScript 代码，它将直接被浏览器执行。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>和 CSS 类似，我们管这种引入方式叫做 “内联脚本”。</p>\n</div>\n<p>第二种方法是把 JavaScript 代码放到一个单独的 <code v-pre>js</code> 文件，然后在 HTML 中通过 <code v-pre>&lt;script src=&quot;...&quot;&gt;&lt;/script&gt;</code> 引入这个文件:</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/static/js/abc.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>这样， <code v-pre>/static/js/abc.js</code> 就会被浏览器执行。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>和 CSS 类似，我们称这种引入方式为外部引入。</p>\n<p>外部引入有多种好处:</p>\n<ul>\n<li>把 JavaScript 代码放入一个单独的 js 文件中更利于维护代码，并且多个页面可以各自引用同一份 js 文件。</li>\n<li>可以在同一个页面中引入多个.js 文件，还可以在页面中多次编写 <code v-pre>&lt;script&gt; js代码... &lt;/script&gt;</code> ，浏览器按照顺序依次执行。</li>\n<li>如果网页是静态的，希望尽快向用户呈现，可以将 JavaScript 代码放在文件的最后。</li>\n</ul>\n</div>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>因为 <code v-pre>&lt;script&gt;</code> 标签默认的 <code v-pre>type</code> 就是 JavaScript，所以下方的写法是没有必要的。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/javascript\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div></div>\n<h2 id=\"javascript-的编写\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的编写\"><span>JavaScript 的编写</span></a></h2>\n<p>可以用任何文本编辑器来编写 JavaScript 代码。这里推荐 <RouteLink to=\"/software/vscode/\">Visual Studio Code</RouteLink>。</p>\n<h2 id=\"javascript-的运行\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的运行\"><span>JavaScript 的运行</span></a></h2>\n<h3 id=\"浏览器运行\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器运行\"><span>浏览器运行</span></a></h3>\n<p>要让浏览器运行 JavaScript，必须先有一个 HTML 页面，在 HTML 页面中引入 JavaScript，然后，让浏览器加载该 HTML 页面，就可以执行 JavaScript 代码。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>直接在硬盘上创建好 HTML 和 JavaScript 文件，然后用浏览器打开的方式运行部分 JavaScript 代码没有问题，但由于浏览器的安全限制，以 <code v-pre>file://</code> 开头的地址无法执行如联网等 JavaScript 代码，</p>\n</div>\n<h3 id=\"架设本地服务器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#架设本地服务器\"><span>架设本地服务器</span></a></h3>\n<p>运行 JavaScript 也可以在本地架设一个 Web 服务器，然后以 <code v-pre>http://</code> 或 <code v-pre>https://</code> 开头的地址来正常执行所有 JavaScript 代码。如有需要请下载 Mr.Hope 制作的 WAMP / WNMP 一键安装工具。</p>\n<h3 id=\"使用-node-js\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用-node-js\"><span>使用 Node.js</span></a></h3>\n<p>Node.js 是一个著名的基于 JavaScript 的后端工具，可以很方便快捷的执行并调试 JavaScript。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>关于 Node.js 的详细教程，请查看<RouteLink to=\"/code/node-js/\">这里</RouteLink></p>\n</div>\n<h2 id=\"javascript-的调试\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的调试\"><span>JavaScript 的调试</span></a></h2>\n<h3 id=\"浏览器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器\"><span>浏览器</span></a></h3>\n<p>写 JavaScript 的时候，如果期望显示 <code v-pre>ABC</code> ，结果却显示 <code v-pre>XYZ</code> ，找出问题代码，这就需要调试。</p>\n<p>怎么在浏览器中调试 JavaScript 代码呢?</p>\n<p>首先，安装 Google Chrome 浏览器，Chrome 浏览器对开发者非常友好，可以方便地调试 JavaScript 代码。</p>\n<p>安装后，在调试的网页上直接按 <code v-pre>F12</code> 就可以进入到开发者工具模式。</p>\n<p>可以在控制台进行代码的调试与执行。</p>\n<p>开发者工具的 “源码(Sources)”，可以提供更高级的操作，比如断点、单步执行等高级调试技巧。</p>\n<h3 id=\"node-js\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#node-js\"><span>Node.js</span></a></h3>\n<p>如果本地已经安装了 Node.js，也可以通过使用 Node.js 直接执行相应文件的方式来进行调试。</p>\n<h3 id=\"vs-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vs-code\"><span>VS Code</span></a></h3>\n<ol>\n<li>\n<p>安装 Live Server 扩展。</p>\n</li>\n<li>\n<p>新建一个 HTML 网页，补全必要结构。</p>\n</li>\n<li>\n<p>通过 <code v-pre>&lt;script&gt;</code> 标签引入 Javascript。</p>\n</li>\n<li>\n<p>在 HTML 文件中右键选择 &quot;Open with Live Server&quot; 或者点击右下角的 Go Live，这会在 VSCode 内的 Tab 选项卡打开一个网页。</p>\n</li>\n<li>\n<p>在 VS Code 编辑器中在需要的位置设置断点，按 F5 调试，运行与调试窗口就会显示变量数值，下方的调试控制台会显示输出内容。</p>\n</li>\n</ol>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/language/js/guide/get-started.md","filePathRelative":"code/language/js/guide/get-started.md","frontmatter":{"title":"快速上手","icon":"creative","date":"2019-09-14T00:00:00.000Z","category":"JavaScript","tag":["快速上手"]},"sfcBlocks":{"template":{"type":"template","content":"<template><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>因为 JavaScript 是一门编程语言，不再是 HTML 和 CSS 这种看得见摸得着的东西，所以我们从如何引入、运行并调试开始讲起。</p>\n</div>\n<!-- more -->\n<h2 id=\"练习方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#练习方法\"><span>练习方法</span></a></h2>\n<p>本博客包含大量的示例代码，只要电脑安装了浏览器，就可以用来实验了。读者可以一边读一边运行示例，加深理解。</p>\n<p>推荐安装 <RouteLink to=\"/software/chrome.html\">Chrome 浏览器</RouteLink>，它的“开发者工具”(Developer Tools)里面的“控制台”(console)，就是运行 JavaScript 代码的理想环境。</p>\n<p>进入 Chrome 浏览器的“控制台”，有两种方法。</p>\n<ul>\n<li>直接进入: 按下 <code v-pre>Option + Command + J</code> (Mac) 或者 <code v-pre>Ctrl + Shift + J</code> (Windows / Linux)</li>\n<li>开发者工具进入: 开发者工具的快捷键是 F12，或者 <code v-pre>Option + Command + I</code> (Mac) 以及 <code v-pre>Ctrl + Shift + I</code> (Windows / Linux)，然后选择 Console 面板</li>\n</ul>\n<p>进入控制台以后，就可以在提示符后输入代码，然后按 <code v-pre>Enter</code> 键，代码就会执行。如果按 <code v-pre>Shift + Enter</code> 键，就是代码换行，不会触发执行。建议阅读本教程时，将代码复制到控制台进行实验。</p>\n<p>作为尝试，您可以将下面的程序复制到“控制台”，按下回车后，就可以看到运行结果。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> greetMe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">yourName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Hello \"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> yourName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">greetMe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"World\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// Hello World</span></span></code></pre>\n</div><h2 id=\"javascript-的引入\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的引入\"><span>JavaScript 的引入</span></a></h2>\n<p>JavaScript 代码可以直接嵌在网页的任何地方。</p>\n<p>如果想要在网页显示前就载入并运行 JavaScript，通常我们把代码放到 <code v-pre>&lt;head&gt;</code> 中，如图:</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">      alert</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Hello, world\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>由 <code v-pre>&lt;script&gt;...&lt;/script&gt;</code> 包含的代码就是 JavaScript 代码，它将直接被浏览器执行。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>和 CSS 类似，我们管这种引入方式叫做 “内联脚本”。</p>\n</div>\n<p>第二种方法是把 JavaScript 代码放到一个单独的 <code v-pre>js</code> 文件，然后在 HTML 中通过 <code v-pre>&lt;script src=&quot;...&quot;&gt;&lt;/script&gt;</code> 引入这个文件:</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/static/js/abc.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>这样， <code v-pre>/static/js/abc.js</code> 就会被浏览器执行。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>和 CSS 类似，我们称这种引入方式为外部引入。</p>\n<p>外部引入有多种好处:</p>\n<ul>\n<li>把 JavaScript 代码放入一个单独的 js 文件中更利于维护代码，并且多个页面可以各自引用同一份 js 文件。</li>\n<li>可以在同一个页面中引入多个.js 文件，还可以在页面中多次编写 <code v-pre>&lt;script&gt; js代码... &lt;/script&gt;</code> ，浏览器按照顺序依次执行。</li>\n<li>如果网页是静态的，希望尽快向用户呈现，可以将 JavaScript 代码放在文件的最后。</li>\n</ul>\n</div>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>因为 <code v-pre>&lt;script&gt;</code> 标签默认的 <code v-pre>type</code> 就是 JavaScript，所以下方的写法是没有必要的。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/javascript\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div></div>\n<h2 id=\"javascript-的编写\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的编写\"><span>JavaScript 的编写</span></a></h2>\n<p>可以用任何文本编辑器来编写 JavaScript 代码。这里推荐 <RouteLink to=\"/software/vscode/\">Visual Studio Code</RouteLink>。</p>\n<h2 id=\"javascript-的运行\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的运行\"><span>JavaScript 的运行</span></a></h2>\n<h3 id=\"浏览器运行\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器运行\"><span>浏览器运行</span></a></h3>\n<p>要让浏览器运行 JavaScript，必须先有一个 HTML 页面，在 HTML 页面中引入 JavaScript，然后，让浏览器加载该 HTML 页面，就可以执行 JavaScript 代码。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>直接在硬盘上创建好 HTML 和 JavaScript 文件，然后用浏览器打开的方式运行部分 JavaScript 代码没有问题，但由于浏览器的安全限制，以 <code v-pre>file://</code> 开头的地址无法执行如联网等 JavaScript 代码，</p>\n</div>\n<h3 id=\"架设本地服务器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#架设本地服务器\"><span>架设本地服务器</span></a></h3>\n<p>运行 JavaScript 也可以在本地架设一个 Web 服务器，然后以 <code v-pre>http://</code> 或 <code v-pre>https://</code> 开头的地址来正常执行所有 JavaScript 代码。如有需要请下载 Mr.Hope 制作的 WAMP / WNMP 一键安装工具。</p>\n<h3 id=\"使用-node-js\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用-node-js\"><span>使用 Node.js</span></a></h3>\n<p>Node.js 是一个著名的基于 JavaScript 的后端工具，可以很方便快捷的执行并调试 JavaScript。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>关于 Node.js 的详细教程，请查看<RouteLink to=\"/code/node-js/\">这里</RouteLink></p>\n</div>\n<h2 id=\"javascript-的调试\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的调试\"><span>JavaScript 的调试</span></a></h2>\n<h3 id=\"浏览器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器\"><span>浏览器</span></a></h3>\n<p>写 JavaScript 的时候，如果期望显示 <code v-pre>ABC</code> ，结果却显示 <code v-pre>XYZ</code> ，找出问题代码，这就需要调试。</p>\n<p>怎么在浏览器中调试 JavaScript 代码呢?</p>\n<p>首先，安装 Google Chrome 浏览器，Chrome 浏览器对开发者非常友好，可以方便地调试 JavaScript 代码。</p>\n<p>安装后，在调试的网页上直接按 <code v-pre>F12</code> 就可以进入到开发者工具模式。</p>\n<p>可以在控制台进行代码的调试与执行。</p>\n<p>开发者工具的 “源码(Sources)”，可以提供更高级的操作，比如断点、单步执行等高级调试技巧。</p>\n<h3 id=\"node-js\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#node-js\"><span>Node.js</span></a></h3>\n<p>如果本地已经安装了 Node.js，也可以通过使用 Node.js 直接执行相应文件的方式来进行调试。</p>\n<h3 id=\"vs-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vs-code\"><span>VS Code</span></a></h3>\n<ol>\n<li>\n<p>安装 Live Server 扩展。</p>\n</li>\n<li>\n<p>新建一个 HTML 网页，补全必要结构。</p>\n</li>\n<li>\n<p>通过 <code v-pre>&lt;script&gt;</code> 标签引入 Javascript。</p>\n</li>\n<li>\n<p>在 HTML 文件中右键选择 &quot;Open with Live Server&quot; 或者点击右下角的 Go Live，这会在 VSCode 内的 Tab 选项卡打开一个网页。</p>\n</li>\n<li>\n<p>在 VS Code 编辑器中在需要的位置设置断点，按 F5 调试，运行与调试窗口就会显示变量数值，下方的调试控制台会显示输出内容。</p>\n</li>\n</ol>\n</template>","contentStripped":"<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>因为 JavaScript 是一门编程语言，不再是 HTML 和 CSS 这种看得见摸得着的东西，所以我们从如何引入、运行并调试开始讲起。</p>\n</div>\n<!-- more -->\n<h2 id=\"练习方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#练习方法\"><span>练习方法</span></a></h2>\n<p>本博客包含大量的示例代码，只要电脑安装了浏览器，就可以用来实验了。读者可以一边读一边运行示例，加深理解。</p>\n<p>推荐安装 <RouteLink to=\"/software/chrome.html\">Chrome 浏览器</RouteLink>，它的“开发者工具”(Developer Tools)里面的“控制台”(console)，就是运行 JavaScript 代码的理想环境。</p>\n<p>进入 Chrome 浏览器的“控制台”，有两种方法。</p>\n<ul>\n<li>直接进入: 按下 <code v-pre>Option + Command + J</code> (Mac) 或者 <code v-pre>Ctrl + Shift + J</code> (Windows / Linux)</li>\n<li>开发者工具进入: 开发者工具的快捷键是 F12，或者 <code v-pre>Option + Command + I</code> (Mac) 以及 <code v-pre>Ctrl + Shift + I</code> (Windows / Linux)，然后选择 Console 面板</li>\n</ul>\n<p>进入控制台以后，就可以在提示符后输入代码，然后按 <code v-pre>Enter</code> 键，代码就会执行。如果按 <code v-pre>Shift + Enter</code> 键，就是代码换行，不会触发执行。建议阅读本教程时，将代码复制到控制台进行实验。</p>\n<p>作为尝试，您可以将下面的程序复制到“控制台”，按下回车后，就可以看到运行结果。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> greetMe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">yourName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Hello \"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> yourName</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">greetMe</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"World\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// Hello World</span></span></code></pre>\n</div><h2 id=\"javascript-的引入\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的引入\"><span>JavaScript 的引入</span></a></h2>\n<p>JavaScript 代码可以直接嵌在网页的任何地方。</p>\n<p>如果想要在网页显示前就载入并运行 JavaScript，通常我们把代码放到 <code v-pre>&lt;head&gt;</code> 中，如图:</p>\n<div class=\"language-html line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">      alert</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"Hello, world\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>由 <code v-pre>&lt;script&gt;...&lt;/script&gt;</code> 包含的代码就是 JavaScript 代码，它将直接被浏览器执行。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>和 CSS 类似，我们管这种引入方式叫做 “内联脚本”。</p>\n</div>\n<p>第二种方法是把 JavaScript 代码放到一个单独的 <code v-pre>js</code> 文件，然后在 HTML 中通过 <code v-pre>&lt;script src=&quot;...&quot;&gt;&lt;/script&gt;</code> 引入这个文件:</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"/static/js/abc.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">head</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  &#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">body</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">html</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>这样， <code v-pre>/static/js/abc.js</code> 就会被浏览器执行。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>和 CSS 类似，我们称这种引入方式为外部引入。</p>\n<p>外部引入有多种好处:</p>\n<ul>\n<li>把 JavaScript 代码放入一个单独的 js 文件中更利于维护代码，并且多个页面可以各自引用同一份 js 文件。</li>\n<li>可以在同一个页面中引入多个.js 文件，还可以在页面中多次编写 <code v-pre>&lt;script&gt; js代码... &lt;/script&gt;</code> ，浏览器按照顺序依次执行。</li>\n<li>如果网页是静态的，希望尽快向用户呈现，可以将 JavaScript 代码放在文件的最后。</li>\n</ul>\n</div>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>因为 <code v-pre>&lt;script&gt;</code> 标签默认的 <code v-pre>type</code> 就是 JavaScript，所以下方的写法是没有必要的。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/javascript\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">  ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div></div>\n<h2 id=\"javascript-的编写\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的编写\"><span>JavaScript 的编写</span></a></h2>\n<p>可以用任何文本编辑器来编写 JavaScript 代码。这里推荐 <RouteLink to=\"/software/vscode/\">Visual Studio Code</RouteLink>。</p>\n<h2 id=\"javascript-的运行\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的运行\"><span>JavaScript 的运行</span></a></h2>\n<h3 id=\"浏览器运行\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器运行\"><span>浏览器运行</span></a></h3>\n<p>要让浏览器运行 JavaScript，必须先有一个 HTML 页面，在 HTML 页面中引入 JavaScript，然后，让浏览器加载该 HTML 页面，就可以执行 JavaScript 代码。</p>\n<div class=\"hint-container warning\">\n<p class=\"hint-container-title\">注意</p>\n<p>直接在硬盘上创建好 HTML 和 JavaScript 文件，然后用浏览器打开的方式运行部分 JavaScript 代码没有问题，但由于浏览器的安全限制，以 <code v-pre>file://</code> 开头的地址无法执行如联网等 JavaScript 代码，</p>\n</div>\n<h3 id=\"架设本地服务器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#架设本地服务器\"><span>架设本地服务器</span></a></h3>\n<p>运行 JavaScript 也可以在本地架设一个 Web 服务器，然后以 <code v-pre>http://</code> 或 <code v-pre>https://</code> 开头的地址来正常执行所有 JavaScript 代码。如有需要请下载 Mr.Hope 制作的 WAMP / WNMP 一键安装工具。</p>\n<h3 id=\"使用-node-js\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用-node-js\"><span>使用 Node.js</span></a></h3>\n<p>Node.js 是一个著名的基于 JavaScript 的后端工具，可以很方便快捷的执行并调试 JavaScript。</p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>关于 Node.js 的详细教程，请查看<RouteLink to=\"/code/node-js/\">这里</RouteLink></p>\n</div>\n<h2 id=\"javascript-的调试\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#javascript-的调试\"><span>JavaScript 的调试</span></a></h2>\n<h3 id=\"浏览器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器\"><span>浏览器</span></a></h3>\n<p>写 JavaScript 的时候，如果期望显示 <code v-pre>ABC</code> ，结果却显示 <code v-pre>XYZ</code> ，找出问题代码，这就需要调试。</p>\n<p>怎么在浏览器中调试 JavaScript 代码呢?</p>\n<p>首先，安装 Google Chrome 浏览器，Chrome 浏览器对开发者非常友好，可以方便地调试 JavaScript 代码。</p>\n<p>安装后，在调试的网页上直接按 <code v-pre>F12</code> 就可以进入到开发者工具模式。</p>\n<p>可以在控制台进行代码的调试与执行。</p>\n<p>开发者工具的 “源码(Sources)”，可以提供更高级的操作，比如断点、单步执行等高级调试技巧。</p>\n<h3 id=\"node-js\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#node-js\"><span>Node.js</span></a></h3>\n<p>如果本地已经安装了 Node.js，也可以通过使用 Node.js 直接执行相应文件的方式来进行调试。</p>\n<h3 id=\"vs-code\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#vs-code\"><span>VS Code</span></a></h3>\n<ol>\n<li>\n<p>安装 Live Server 扩展。</p>\n</li>\n<li>\n<p>新建一个 HTML 网页，补全必要结构。</p>\n</li>\n<li>\n<p>通过 <code v-pre>&lt;script&gt;</code> 标签引入 Javascript。</p>\n</li>\n<li>\n<p>在 HTML 文件中右键选择 &quot;Open with Live Server&quot; 或者点击右下角的 Go Live，这会在 VSCode 内的 Tab 选项卡打开一个网页。</p>\n</li>\n<li>\n<p>在 VS Code 编辑器中在需要的位置设置断点，按 F5 调试，运行与调试窗口就会显示变量数值，下方的调试控制台会显示输出内容。</p>\n</li>\n</ol>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n::: tip\n\n因为 JavaScript 是一门编程语言，不再是 HTML 和 CSS 这种看得见摸得着的东西，所以我们从如何引入、运行并调试开始讲起。\n\n:::\n\n<!-- more -->\n\n## 练习方法\n\n本博客包含大量的示例代码，只要电脑安装了浏览器，就可以用来实验了。读者可以一边读一边运行示例，加深理解。\n\n推荐安装 [Chrome 浏览器](../../../../software/chrome.md)，它的“开发者工具”(Developer Tools)里面的“控制台”(console)，就是运行 JavaScript 代码的理想环境。\n\n进入 Chrome 浏览器的“控制台”，有两种方法。\n\n- 直接进入: 按下 `Option + Command + J` (Mac) 或者 `Ctrl + Shift + J` (Windows / Linux)\n- 开发者工具进入: 开发者工具的快捷键是 F12，或者 `Option + Command + I` (Mac) 以及 `Ctrl + Shift + I` (Windows / Linux)，然后选择 Console 面板\n\n进入控制台以后，就可以在提示符后输入代码，然后按 `Enter` 键，代码就会执行。如果按 `Shift + Enter` 键，就是代码换行，不会触发执行。建议阅读本教程时，将代码复制到控制台进行实验。\n\n作为尝试，您可以将下面的程序复制到“控制台”，按下回车后，就可以看到运行结果。\n\n```js\nfunction greetMe(yourName) {\n  console.log(\"Hello \" + yourName);\n}\ngreetMe(\"World\");\n// Hello World\n```\n\n## JavaScript 的引入\n\nJavaScript 代码可以直接嵌在网页的任何地方。\n\n如果想要在网页显示前就载入并运行 JavaScript，通常我们把代码放到 `<head>` 中，如图:\n\n```html\n<html>\n  <head>\n    <script>\n      alert(\"Hello, world\");\n    </script>\n  </head>\n  <body>\n    ...\n  </body>\n</html>\n```\n\n由 `<script>...</script>` 包含的代码就是 JavaScript 代码，它将直接被浏览器执行。\n\n::: tip\n\n和 CSS 类似，我们管这种引入方式叫做 “内联脚本”。\n\n:::\n\n第二种方法是把 JavaScript 代码放到一个单独的 `js` 文件，然后在 HTML 中通过 `<script src=\"...\"></script>` 引入这个文件:\n\n```html\n<html>\n  <head>\n    <script src=\"/static/js/abc.js\"></script>\n  </head>\n  <body>\n    ...\n  </body>\n</html>\n```\n\n这样， `/static/js/abc.js` 就会被浏览器执行。\n\n::: tip\n\n和 CSS 类似，我们称这种引入方式为外部引入。\n\n外部引入有多种好处:\n\n- 把 JavaScript 代码放入一个单独的 js 文件中更利于维护代码，并且多个页面可以各自引用同一份 js 文件。\n- 可以在同一个页面中引入多个.js 文件，还可以在页面中多次编写 `<script> js代码... </script>` ，浏览器按照顺序依次执行。\n- 如果网页是静态的，希望尽快向用户呈现，可以将 JavaScript 代码放在文件的最后。\n\n  :::\n\n::: warning\n\n因为 `<script>` 标签默认的 `type` 就是 JavaScript，所以下方的写法是没有必要的。\n\n```html\n<script type=\"text/javascript\">\n  ...\n</script>\n```\n\n:::\n\n## JavaScript 的编写\n\n可以用任何文本编辑器来编写 JavaScript 代码。这里推荐 [Visual Studio Code](../../../../software/vscode/README.md)。\n\n## JavaScript 的运行\n\n### 浏览器运行\n\n要让浏览器运行 JavaScript，必须先有一个 HTML 页面，在 HTML 页面中引入 JavaScript，然后，让浏览器加载该 HTML 页面，就可以执行 JavaScript 代码。\n\n::: warning\n\n直接在硬盘上创建好 HTML 和 JavaScript 文件，然后用浏览器打开的方式运行部分 JavaScript 代码没有问题，但由于浏览器的安全限制，以 `file://` 开头的地址无法执行如联网等 JavaScript 代码，\n\n:::\n\n### 架设本地服务器\n\n运行 JavaScript 也可以在本地架设一个 Web 服务器，然后以 `http://` 或 `https://` 开头的地址来正常执行所有 JavaScript 代码。如有需要请下载 Mr.Hope 制作的 WAMP / WNMP 一键安装工具。\n\n### 使用 Node.js\n\nNode.js 是一个著名的基于 JavaScript 的后端工具，可以很方便快捷的执行并调试 JavaScript。\n\n::: tip\n\n关于 Node.js 的详细教程，请查看[这里](../../../node-js/README.md)\n\n:::\n\n## JavaScript 的调试\n\n### 浏览器\n\n写 JavaScript 的时候，如果期望显示 `ABC` ，结果却显示 `XYZ` ，找出问题代码，这就需要调试。\n\n怎么在浏览器中调试 JavaScript 代码呢?\n\n首先，安装 Google Chrome 浏览器，Chrome 浏览器对开发者非常友好，可以方便地调试 JavaScript 代码。\n\n安装后，在调试的网页上直接按 `F12` 就可以进入到开发者工具模式。\n\n可以在控制台进行代码的调试与执行。\n\n开发者工具的 “源码(Sources)”，可以提供更高级的操作，比如断点、单步执行等高级调试技巧。\n\n### Node.js\n\n如果本地已经安装了 Node.js，也可以通过使用 Node.js 直接执行相应文件的方式来进行调试。\n\n### VS Code\n\n1. 安装 Live Server 扩展。\n\n1. 新建一个 HTML 网页，补全必要结构。\n\n1. 通过 `<script>` 标签引入 Javascript。\n\n1. 在 HTML 文件中右键选择 \"Open with Live Server\" 或者点击右下角的 Go Live，这会在 VSCode 内的 Tab 选项卡打开一个网页。\n\n1. 在 VS Code 编辑器中在需要的位置设置断点，按 F5 调试，运行与调试窗口就会显示变量数值，下方的调试控制台会显示输出内容。\n","excerpt":"","title":"","headers":[{"level":2,"title":"练习方法","slug":"练习方法","link":"#练习方法","children":[]},{"level":2,"title":"JavaScript 的引入","slug":"javascript-的引入","link":"#javascript-的引入","children":[]},{"level":2,"title":"JavaScript 的编写","slug":"javascript-的编写","link":"#javascript-的编写","children":[]},{"level":2,"title":"JavaScript 的运行","slug":"javascript-的运行","link":"#javascript-的运行","children":[{"level":3,"title":"浏览器运行","slug":"浏览器运行","link":"#浏览器运行","children":[]},{"level":3,"title":"架设本地服务器","slug":"架设本地服务器","link":"#架设本地服务器","children":[]},{"level":3,"title":"使用 Node.js","slug":"使用-node-js","link":"#使用-node-js","children":[]}]},{"level":2,"title":"JavaScript 的调试","slug":"javascript-的调试","link":"#javascript-的调试","children":[{"level":3,"title":"浏览器","slug":"浏览器","link":"#浏览器","children":[]},{"level":3,"title":"Node.js","slug":"node-js","link":"#node-js","children":[]},{"level":3,"title":"VS Code","slug":"vs-code","link":"#vs-code","children":[]}]}],"links":[{"raw":"../../../../software/chrome.md","relative":"software/chrome.md","absolute":"/software/chrome.md"},{"raw":"../../../../software/vscode/README.md","relative":"software/vscode/README.md","absolute":"/software/vscode/README.md"},{"raw":"../../../node-js/README.md","relative":"code/node-js/README.md","absolute":"/code/node-js/README.md"}]}}
