{"content":"<h1 id=\"参考链接\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#参考链接\"><span>参考链接</span></a></h1>\n<h2 id=\"官方文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#官方文件\"><span>官方文件</span></a></h2>\n<ul>\n<li><a href=\"https://www.ecma-international.org/ecma-262/6.0/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2015 Language Specification</a>: ECMAScript 2015 规格</li>\n<li><a href=\"https://www.ecma-international.org/ecma-262/7.0/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2016 Language Specification</a>: ECMAScript 2016 规格</li>\n<li><a href=\"https://tc39.github.io/ecma262/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2017 Language Specification</a>: ECMAScript 2017 规格(草案)</li>\n<li><a href=\"https://github.com/tc39/ecma262\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Current Proposals</a>: ECMAScript 当前的所有提案</li>\n<li><a href=\"https://github.com/tc39/proposals\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Active Proposals</a>: 已经进入正式流程的提案</li>\n<li><a href=\"https://github.com/hemanth/es-next\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript proposals</a>: 从阶段 0 到阶段 4 的所有提案列表</li>\n<li><a href=\"https://github.com/tc39/agendas\" target=\"_blank\" rel=\"noopener noreferrer\">TC39 meeting agendas</a>: TC39 委员会历年的会议记录</li>\n<li><a href=\"https://ecmascript-daily.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Daily</a>: TC39 委员会的动态</li>\n<li><a href=\"https://tc39.github.io/process-document/\" target=\"_blank\" rel=\"noopener noreferrer\">The TC39 Process</a>: 提案进入正式规格的流程</li>\n<li><a href=\"https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39: A Process Sketch, Stages 0 and 1</a>: Stage 0 和 Stage 1 的含义</li>\n<li><a href=\"https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39 Process Sketch, Stage 2</a>: Stage 2 的含义</li>\n</ul>\n<h2 id=\"综合介绍\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#综合介绍\"><span>综合介绍</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"https://exploringjs.com/es6/\" target=\"_blank\" rel=\"noopener noreferrer\">Exploring ES6: Upgrade to the next version of JavaScript</a>: ES6 的专著，本书的许多代码实例来自该书</li>\n<li>Sayanee Basu, <a href=\"http://net.tutsplus.com/articles/news/ecmascript-6-today/\" target=\"_blank\" rel=\"noopener noreferrer\">Use ECMAScript 6 Today</a></li>\n<li>Ariya Hidayat, <a href=\"http://www.sencha.com/blog/toward-modern-web-apps-with-ecmascript-6/\" target=\"_blank\" rel=\"noopener noreferrer\">Toward Modern Web Apps with ECMAScript 6</a></li>\n<li>Dale Schouten, <a href=\"http://html5hub.com/10-ecmascript-6-tricks-you-can-perform-right-now/\" target=\"_blank\" rel=\"noopener noreferrer\">10 Ecmascript-6 tricks you can perform right now</a></li>\n<li>Colin Toh, <a href=\"http://colintoh.com/blog/lightweight-es6-features\" target=\"_blank\" rel=\"noopener noreferrer\">Lightweight ES6 Features That Pack A Punch</a>: ES6 的一些“轻量级”的特性介绍</li>\n<li>Domenic Denicola, <a href=\"http://www.slideshare.net/domenicdenicola/es6-the-awesome-parts\" target=\"_blank\" rel=\"noopener noreferrer\">ES6: The Awesome Parts</a></li>\n<li>Nicholas C. Zakas, <a href=\"https://github.com/nzakas/understandinges6\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding ECMAScript 6</a></li>\n<li>Justin Drake, <a href=\"https://github.com/JustinDrake/node-es6-examples\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 in Node.JS</a></li>\n<li>Ryan Dao, <a href=\"http://ryandao.net/portal/content/summary-ecmascript-6-major-features\" target=\"_blank\" rel=\"noopener noreferrer\">Summary of ECMAScript 6 major features</a></li>\n<li>Luke Hoban, <a href=\"https://github.com/lukehoban/es6features\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 features</a>: ES6 新语法点的罗列</li>\n<li>Traceur-compiler, <a href=\"https://github.com/google/traceur-compiler/wiki/LanguageFeatures\" target=\"_blank\" rel=\"noopener noreferrer\">Language Features</a>: Traceur 文档列出的一些 ES6 例子</li>\n<li>Axel Rauschmayer, <a href=\"https://speakerdeck.com/rauschma/ecmascript-6-whats-next-for-javascript-august-2014\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: what’s next for JavaScript?</a>: 关于 ES6 新增语法的综合介绍，有很多例子</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/08/getting-started-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Getting started with ECMAScript 6</a>: ES6 语法点的综合介绍</li>\n<li>Toby Ho, <a href=\"http://davidwalsh.name/es6-io\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 in io.js</a></li>\n<li>Guillermo Rauch, <a href=\"http://rauchg.com/2015/ecmascript-6/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6</a></li>\n<li>Charles King, <a href=\"http://charlesbking.com/power_of_es6/#/\" target=\"_blank\" rel=\"noopener noreferrer\">The power of ECMAScript 6</a></li>\n<li>Benjamin De Cock, <a href=\"https://github.com/bendc/frontend-guidelines\" target=\"_blank\" rel=\"noopener noreferrer\">Frontend Guidelines</a>: ES6 最佳实践</li>\n<li>Jani Hartikainen, <a href=\"http://codeutopia.net/blog/2015/01/06/es6-what-are-the-benefits-of-the-new-features-in-practice/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6: What are the benefits of the new features in practice?</a></li>\n<li>kangax, <a href=\"http://perfectionkills.com/javascript-quiz-es6/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript quiz. ES6 edition</a>: ES6 小测试</li>\n<li>Jeremy Fairbank, <a href=\"https://speakerdeck.com/jfairbank/html5devconf-es7-and-beyond\" target=\"_blank\" rel=\"noopener noreferrer\">HTML5DevConf ES2016 and Beyond!</a>: ES2016 新增语法点介绍</li>\n<li>Timothy Gu, <a href=\"https://timothygu.me/es-howto/\" target=\"_blank\" rel=\"noopener noreferrer\">How to Read the ECMAScript Specification</a>: 如何读懂 ES6 规格</li>\n</ul>\n<h2 id=\"let-和-const\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#let-和-const\"><span>let 和 const</span></a></h2>\n<ul>\n<li>Kyle Simpson, <a href=\"http://davidwalsh.name/for-and-against-let\" target=\"_blank\" rel=\"noopener noreferrer\">For and against let</a>: 讨论 let 命令的作用域</li>\n<li>kangax, <a href=\"http://es-discourse.com/t/why-typeof-is-no-longer-safe/15\" target=\"_blank\" rel=\"noopener noreferrer\">Why typeof is no longer “safe”</a>: 讨论在块级作用域内，let 命令的变量声明和赋值的行为</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-scoping.html\" target=\"_blank\" rel=\"noopener noreferrer\">Variables and scoping in ECMAScript 6</a>: 讨论块级作用域与 let 和 const 的行为</li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-let-const-and-temporal-dead-zone-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Let, Const and the “Temporal Dead Zone” (TDZ) in Depth</a></li>\n<li>acorn, <a href=\"https://github.com/ternjs/acorn/issues/118\" target=\"_blank\" rel=\"noopener noreferrer\">Function statements in strict mode</a>: 块级作用域对严格模式的函数声明的影响</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/09/global.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: global</a>: 顶层对象 <code v-pre>global</code></li>\n</ul>\n<h2 id=\"解构赋值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#解构赋值\"><span>解构赋值</span></a></h2>\n<ul>\n<li>Nick Fitzgerald, <a href=\"http://fitzgeraldnick.com/weblog/50/\" target=\"_blank\" rel=\"noopener noreferrer\">Destructuring Assignment in ECMAScript 6</a>: 详细介绍解构赋值的用法</li>\n<li>Nicholas C. Zakas, <a href=\"https://www.nczonline.net/blog/2015/10/ecmascript-6-destructuring-gotcha/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 destructuring gotcha</a></li>\n</ul>\n<h2 id=\"字符串\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#字符串\"><span>字符串</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2012/08/01/a-critical-review-of-ecmascript-6-quasi-literals/\" target=\"_blank\" rel=\"noopener noreferrer\">A critical review of ECMAScript 6 quasi-literals</a></li>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\" target=\"_blank\" rel=\"noopener noreferrer\">Template strings</a></li>\n<li>Addy Osmani, <a href=\"http://updates.html5rocks.com/2015/01/ES6-Template-Strings\" target=\"_blank\" rel=\"noopener noreferrer\">Getting Literal With ES6 Template Strings</a>: 模板字符串的介绍</li>\n<li>Blake Winton, <a href=\"https://weblog.latte.ca/blake/tech/firefox/templates.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Templates</a>: 模板字符串的介绍</li>\n<li>Peter Jaszkowiak, <a href=\"https://medium.com/@PitaJ/how-to-write-a-template-compiler-in-javascript-f174df6f32f\" target=\"_blank\" rel=\"noopener noreferrer\">How to write a template compiler in JavaScript</a>: 使用模板字符串，编写一个模板编译函数</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/11/string-padding.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES.stage3: string padding</a></li>\n</ul>\n<h2 id=\"正则\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#正则\"><span>正则</span></a></h2>\n<ul>\n<li>Mathias Bynens, <a href=\"https://mathiasbynens.be/notes/es6-unicode-regex\" target=\"_blank\" rel=\"noopener noreferrer\">Unicode-aware regular expressions in ES6</a>: 详细介绍正则表达式的 u 修饰符</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/07/regexp-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">New regular expression features in ECMAScript 6</a>: ES6 正则特性的详细介绍</li>\n<li>Yang Guo, <a href=\"http://v8project.blogspot.jp/2016/02/regexp-lookbehind-assertions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Regular expression lookbehind assertions</a>: 介绍后行断言</li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/05/regexp-named-capture-groups.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: regular expression named capture groups</a>: 具名组匹配的介绍</li>\n<li>Mathias Bynens, <a href=\"https://mathiasbynens.be/notes/es-regexp-proposals\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript regular expressions are getting better!</a>: 介绍 ES2018 添加的多项正则语法</li>\n</ul>\n<h2 id=\"数值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#数值\"><span>数值</span></a></h2>\n<ul>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-number-improvements-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Number Improvements in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/03/es-integer.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: arbitrary precision integers</a></li>\n</ul>\n<h2 id=\"数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#数组\"><span>数组</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/05/es6-array-methods.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6’s new array methods</a>: 对 ES6 新增的数组方法的全面介绍</li>\n<li>TC39, <a href=\"https://github.com/tc39/Array.prototype.includes/\" target=\"_blank\" rel=\"noopener noreferrer\">Array.prototype.includes</a>: 数组的 includes 方法的规格</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/holes-arrays-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: holes in Arrays</a>: 数组的空位问题</li>\n</ul>\n<h2 id=\"函数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#函数\"><span>函数</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2013/09/10/understanding-ecmascript-6-arrow-functions/\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding ECMAScript 6 arrow functions</a></li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2014/04/real-life-es6-arrow-fn/\" target=\"_blank\" rel=\"noopener noreferrer\">Real Life ES6 - Arrow Functions</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/04/required-parameters-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Handling required parameters in ECMAScript 6</a></li>\n<li>Dmitry Soshnikov, <a href=\"http://dmitrysoshnikov.com/ecmascript/es6-notes-default-values-of-parameters/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Notes: Default values of parameters</a>: 介绍参数的默认值</li>\n<li>Ragan Wald, <a href=\"http://raganwald.com/2015/02/02/destructuring.html\" target=\"_blank\" rel=\"noopener noreferrer\">Destructuring and Recursion in ES6</a>: rest 参数和扩展运算符的详细介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/function-names-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">The names of functions in ES6</a>: 函数的 name 属性的详细介绍</li>\n<li>Kyle Simpson, <a href=\"http://blog.getify.com/arrow-this/\" target=\"_blank\" rel=\"noopener noreferrer\">Arrow This</a>: 箭头函数并没有自己的 this</li>\n<li>Derick Bailey, <a href=\"http://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">Do ES6 Arrow Functions Really Solve “this” In JavaScript?</a>: 使用箭头函数处理 this 指向，必须非常小心</li>\n<li>Mark McDonnell, <a href=\"http://www.integralist.co.uk/posts/js-recursion.html\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding recursion in functional JavaScript programming</a>: 如何自己实现尾递归优化</li>\n<li>Nicholas C. Zakas, <a href=\"https://www.nczonline.net/blog/2016/10/the-ecmascript-2016-change-you-probably-dont-know/\" target=\"_blank\" rel=\"noopener noreferrer\">The ECMAScript 2016 change you probably don’t know</a>: 使用参数默认值时，不能在函数内部显式开启严格模式</li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/08/optional-catch-binding.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: optional catch binding</a></li>\n</ul>\n<h2 id=\"对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#对象\"><span>对象</span></a></h2>\n<ul>\n<li>Addy Osmani, <a href=\"http://www.html5rocks.com/en/tutorials/es7/observe/\" target=\"_blank\" rel=\"noopener noreferrer\">Data-binding Revolutions with Object.observe()</a>: 介绍 Object.observe()的概念</li>\n<li>Sella Rafaeli, <a href=\"http://www.sellarafaeli.com/blog/native_javascript_data_binding\" target=\"_blank\" rel=\"noopener noreferrer\">Native JavaScript Data-Binding</a>: 如何使用 Object.observe 方法，实现数据对象与 DOM 对象的双向绑定</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/proto-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code v-pre>__proto__</code> in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/10/enumerability-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Enumerability in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/02/object-getownpropertydescriptors.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: Object.getOwnPropertyDescriptors()</a></li>\n<li>TC39, <a href=\"https://github.com/tc39/proposal-object-getownpropertydescriptors\" target=\"_blank\" rel=\"noopener noreferrer\">Object.getOwnPropertyDescriptors Proposal</a></li>\n</ul>\n<h2 id=\"symbol\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#symbol\"><span>Symbol</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-symbols.html\" target=\"_blank\" rel=\"noopener noreferrer\">Symbols in ECMAScript 6</a>: Symbol 简介</li>\n<li>MDN, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" target=\"_blank\" rel=\"noopener noreferrer\">Symbol</a>: Symbol 类型的详细介绍</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Symbols</a></li>\n<li>Keith Cirkel, <a href=\"http://blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaprogramming in ES6: Symbols and why they’re awesome</a>: Symbol 的深入介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/well-known-symbols-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Customizing ES6 via well-known symbols</a></li>\n<li>Derick Bailey, <a href=\"https://derickbailey.com/2016/03/09/creating-a-true-singleton-in-node-js-with-es6-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">Creating A True Singleton In Node.js, With ES6 Symbols</a></li>\n<li>Das Surma, <a href=\"https://dassur.ma/things/reading-specs-2/\" target=\"_blank\" rel=\"noopener noreferrer\">How to read web specs Part IIa – Or: ECMAScript Symbols</a>: 介绍 Symbol 的规格</li>\n</ul>\n<h2 id=\"set-和-map\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-和-map\"><span>Set 和 Map</span></a></h2>\n<ul>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\" target=\"_blank\" rel=\"noopener noreferrer\">WeakSet</a>: 介绍 WeakSet 数据结构</li>\n<li>Dwayne Charrington, <a href=\"http://ilikekillnerds.com/2015/02/what-are-weakmaps-in-es6/\" target=\"_blank\" rel=\"noopener noreferrer\">What Are Weakmaps In ES6?</a>: WeakMap 数据结构介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/01/es6-maps-sets.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: maps and sets</a>: Set 和 Map 结构的详细介绍</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-collections/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Collections</a>: Set 和 Map 结构的设计思想</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/08/es6-map-json.html\" target=\"_blank\" rel=\"noopener noreferrer\">Converting ES6 Maps to and from JSON</a>: 如何将 Map 与其他数据结构互相转换</li>\n</ul>\n<h2 id=\"proxy-和-reflect\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#proxy-和-reflect\"><span>Proxy 和 Reflect</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2014/04/22/creating-defensive-objects-with-es6-proxies/\" target=\"_blank\" rel=\"noopener noreferrer\">Creating defensive objects with ES6 proxies</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-proxies.html\" target=\"_blank\" rel=\"noopener noreferrer\">Meta programming with ECMAScript 6 proxies</a>: Proxy 详解</li>\n<li>Daniel Zautner, <a href=\"http://dzautner.com/meta-programming-javascript-using-proxies/\" target=\"_blank\" rel=\"noopener noreferrer\">Meta-programming JavaScript Using Proxies</a>: 使用 Proxy 实现元编程</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">Harmony-reflect</a>: Reflect 对象的设计目的</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/traps.html\" target=\"_blank\" rel=\"noopener noreferrer\">Proxy Traps</a>: Proxy 拦截操作一览</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/api.html\" target=\"_blank\" rel=\"noopener noreferrer\">Reflect API</a></li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/handler_api.html\" target=\"_blank\" rel=\"noopener noreferrer\">Proxy Handler API</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-proxies-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Proxies in Depth</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-proxy-traps-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Proxy Traps in Depth</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/more-es6-proxy-traps-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">More ES6 Proxy Traps in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/11/proxying-builtins.html\" target=\"_blank\" rel=\"noopener noreferrer\">Pitfall: not all objects can be wrapped transparently by proxies</a></li>\n<li>Bertalan Miklos, <a href=\"https://blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/\" target=\"_blank\" rel=\"noopener noreferrer\">Writing a JavaScript Framework - Data Binding with ES6 Proxies</a>: 使用 Proxy 实现观察者模式</li>\n<li>Keith Cirkel, <a href=\"https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaprogramming in ES6: Part 2 - Reflect</a>: Reflect API 的详细介绍</li>\n</ul>\n<h2 id=\"promise-对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#promise-对象\"><span>Promise 对象</span></a></h2>\n<ul>\n<li>Jake Archibald, <a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Promises: There and back again</a></li>\n<li>Jake Archibald, <a href=\"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\" target=\"_blank\" rel=\"noopener noreferrer\">Tasks, microtasks, queues and schedules</a></li>\n<li>Tilde, <a href=\"https://github.com/tildeio/rsvp.js\" target=\"_blank\" rel=\"noopener noreferrer\">rsvp.js</a></li>\n<li>Sandeep Panda, <a href=\"http://www.sitepoint.com/overview-javascript-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">An Overview of JavaScript Promises</a>: ES6 Promise 入门介绍</li>\n<li>Dave Atchley, <a href=\"http://www.datchley.name/es6-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Promises</a>: Promise 的语法介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/10/es6-promises-api.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 promises (2/2): the API</a>: 对 ES6 Promise 规格和用法的详细介绍</li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2015/02/promises/\" target=\"_blank\" rel=\"noopener noreferrer\">Embracing Promises in JavaScript</a>: catch 方法的例子</li>\n<li>Ronald Chen, <a href=\"https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513#.2an1he6vf\" target=\"_blank\" rel=\"noopener noreferrer\">How to escape Promise Hell</a>: 如何使用 <code v-pre>Promise.all</code> 方法的一些很好的例子</li>\n<li>Jordan Harband, <a href=\"https://github.com/ljharb/proposal-promise-try\" target=\"_blank\" rel=\"noopener noreferrer\">proposal-promise-try</a>: Promise.try() 方法的提案</li>\n<li>Sven Slootweg, <a href=\"http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/\" target=\"_blank\" rel=\"noopener noreferrer\">What is Promise.try, and why does it matter?</a>: Promise.try() 方法的优点</li>\n<li>Yehuda Katz, <a href=\"https://thefeedbackloop.xyz/tc39-promises-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39: Promises, Promises</a>: Promise.try() 的用处</li>\n</ul>\n<h2 id=\"iterator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#iterator\"><span>Iterator</span></a></h2>\n<ul>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\" target=\"_blank\" rel=\"noopener noreferrer\">Iterators and generators</a></li>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol\" target=\"_blank\" rel=\"noopener noreferrer\">The Iterator protocol</a></li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/04/es6-in-depth-iterators-and-the-for-of-loop/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Iterators and the for-of loop</a>: 遍历器与 for...of 循环的介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2013/06/iterators-generators.html\" target=\"_blank\" rel=\"noopener noreferrer\">Iterators and generators in ECMAScript 6</a>: 探讨 Iterator 和 Generator 的设计目的</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-iteration.html\" target=\"_blank\" rel=\"noopener noreferrer\">Iterables and iterators in ECMAScript 6</a>: Iterator 的详细介绍</li>\n<li>Kyle Simpson, <a href=\"http://blog.getify.com/iterating-es6-numbers/\" target=\"_blank\" rel=\"noopener noreferrer\">Iterating ES6 Numbers</a>: 在数值对象上部署遍历器</li>\n</ul>\n<h2 id=\"generator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#generator\"><span>Generator</span></a></h2>\n<ul>\n<li>Matt Baker, <a href=\"http://flippinawesome.org/2014/02/10/replacing-callbacks-with-es6-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Replacing callbacks with ES6 Generators</a></li>\n<li>Steven Sanderson, <a href=\"http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Experiments with Koa and JavaScript Generators</a></li>\n<li>jmar777, <a href=\"http://devsmash.com/blog/whats-the-big-deal-with-generators\" target=\"_blank\" rel=\"noopener noreferrer\">What’s the Big Deal with Generators?</a></li>\n<li>Marc Harter, <a href=\"http://strongloop.com/strongblog/how-to-generators-node-js-yield-use-cases/\" target=\"_blank\" rel=\"noopener noreferrer\">Generators in Node.js: Common Misconceptions and Three Good Use Cases</a>: 讨论 Generator 函数的作用</li>\n<li>StackOverflow, <a href=\"http://stackoverflow.com/questions/20977379/es6-yield-what-happens-to-the-arguments-of-the-first-call-next\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 yield : what happens to the arguments of the first call next()?</a>: 第一次使用 next 方法时不能带有参数</li>\n<li>Kyle Simpson, <a href=\"http://davidwalsh.name/es6-generators\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Generators: Complete Series</a>: 由浅入深探讨 Generator 的系列文章，共四篇</li>\n<li>Gajus Kuizinas, <a href=\"http://gajus.com/blog/2/the-definetive-guide-to-the-javascript-generators\" target=\"_blank\" rel=\"noopener noreferrer\">The Definitive Guide to the JavaScript Generators</a>: 对 Generator 的综合介绍</li>\n<li>Jan Krems, <a href=\"https://gist.github.com/jkrems/04a2b34fb9893e4c2b5c\" target=\"_blank\" rel=\"noopener noreferrer\">Generators Are Like Arrays</a>: 讨论 Generator 可以被当作数据结构看待</li>\n<li>Harold Cooper, <a href=\"http://syzygy.st/javascript-coroutines/\" target=\"_blank\" rel=\"noopener noreferrer\">Coroutine Event Loops in JavaScript</a>: Generator 用于实现状态机</li>\n<li>Ruslan Ismagilov, <a href=\"https://github.com/isRuslan/learn-generators\" target=\"_blank\" rel=\"noopener noreferrer\">learn-generators</a>: 编程练习，共 6 道题</li>\n<li>Steven Sanderson, <a href=\"http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Experiments with Koa and JavaScript Generators</a>: Generator 入门介绍，以 Koa 框架为例</li>\n<li>Mahdi Dibaiee, <a href=\"http://dibaiee.ir/es7-array-generator-comprehensions/\" target=\"_blank\" rel=\"noopener noreferrer\">ES2016 Array and Generator comprehensions</a>: ES2016 的 Generator 推导</li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-generators-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Generators in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/03/es6-generators.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 generators in depth</a>: Generator 规格的详尽讲解</li>\n<li>Derick Bailey, <a href=\"https://derickbailey.com/2015/10/05/using-es6-generators-to-short-circuit-hierarchical-data-iteration/\" target=\"_blank\" rel=\"noopener noreferrer\">Using ES6 Generators To Short-Circuit Hierarchical Data Iteration</a>: 使用 for...of 循环完成预定的操作步骤</li>\n</ul>\n<h2 id=\"异步操作和-async-函数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步操作和-async-函数\"><span>异步操作和 Async 函数</span></a></h2>\n<ul>\n<li>Luke Hoban, <a href=\"https://github.com/lukehoban/ecmascript-asyncawait\" target=\"_blank\" rel=\"noopener noreferrer\">Async Functions for ECMAScript</a>: Async 函数的设计思想，与 Promise、Gernerator 函数的关系</li>\n<li>Jafar Husain, <a href=\"https://github.com/jhusain/asyncgenerator\" target=\"_blank\" rel=\"noopener noreferrer\">Asynchronous Generators for ES2016</a>: Async 函数的深入讨论</li>\n<li>Nolan Lawson, <a href=\"http://pouchdb.com/2015/03/05/taming-the-async-beast-with-es7.html\" target=\"_blank\" rel=\"noopener noreferrer\">Taming the asynchronous beast with ES2016</a>: async 函数通俗的实例讲解</li>\n<li>Jafar Husain, <a href=\"https://docs.google.com/file/d/0B4PVbLpUIdzoMDR5dWstRllXblU/view?sle=true\" target=\"_blank\" rel=\"noopener noreferrer\">Async Generators</a>: 对 async 与 Generator 混合使用的一些讨论</li>\n<li>Daniel Brain, <a href=\"https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8\" target=\"_blank\" rel=\"noopener noreferrer\">Understand promises before you start using async/await</a>: 讨论 async/await 与 Promise 的关系</li>\n<li>Jake Archibald, <a href=\"https://developers.google.com/web/fundamentals/getting-started/primers/async-functions\" target=\"_blank\" rel=\"noopener noreferrer\">Async functions - making promises friendly</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/10/asynchronous-iteration.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: asynchronous iteration</a>: 异步遍历器的详细介绍</li>\n<li>Dima Grossman, <a href=\"http://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">How to write async await without try-catch blocks in JavaScript</a>: 除了 try/catch 以外的 async 函数内部捕捉错误的方法</li>\n<li>Mostafa Gaafa, <a href=\"https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9\" target=\"_blank\" rel=\"noopener noreferrer\">6 Reasons Why JavaScript’s Async/Await Blows Promises Away</a>: Async 函数的 6 个好处</li>\n</ul>\n<h2 id=\"class\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#class\"><span>Class</span></a></h2>\n<ul>\n<li>Sebastian Porto, <a href=\"https://reinteractive.net/posts/235-es6-classes-and-javascript-prototypes\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 classes and JavaScript prototypes</a>: ES6 Class 的写法与 ES5 Prototype 的写法对比</li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2014/07/introduction-to-es6-classes-tutorial/\" target=\"_blank\" rel=\"noopener noreferrer\">An introduction to ES6 classes</a>: ES6 class 的入门介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-oop.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: new OOP features besides classes</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-classes-final.html\" target=\"_blank\" rel=\"noopener noreferrer\">Classes in ECMAScript 6 (final semantics)</a>: Class 语法的详细介绍和设计思想分析</li>\n<li>Eric Faust, <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-subclassing/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Subclassing</a>: Class 语法的深入介绍</li>\n<li>Nicolás Bevacqua, <a href=\"https://ponyfoo.com/articles/binding-methods-to-class-instance-objects\" target=\"_blank\" rel=\"noopener noreferrer\">Binding Methods to Class Instance Objects</a>: 如何绑定类的实例中的 this</li>\n<li>Jamie Kyle, <a href=\"https://jamie.build/javascripts-new-private-class-fields.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript’s new #private class fields</a>: 私有属性的介绍。</li>\n</ul>\n<h2 id=\"decorator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#decorator\"><span>Decorator</span></a></h2>\n<ul>\n<li>Maximiliano Fierro, <a href=\"http://elmasse.github.io/js/decorators-bindings-es7.html\" target=\"_blank\" rel=\"noopener noreferrer\">Declarative vs Imperative</a>: Decorators 和 Mixin 介绍</li>\n<li>Justin Fagnani, <a href=\"http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\" target=\"_blank\" rel=\"noopener noreferrer\">&quot;Real&quot; Mixins with JavaScript Classes</a>: 使用类的继承实现 Mixin</li>\n<li>Addy Osmani, <a href=\"https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841\" target=\"_blank\" rel=\"noopener noreferrer\">Exploring ES2016 Decorators</a>: Decorator 的深入介绍</li>\n<li>Sebastian McKenzie, <a href=\"https://github.com/wycats/javascript-decorators/issues/4\" target=\"_blank\" rel=\"noopener noreferrer\">Allow decorators for functions as well</a>: 为什么修饰器不能用于函数</li>\n<li>Maximiliano Fierro, <a href=\"http://cocktailjs.github.io/blog/traits-with-es7-decorators.html\" target=\"_blank\" rel=\"noopener noreferrer\">Traits with ES2016 Decorators</a>: Trait 的用法介绍</li>\n<li>Jonathan Creamer: <a href=\"http://jonathancreamer.com/using-es2016-decorators-to-publish-on-an-event-bus/\" target=\"_blank\" rel=\"noopener noreferrer\">Using ES2016 Decorators to Publish on an Event Bus</a>: 使用修饰器实现自动发布事件</li>\n</ul>\n<h2 id=\"module\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#module\"><span>Module</span></a></h2>\n<ul>\n<li>Jack Franklin, <a href=\"http://24ways.org/2014/javascript-modules-the-es6-way/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Modules the ES6 Way</a>: ES6 模块入门</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/09/es6-modules-final.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 modules: the final syntax</a>: ES6 模块的介绍，以及与 CommonJS 规格的详细比较</li>\n<li>Dave Herman, <a href=\"http://calculist.org/blog/2012/06/29/static-module-resolution/\" target=\"_blank\" rel=\"noopener noreferrer\">Static module resolution</a>: ES6 模块的静态化设计思想</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Modules</a>: ES6 模块设计思想的介绍</li>\n<li>Ben Newman, <a href=\"http://benjamn.github.io/empirenode-2015/#/\" target=\"_blank\" rel=\"noopener noreferrer\">The Importance of import and export</a>: ES6 模块的设计思想</li>\n<li>ESDiscuss, <a href=\"https://esdiscuss.org/topic/why-is-export-default-var-a-1-invalid-syntax\" target=\"_blank\" rel=\"noopener noreferrer\">Why is &quot;export default var a = 1;&quot; invalid syntax?</a></li>\n<li>Bradley Meck, <a href=\"https://github.com/nodejs/node-eps/blob/master/002-es6-modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Interoperability</a>: 介绍 Node.js 如何处理 ES6 语法加载 CommonJS 模块</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2017/01/babel-esm-spec-mode.html\" target=\"_blank\" rel=\"noopener noreferrer\">Making transpiled ES modules more spec-compliant</a>: ES6 模块编译成 CommonJS 模块的详细介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2017/01/import-operator.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: import() – dynamically importing ES modules</a>: import() 的用法</li>\n<li>Node.js EPS, <a href=\"https://github.com/nodejs/node-eps/blob/master/002-es-modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES Module Interoperability</a>: Node.js 对 ES6 模块的处理规格</li>\n</ul>\n<h2 id=\"二进制数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#二进制数组\"><span>二进制数组</span></a></h2>\n<ul>\n<li>Ilmari Heikkinen, <a href=\"http://www.html5rocks.com/en/tutorials/webgl/typed_arrays/\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Arrays: Binary Data in the Browser</a></li>\n<li>Khronos, <a href=\"http://www.khronos.org/registry/typedarray/specs/latest/\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Array Specification</a></li>\n<li>Ian Elliot, <a href=\"http://www.i-programmer.info/projects/36-web/6234-reading-a-bmp-file-in-javascript.html\" target=\"_blank\" rel=\"noopener noreferrer\">Reading A BMP File In JavaScript</a></li>\n<li>Renato Mangini, <a href=\"http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\" target=\"_blank\" rel=\"noopener noreferrer\">How to convert ArrayBuffer to and from String</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/typed-arrays.html\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Arrays in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/01/shared-array-buffer.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: Shared memory and atomics</a></li>\n<li>Lin Clark, <a href=\"https://hacks.mozilla.org/2017/06/avoiding-race-conditions-in-sharedarraybuffers-with-atomics/\" target=\"_blank\" rel=\"noopener noreferrer\">Avoiding race conditions in SharedArrayBuffers with Atomics</a>: Atomics 对象使用场景的解释</li>\n<li>Lars T Hansen, <a href=\"https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.html\" target=\"_blank\" rel=\"noopener noreferrer\">Shared memory - a brief tutorial</a></li>\n</ul>\n<h2 id=\"simd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simd\"><span>SIMD</span></a></h2>\n<ul>\n<li>TC39, <a href=\"https://docs.google.com/presentation/d/1MY9NHrHmL7ma7C8dyNXvmYNNGgVmmxXk8ZIiQtPlfH4/edit#slide=id.p19\" target=\"_blank\" rel=\"noopener noreferrer\">SIMD.js Stage 2</a></li>\n<li>MDN, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SIMD\" target=\"_blank\" rel=\"noopener noreferrer\">SIMD</a></li>\n<li>TC39, <a href=\"https://github.com/tc39/ecmascript_simd\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript SIMD</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2013/12/simd-js.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript gains support for SIMD</a></li>\n</ul>\n<h2 id=\"工具\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#工具\"><span>工具</span></a></h2>\n<ul>\n<li>Babel, <a href=\"https://github.com/thejameskyle/babel-handbook/tree/master/translations/en\" target=\"_blank\" rel=\"noopener noreferrer\">Babel Handbook</a>: Babel 的用法介绍</li>\n<li>Google, <a href=\"https://github.com/google/traceur-compiler\" target=\"_blank\" rel=\"noopener noreferrer\">traceur-compiler</a>: Traceur 编译器</li>\n<li>Casper Beyer, <a href=\"http://caspervonb.github.io/2014/03/05/ecmascript6-features-and-tools.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 Features and Tools</a></li>\n<li>Stoyan Stefanov, <a href=\"http://www.phpied.com/writing-es6-today-with-jstransform/\" target=\"_blank\" rel=\"noopener noreferrer\">Writing ES6 today with jstransform</a></li>\n<li>ES6 Module Loader, <a href=\"https://github.com/ModuleLoader/es6-module-loader\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Loader Polyfill</a>: 在浏览器和 node.js 加载 ES6 模块的一个库，文档里对 ES6 模块有详细解释</li>\n<li>Paul Miller, <a href=\"https://github.com/paulmillr/es6-shim\" target=\"_blank\" rel=\"noopener noreferrer\">es6-shim</a>: 一个针对老式浏览器，模拟 ES6 部分功能的垫片库(shim)</li>\n<li>army8735, <a href=\"https://github.com/army8735/jsdc\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Downcast</a>: 国产的 ES6 到 ES5 的转码器</li>\n<li>esnext, <a href=\"https://github.com/esnext/es6-module-transpiler\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Transpiler</a>: 基于 node.js 的将 ES6 模块转为 ES5 代码的命令行工具</li>\n<li>Sebastian McKenzie, <a href=\"http://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">BabelJS</a>: ES6 转译器</li>\n<li>SystemJS, <a href=\"https://github.com/systemjs/systemjs\" target=\"_blank\" rel=\"noopener noreferrer\">SystemJS</a>: 在浏览器中加载 AMD、CJS、ES6 模块的一个垫片库</li>\n<li>Modernizr, <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills#ecmascript-6-harmony\" target=\"_blank\" rel=\"noopener noreferrer\">HTML5 Cross Browser Polyfills</a>: ES6 垫片库清单</li>\n<li>Facebook, <a href=\"https://github.com/facebook/regenerator\" target=\"_blank\" rel=\"noopener noreferrer\">regenerator</a>: 将 Generator 函数转为 ES5 的转码器</li>\n</ul>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/language/js/es6/reference.md","filePathRelative":"code/language/js/es6/reference.md","frontmatter":{"icon":"quote","author":"阮一峰","date":"2019-10-25T00:00:00.000Z","category":"JavaScript","copyright":"此部分博客采用 <a href=\"http://creativecommons.org/licenses/by-nc/4.0/\" rel=\"noopener noreferrer\" target=\"_blank\">“保持署名—非商用”创意共享4.0许可证</a>"},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"参考链接\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#参考链接\"><span>参考链接</span></a></h1>\n<h2 id=\"官方文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#官方文件\"><span>官方文件</span></a></h2>\n<ul>\n<li><a href=\"https://www.ecma-international.org/ecma-262/6.0/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2015 Language Specification</a>: ECMAScript 2015 规格</li>\n<li><a href=\"https://www.ecma-international.org/ecma-262/7.0/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2016 Language Specification</a>: ECMAScript 2016 规格</li>\n<li><a href=\"https://tc39.github.io/ecma262/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2017 Language Specification</a>: ECMAScript 2017 规格(草案)</li>\n<li><a href=\"https://github.com/tc39/ecma262\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Current Proposals</a>: ECMAScript 当前的所有提案</li>\n<li><a href=\"https://github.com/tc39/proposals\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Active Proposals</a>: 已经进入正式流程的提案</li>\n<li><a href=\"https://github.com/hemanth/es-next\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript proposals</a>: 从阶段 0 到阶段 4 的所有提案列表</li>\n<li><a href=\"https://github.com/tc39/agendas\" target=\"_blank\" rel=\"noopener noreferrer\">TC39 meeting agendas</a>: TC39 委员会历年的会议记录</li>\n<li><a href=\"https://ecmascript-daily.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Daily</a>: TC39 委员会的动态</li>\n<li><a href=\"https://tc39.github.io/process-document/\" target=\"_blank\" rel=\"noopener noreferrer\">The TC39 Process</a>: 提案进入正式规格的流程</li>\n<li><a href=\"https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39: A Process Sketch, Stages 0 and 1</a>: Stage 0 和 Stage 1 的含义</li>\n<li><a href=\"https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39 Process Sketch, Stage 2</a>: Stage 2 的含义</li>\n</ul>\n<h2 id=\"综合介绍\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#综合介绍\"><span>综合介绍</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"https://exploringjs.com/es6/\" target=\"_blank\" rel=\"noopener noreferrer\">Exploring ES6: Upgrade to the next version of JavaScript</a>: ES6 的专著，本书的许多代码实例来自该书</li>\n<li>Sayanee Basu, <a href=\"http://net.tutsplus.com/articles/news/ecmascript-6-today/\" target=\"_blank\" rel=\"noopener noreferrer\">Use ECMAScript 6 Today</a></li>\n<li>Ariya Hidayat, <a href=\"http://www.sencha.com/blog/toward-modern-web-apps-with-ecmascript-6/\" target=\"_blank\" rel=\"noopener noreferrer\">Toward Modern Web Apps with ECMAScript 6</a></li>\n<li>Dale Schouten, <a href=\"http://html5hub.com/10-ecmascript-6-tricks-you-can-perform-right-now/\" target=\"_blank\" rel=\"noopener noreferrer\">10 Ecmascript-6 tricks you can perform right now</a></li>\n<li>Colin Toh, <a href=\"http://colintoh.com/blog/lightweight-es6-features\" target=\"_blank\" rel=\"noopener noreferrer\">Lightweight ES6 Features That Pack A Punch</a>: ES6 的一些“轻量级”的特性介绍</li>\n<li>Domenic Denicola, <a href=\"http://www.slideshare.net/domenicdenicola/es6-the-awesome-parts\" target=\"_blank\" rel=\"noopener noreferrer\">ES6: The Awesome Parts</a></li>\n<li>Nicholas C. Zakas, <a href=\"https://github.com/nzakas/understandinges6\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding ECMAScript 6</a></li>\n<li>Justin Drake, <a href=\"https://github.com/JustinDrake/node-es6-examples\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 in Node.JS</a></li>\n<li>Ryan Dao, <a href=\"http://ryandao.net/portal/content/summary-ecmascript-6-major-features\" target=\"_blank\" rel=\"noopener noreferrer\">Summary of ECMAScript 6 major features</a></li>\n<li>Luke Hoban, <a href=\"https://github.com/lukehoban/es6features\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 features</a>: ES6 新语法点的罗列</li>\n<li>Traceur-compiler, <a href=\"https://github.com/google/traceur-compiler/wiki/LanguageFeatures\" target=\"_blank\" rel=\"noopener noreferrer\">Language Features</a>: Traceur 文档列出的一些 ES6 例子</li>\n<li>Axel Rauschmayer, <a href=\"https://speakerdeck.com/rauschma/ecmascript-6-whats-next-for-javascript-august-2014\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: what’s next for JavaScript?</a>: 关于 ES6 新增语法的综合介绍，有很多例子</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/08/getting-started-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Getting started with ECMAScript 6</a>: ES6 语法点的综合介绍</li>\n<li>Toby Ho, <a href=\"http://davidwalsh.name/es6-io\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 in io.js</a></li>\n<li>Guillermo Rauch, <a href=\"http://rauchg.com/2015/ecmascript-6/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6</a></li>\n<li>Charles King, <a href=\"http://charlesbking.com/power_of_es6/#/\" target=\"_blank\" rel=\"noopener noreferrer\">The power of ECMAScript 6</a></li>\n<li>Benjamin De Cock, <a href=\"https://github.com/bendc/frontend-guidelines\" target=\"_blank\" rel=\"noopener noreferrer\">Frontend Guidelines</a>: ES6 最佳实践</li>\n<li>Jani Hartikainen, <a href=\"http://codeutopia.net/blog/2015/01/06/es6-what-are-the-benefits-of-the-new-features-in-practice/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6: What are the benefits of the new features in practice?</a></li>\n<li>kangax, <a href=\"http://perfectionkills.com/javascript-quiz-es6/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript quiz. ES6 edition</a>: ES6 小测试</li>\n<li>Jeremy Fairbank, <a href=\"https://speakerdeck.com/jfairbank/html5devconf-es7-and-beyond\" target=\"_blank\" rel=\"noopener noreferrer\">HTML5DevConf ES2016 and Beyond!</a>: ES2016 新增语法点介绍</li>\n<li>Timothy Gu, <a href=\"https://timothygu.me/es-howto/\" target=\"_blank\" rel=\"noopener noreferrer\">How to Read the ECMAScript Specification</a>: 如何读懂 ES6 规格</li>\n</ul>\n<h2 id=\"let-和-const\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#let-和-const\"><span>let 和 const</span></a></h2>\n<ul>\n<li>Kyle Simpson, <a href=\"http://davidwalsh.name/for-and-against-let\" target=\"_blank\" rel=\"noopener noreferrer\">For and against let</a>: 讨论 let 命令的作用域</li>\n<li>kangax, <a href=\"http://es-discourse.com/t/why-typeof-is-no-longer-safe/15\" target=\"_blank\" rel=\"noopener noreferrer\">Why typeof is no longer “safe”</a>: 讨论在块级作用域内，let 命令的变量声明和赋值的行为</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-scoping.html\" target=\"_blank\" rel=\"noopener noreferrer\">Variables and scoping in ECMAScript 6</a>: 讨论块级作用域与 let 和 const 的行为</li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-let-const-and-temporal-dead-zone-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Let, Const and the “Temporal Dead Zone” (TDZ) in Depth</a></li>\n<li>acorn, <a href=\"https://github.com/ternjs/acorn/issues/118\" target=\"_blank\" rel=\"noopener noreferrer\">Function statements in strict mode</a>: 块级作用域对严格模式的函数声明的影响</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/09/global.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: global</a>: 顶层对象 <code v-pre>global</code></li>\n</ul>\n<h2 id=\"解构赋值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#解构赋值\"><span>解构赋值</span></a></h2>\n<ul>\n<li>Nick Fitzgerald, <a href=\"http://fitzgeraldnick.com/weblog/50/\" target=\"_blank\" rel=\"noopener noreferrer\">Destructuring Assignment in ECMAScript 6</a>: 详细介绍解构赋值的用法</li>\n<li>Nicholas C. Zakas, <a href=\"https://www.nczonline.net/blog/2015/10/ecmascript-6-destructuring-gotcha/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 destructuring gotcha</a></li>\n</ul>\n<h2 id=\"字符串\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#字符串\"><span>字符串</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2012/08/01/a-critical-review-of-ecmascript-6-quasi-literals/\" target=\"_blank\" rel=\"noopener noreferrer\">A critical review of ECMAScript 6 quasi-literals</a></li>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\" target=\"_blank\" rel=\"noopener noreferrer\">Template strings</a></li>\n<li>Addy Osmani, <a href=\"http://updates.html5rocks.com/2015/01/ES6-Template-Strings\" target=\"_blank\" rel=\"noopener noreferrer\">Getting Literal With ES6 Template Strings</a>: 模板字符串的介绍</li>\n<li>Blake Winton, <a href=\"https://weblog.latte.ca/blake/tech/firefox/templates.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Templates</a>: 模板字符串的介绍</li>\n<li>Peter Jaszkowiak, <a href=\"https://medium.com/@PitaJ/how-to-write-a-template-compiler-in-javascript-f174df6f32f\" target=\"_blank\" rel=\"noopener noreferrer\">How to write a template compiler in JavaScript</a>: 使用模板字符串，编写一个模板编译函数</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/11/string-padding.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES.stage3: string padding</a></li>\n</ul>\n<h2 id=\"正则\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#正则\"><span>正则</span></a></h2>\n<ul>\n<li>Mathias Bynens, <a href=\"https://mathiasbynens.be/notes/es6-unicode-regex\" target=\"_blank\" rel=\"noopener noreferrer\">Unicode-aware regular expressions in ES6</a>: 详细介绍正则表达式的 u 修饰符</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/07/regexp-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">New regular expression features in ECMAScript 6</a>: ES6 正则特性的详细介绍</li>\n<li>Yang Guo, <a href=\"http://v8project.blogspot.jp/2016/02/regexp-lookbehind-assertions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Regular expression lookbehind assertions</a>: 介绍后行断言</li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/05/regexp-named-capture-groups.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: regular expression named capture groups</a>: 具名组匹配的介绍</li>\n<li>Mathias Bynens, <a href=\"https://mathiasbynens.be/notes/es-regexp-proposals\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript regular expressions are getting better!</a>: 介绍 ES2018 添加的多项正则语法</li>\n</ul>\n<h2 id=\"数值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#数值\"><span>数值</span></a></h2>\n<ul>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-number-improvements-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Number Improvements in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/03/es-integer.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: arbitrary precision integers</a></li>\n</ul>\n<h2 id=\"数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#数组\"><span>数组</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/05/es6-array-methods.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6’s new array methods</a>: 对 ES6 新增的数组方法的全面介绍</li>\n<li>TC39, <a href=\"https://github.com/tc39/Array.prototype.includes/\" target=\"_blank\" rel=\"noopener noreferrer\">Array.prototype.includes</a>: 数组的 includes 方法的规格</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/holes-arrays-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: holes in Arrays</a>: 数组的空位问题</li>\n</ul>\n<h2 id=\"函数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#函数\"><span>函数</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2013/09/10/understanding-ecmascript-6-arrow-functions/\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding ECMAScript 6 arrow functions</a></li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2014/04/real-life-es6-arrow-fn/\" target=\"_blank\" rel=\"noopener noreferrer\">Real Life ES6 - Arrow Functions</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/04/required-parameters-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Handling required parameters in ECMAScript 6</a></li>\n<li>Dmitry Soshnikov, <a href=\"http://dmitrysoshnikov.com/ecmascript/es6-notes-default-values-of-parameters/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Notes: Default values of parameters</a>: 介绍参数的默认值</li>\n<li>Ragan Wald, <a href=\"http://raganwald.com/2015/02/02/destructuring.html\" target=\"_blank\" rel=\"noopener noreferrer\">Destructuring and Recursion in ES6</a>: rest 参数和扩展运算符的详细介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/function-names-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">The names of functions in ES6</a>: 函数的 name 属性的详细介绍</li>\n<li>Kyle Simpson, <a href=\"http://blog.getify.com/arrow-this/\" target=\"_blank\" rel=\"noopener noreferrer\">Arrow This</a>: 箭头函数并没有自己的 this</li>\n<li>Derick Bailey, <a href=\"http://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">Do ES6 Arrow Functions Really Solve “this” In JavaScript?</a>: 使用箭头函数处理 this 指向，必须非常小心</li>\n<li>Mark McDonnell, <a href=\"http://www.integralist.co.uk/posts/js-recursion.html\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding recursion in functional JavaScript programming</a>: 如何自己实现尾递归优化</li>\n<li>Nicholas C. Zakas, <a href=\"https://www.nczonline.net/blog/2016/10/the-ecmascript-2016-change-you-probably-dont-know/\" target=\"_blank\" rel=\"noopener noreferrer\">The ECMAScript 2016 change you probably don’t know</a>: 使用参数默认值时，不能在函数内部显式开启严格模式</li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/08/optional-catch-binding.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: optional catch binding</a></li>\n</ul>\n<h2 id=\"对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#对象\"><span>对象</span></a></h2>\n<ul>\n<li>Addy Osmani, <a href=\"http://www.html5rocks.com/en/tutorials/es7/observe/\" target=\"_blank\" rel=\"noopener noreferrer\">Data-binding Revolutions with Object.observe()</a>: 介绍 Object.observe()的概念</li>\n<li>Sella Rafaeli, <a href=\"http://www.sellarafaeli.com/blog/native_javascript_data_binding\" target=\"_blank\" rel=\"noopener noreferrer\">Native JavaScript Data-Binding</a>: 如何使用 Object.observe 方法，实现数据对象与 DOM 对象的双向绑定</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/proto-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code v-pre>__proto__</code> in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/10/enumerability-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Enumerability in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/02/object-getownpropertydescriptors.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: Object.getOwnPropertyDescriptors()</a></li>\n<li>TC39, <a href=\"https://github.com/tc39/proposal-object-getownpropertydescriptors\" target=\"_blank\" rel=\"noopener noreferrer\">Object.getOwnPropertyDescriptors Proposal</a></li>\n</ul>\n<h2 id=\"symbol\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#symbol\"><span>Symbol</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-symbols.html\" target=\"_blank\" rel=\"noopener noreferrer\">Symbols in ECMAScript 6</a>: Symbol 简介</li>\n<li>MDN, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" target=\"_blank\" rel=\"noopener noreferrer\">Symbol</a>: Symbol 类型的详细介绍</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Symbols</a></li>\n<li>Keith Cirkel, <a href=\"http://blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaprogramming in ES6: Symbols and why they’re awesome</a>: Symbol 的深入介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/well-known-symbols-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Customizing ES6 via well-known symbols</a></li>\n<li>Derick Bailey, <a href=\"https://derickbailey.com/2016/03/09/creating-a-true-singleton-in-node-js-with-es6-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">Creating A True Singleton In Node.js, With ES6 Symbols</a></li>\n<li>Das Surma, <a href=\"https://dassur.ma/things/reading-specs-2/\" target=\"_blank\" rel=\"noopener noreferrer\">How to read web specs Part IIa – Or: ECMAScript Symbols</a>: 介绍 Symbol 的规格</li>\n</ul>\n<h2 id=\"set-和-map\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-和-map\"><span>Set 和 Map</span></a></h2>\n<ul>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\" target=\"_blank\" rel=\"noopener noreferrer\">WeakSet</a>: 介绍 WeakSet 数据结构</li>\n<li>Dwayne Charrington, <a href=\"http://ilikekillnerds.com/2015/02/what-are-weakmaps-in-es6/\" target=\"_blank\" rel=\"noopener noreferrer\">What Are Weakmaps In ES6?</a>: WeakMap 数据结构介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/01/es6-maps-sets.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: maps and sets</a>: Set 和 Map 结构的详细介绍</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-collections/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Collections</a>: Set 和 Map 结构的设计思想</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/08/es6-map-json.html\" target=\"_blank\" rel=\"noopener noreferrer\">Converting ES6 Maps to and from JSON</a>: 如何将 Map 与其他数据结构互相转换</li>\n</ul>\n<h2 id=\"proxy-和-reflect\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#proxy-和-reflect\"><span>Proxy 和 Reflect</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2014/04/22/creating-defensive-objects-with-es6-proxies/\" target=\"_blank\" rel=\"noopener noreferrer\">Creating defensive objects with ES6 proxies</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-proxies.html\" target=\"_blank\" rel=\"noopener noreferrer\">Meta programming with ECMAScript 6 proxies</a>: Proxy 详解</li>\n<li>Daniel Zautner, <a href=\"http://dzautner.com/meta-programming-javascript-using-proxies/\" target=\"_blank\" rel=\"noopener noreferrer\">Meta-programming JavaScript Using Proxies</a>: 使用 Proxy 实现元编程</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">Harmony-reflect</a>: Reflect 对象的设计目的</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/traps.html\" target=\"_blank\" rel=\"noopener noreferrer\">Proxy Traps</a>: Proxy 拦截操作一览</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/api.html\" target=\"_blank\" rel=\"noopener noreferrer\">Reflect API</a></li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/handler_api.html\" target=\"_blank\" rel=\"noopener noreferrer\">Proxy Handler API</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-proxies-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Proxies in Depth</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-proxy-traps-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Proxy Traps in Depth</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/more-es6-proxy-traps-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">More ES6 Proxy Traps in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/11/proxying-builtins.html\" target=\"_blank\" rel=\"noopener noreferrer\">Pitfall: not all objects can be wrapped transparently by proxies</a></li>\n<li>Bertalan Miklos, <a href=\"https://blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/\" target=\"_blank\" rel=\"noopener noreferrer\">Writing a JavaScript Framework - Data Binding with ES6 Proxies</a>: 使用 Proxy 实现观察者模式</li>\n<li>Keith Cirkel, <a href=\"https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaprogramming in ES6: Part 2 - Reflect</a>: Reflect API 的详细介绍</li>\n</ul>\n<h2 id=\"promise-对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#promise-对象\"><span>Promise 对象</span></a></h2>\n<ul>\n<li>Jake Archibald, <a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Promises: There and back again</a></li>\n<li>Jake Archibald, <a href=\"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\" target=\"_blank\" rel=\"noopener noreferrer\">Tasks, microtasks, queues and schedules</a></li>\n<li>Tilde, <a href=\"https://github.com/tildeio/rsvp.js\" target=\"_blank\" rel=\"noopener noreferrer\">rsvp.js</a></li>\n<li>Sandeep Panda, <a href=\"http://www.sitepoint.com/overview-javascript-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">An Overview of JavaScript Promises</a>: ES6 Promise 入门介绍</li>\n<li>Dave Atchley, <a href=\"http://www.datchley.name/es6-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Promises</a>: Promise 的语法介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/10/es6-promises-api.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 promises (2/2): the API</a>: 对 ES6 Promise 规格和用法的详细介绍</li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2015/02/promises/\" target=\"_blank\" rel=\"noopener noreferrer\">Embracing Promises in JavaScript</a>: catch 方法的例子</li>\n<li>Ronald Chen, <a href=\"https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513#.2an1he6vf\" target=\"_blank\" rel=\"noopener noreferrer\">How to escape Promise Hell</a>: 如何使用 <code v-pre>Promise.all</code> 方法的一些很好的例子</li>\n<li>Jordan Harband, <a href=\"https://github.com/ljharb/proposal-promise-try\" target=\"_blank\" rel=\"noopener noreferrer\">proposal-promise-try</a>: Promise.try() 方法的提案</li>\n<li>Sven Slootweg, <a href=\"http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/\" target=\"_blank\" rel=\"noopener noreferrer\">What is Promise.try, and why does it matter?</a>: Promise.try() 方法的优点</li>\n<li>Yehuda Katz, <a href=\"https://thefeedbackloop.xyz/tc39-promises-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39: Promises, Promises</a>: Promise.try() 的用处</li>\n</ul>\n<h2 id=\"iterator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#iterator\"><span>Iterator</span></a></h2>\n<ul>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\" target=\"_blank\" rel=\"noopener noreferrer\">Iterators and generators</a></li>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol\" target=\"_blank\" rel=\"noopener noreferrer\">The Iterator protocol</a></li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/04/es6-in-depth-iterators-and-the-for-of-loop/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Iterators and the for-of loop</a>: 遍历器与 for...of 循环的介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2013/06/iterators-generators.html\" target=\"_blank\" rel=\"noopener noreferrer\">Iterators and generators in ECMAScript 6</a>: 探讨 Iterator 和 Generator 的设计目的</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-iteration.html\" target=\"_blank\" rel=\"noopener noreferrer\">Iterables and iterators in ECMAScript 6</a>: Iterator 的详细介绍</li>\n<li>Kyle Simpson, <a href=\"http://blog.getify.com/iterating-es6-numbers/\" target=\"_blank\" rel=\"noopener noreferrer\">Iterating ES6 Numbers</a>: 在数值对象上部署遍历器</li>\n</ul>\n<h2 id=\"generator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#generator\"><span>Generator</span></a></h2>\n<ul>\n<li>Matt Baker, <a href=\"http://flippinawesome.org/2014/02/10/replacing-callbacks-with-es6-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Replacing callbacks with ES6 Generators</a></li>\n<li>Steven Sanderson, <a href=\"http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Experiments with Koa and JavaScript Generators</a></li>\n<li>jmar777, <a href=\"http://devsmash.com/blog/whats-the-big-deal-with-generators\" target=\"_blank\" rel=\"noopener noreferrer\">What’s the Big Deal with Generators?</a></li>\n<li>Marc Harter, <a href=\"http://strongloop.com/strongblog/how-to-generators-node-js-yield-use-cases/\" target=\"_blank\" rel=\"noopener noreferrer\">Generators in Node.js: Common Misconceptions and Three Good Use Cases</a>: 讨论 Generator 函数的作用</li>\n<li>StackOverflow, <a href=\"http://stackoverflow.com/questions/20977379/es6-yield-what-happens-to-the-arguments-of-the-first-call-next\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 yield : what happens to the arguments of the first call next()?</a>: 第一次使用 next 方法时不能带有参数</li>\n<li>Kyle Simpson, <a href=\"http://davidwalsh.name/es6-generators\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Generators: Complete Series</a>: 由浅入深探讨 Generator 的系列文章，共四篇</li>\n<li>Gajus Kuizinas, <a href=\"http://gajus.com/blog/2/the-definetive-guide-to-the-javascript-generators\" target=\"_blank\" rel=\"noopener noreferrer\">The Definitive Guide to the JavaScript Generators</a>: 对 Generator 的综合介绍</li>\n<li>Jan Krems, <a href=\"https://gist.github.com/jkrems/04a2b34fb9893e4c2b5c\" target=\"_blank\" rel=\"noopener noreferrer\">Generators Are Like Arrays</a>: 讨论 Generator 可以被当作数据结构看待</li>\n<li>Harold Cooper, <a href=\"http://syzygy.st/javascript-coroutines/\" target=\"_blank\" rel=\"noopener noreferrer\">Coroutine Event Loops in JavaScript</a>: Generator 用于实现状态机</li>\n<li>Ruslan Ismagilov, <a href=\"https://github.com/isRuslan/learn-generators\" target=\"_blank\" rel=\"noopener noreferrer\">learn-generators</a>: 编程练习，共 6 道题</li>\n<li>Steven Sanderson, <a href=\"http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Experiments with Koa and JavaScript Generators</a>: Generator 入门介绍，以 Koa 框架为例</li>\n<li>Mahdi Dibaiee, <a href=\"http://dibaiee.ir/es7-array-generator-comprehensions/\" target=\"_blank\" rel=\"noopener noreferrer\">ES2016 Array and Generator comprehensions</a>: ES2016 的 Generator 推导</li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-generators-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Generators in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/03/es6-generators.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 generators in depth</a>: Generator 规格的详尽讲解</li>\n<li>Derick Bailey, <a href=\"https://derickbailey.com/2015/10/05/using-es6-generators-to-short-circuit-hierarchical-data-iteration/\" target=\"_blank\" rel=\"noopener noreferrer\">Using ES6 Generators To Short-Circuit Hierarchical Data Iteration</a>: 使用 for...of 循环完成预定的操作步骤</li>\n</ul>\n<h2 id=\"异步操作和-async-函数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步操作和-async-函数\"><span>异步操作和 Async 函数</span></a></h2>\n<ul>\n<li>Luke Hoban, <a href=\"https://github.com/lukehoban/ecmascript-asyncawait\" target=\"_blank\" rel=\"noopener noreferrer\">Async Functions for ECMAScript</a>: Async 函数的设计思想，与 Promise、Gernerator 函数的关系</li>\n<li>Jafar Husain, <a href=\"https://github.com/jhusain/asyncgenerator\" target=\"_blank\" rel=\"noopener noreferrer\">Asynchronous Generators for ES2016</a>: Async 函数的深入讨论</li>\n<li>Nolan Lawson, <a href=\"http://pouchdb.com/2015/03/05/taming-the-async-beast-with-es7.html\" target=\"_blank\" rel=\"noopener noreferrer\">Taming the asynchronous beast with ES2016</a>: async 函数通俗的实例讲解</li>\n<li>Jafar Husain, <a href=\"https://docs.google.com/file/d/0B4PVbLpUIdzoMDR5dWstRllXblU/view?sle=true\" target=\"_blank\" rel=\"noopener noreferrer\">Async Generators</a>: 对 async 与 Generator 混合使用的一些讨论</li>\n<li>Daniel Brain, <a href=\"https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8\" target=\"_blank\" rel=\"noopener noreferrer\">Understand promises before you start using async/await</a>: 讨论 async/await 与 Promise 的关系</li>\n<li>Jake Archibald, <a href=\"https://developers.google.com/web/fundamentals/getting-started/primers/async-functions\" target=\"_blank\" rel=\"noopener noreferrer\">Async functions - making promises friendly</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/10/asynchronous-iteration.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: asynchronous iteration</a>: 异步遍历器的详细介绍</li>\n<li>Dima Grossman, <a href=\"http://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">How to write async await without try-catch blocks in JavaScript</a>: 除了 try/catch 以外的 async 函数内部捕捉错误的方法</li>\n<li>Mostafa Gaafa, <a href=\"https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9\" target=\"_blank\" rel=\"noopener noreferrer\">6 Reasons Why JavaScript’s Async/Await Blows Promises Away</a>: Async 函数的 6 个好处</li>\n</ul>\n<h2 id=\"class\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#class\"><span>Class</span></a></h2>\n<ul>\n<li>Sebastian Porto, <a href=\"https://reinteractive.net/posts/235-es6-classes-and-javascript-prototypes\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 classes and JavaScript prototypes</a>: ES6 Class 的写法与 ES5 Prototype 的写法对比</li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2014/07/introduction-to-es6-classes-tutorial/\" target=\"_blank\" rel=\"noopener noreferrer\">An introduction to ES6 classes</a>: ES6 class 的入门介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-oop.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: new OOP features besides classes</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-classes-final.html\" target=\"_blank\" rel=\"noopener noreferrer\">Classes in ECMAScript 6 (final semantics)</a>: Class 语法的详细介绍和设计思想分析</li>\n<li>Eric Faust, <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-subclassing/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Subclassing</a>: Class 语法的深入介绍</li>\n<li>Nicolás Bevacqua, <a href=\"https://ponyfoo.com/articles/binding-methods-to-class-instance-objects\" target=\"_blank\" rel=\"noopener noreferrer\">Binding Methods to Class Instance Objects</a>: 如何绑定类的实例中的 this</li>\n<li>Jamie Kyle, <a href=\"https://jamie.build/javascripts-new-private-class-fields.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript’s new #private class fields</a>: 私有属性的介绍。</li>\n</ul>\n<h2 id=\"decorator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#decorator\"><span>Decorator</span></a></h2>\n<ul>\n<li>Maximiliano Fierro, <a href=\"http://elmasse.github.io/js/decorators-bindings-es7.html\" target=\"_blank\" rel=\"noopener noreferrer\">Declarative vs Imperative</a>: Decorators 和 Mixin 介绍</li>\n<li>Justin Fagnani, <a href=\"http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\" target=\"_blank\" rel=\"noopener noreferrer\">&quot;Real&quot; Mixins with JavaScript Classes</a>: 使用类的继承实现 Mixin</li>\n<li>Addy Osmani, <a href=\"https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841\" target=\"_blank\" rel=\"noopener noreferrer\">Exploring ES2016 Decorators</a>: Decorator 的深入介绍</li>\n<li>Sebastian McKenzie, <a href=\"https://github.com/wycats/javascript-decorators/issues/4\" target=\"_blank\" rel=\"noopener noreferrer\">Allow decorators for functions as well</a>: 为什么修饰器不能用于函数</li>\n<li>Maximiliano Fierro, <a href=\"http://cocktailjs.github.io/blog/traits-with-es7-decorators.html\" target=\"_blank\" rel=\"noopener noreferrer\">Traits with ES2016 Decorators</a>: Trait 的用法介绍</li>\n<li>Jonathan Creamer: <a href=\"http://jonathancreamer.com/using-es2016-decorators-to-publish-on-an-event-bus/\" target=\"_blank\" rel=\"noopener noreferrer\">Using ES2016 Decorators to Publish on an Event Bus</a>: 使用修饰器实现自动发布事件</li>\n</ul>\n<h2 id=\"module\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#module\"><span>Module</span></a></h2>\n<ul>\n<li>Jack Franklin, <a href=\"http://24ways.org/2014/javascript-modules-the-es6-way/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Modules the ES6 Way</a>: ES6 模块入门</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/09/es6-modules-final.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 modules: the final syntax</a>: ES6 模块的介绍，以及与 CommonJS 规格的详细比较</li>\n<li>Dave Herman, <a href=\"http://calculist.org/blog/2012/06/29/static-module-resolution/\" target=\"_blank\" rel=\"noopener noreferrer\">Static module resolution</a>: ES6 模块的静态化设计思想</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Modules</a>: ES6 模块设计思想的介绍</li>\n<li>Ben Newman, <a href=\"http://benjamn.github.io/empirenode-2015/#/\" target=\"_blank\" rel=\"noopener noreferrer\">The Importance of import and export</a>: ES6 模块的设计思想</li>\n<li>ESDiscuss, <a href=\"https://esdiscuss.org/topic/why-is-export-default-var-a-1-invalid-syntax\" target=\"_blank\" rel=\"noopener noreferrer\">Why is &quot;export default var a = 1;&quot; invalid syntax?</a></li>\n<li>Bradley Meck, <a href=\"https://github.com/nodejs/node-eps/blob/master/002-es6-modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Interoperability</a>: 介绍 Node.js 如何处理 ES6 语法加载 CommonJS 模块</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2017/01/babel-esm-spec-mode.html\" target=\"_blank\" rel=\"noopener noreferrer\">Making transpiled ES modules more spec-compliant</a>: ES6 模块编译成 CommonJS 模块的详细介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2017/01/import-operator.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: import() – dynamically importing ES modules</a>: import() 的用法</li>\n<li>Node.js EPS, <a href=\"https://github.com/nodejs/node-eps/blob/master/002-es-modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES Module Interoperability</a>: Node.js 对 ES6 模块的处理规格</li>\n</ul>\n<h2 id=\"二进制数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#二进制数组\"><span>二进制数组</span></a></h2>\n<ul>\n<li>Ilmari Heikkinen, <a href=\"http://www.html5rocks.com/en/tutorials/webgl/typed_arrays/\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Arrays: Binary Data in the Browser</a></li>\n<li>Khronos, <a href=\"http://www.khronos.org/registry/typedarray/specs/latest/\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Array Specification</a></li>\n<li>Ian Elliot, <a href=\"http://www.i-programmer.info/projects/36-web/6234-reading-a-bmp-file-in-javascript.html\" target=\"_blank\" rel=\"noopener noreferrer\">Reading A BMP File In JavaScript</a></li>\n<li>Renato Mangini, <a href=\"http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\" target=\"_blank\" rel=\"noopener noreferrer\">How to convert ArrayBuffer to and from String</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/typed-arrays.html\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Arrays in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/01/shared-array-buffer.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: Shared memory and atomics</a></li>\n<li>Lin Clark, <a href=\"https://hacks.mozilla.org/2017/06/avoiding-race-conditions-in-sharedarraybuffers-with-atomics/\" target=\"_blank\" rel=\"noopener noreferrer\">Avoiding race conditions in SharedArrayBuffers with Atomics</a>: Atomics 对象使用场景的解释</li>\n<li>Lars T Hansen, <a href=\"https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.html\" target=\"_blank\" rel=\"noopener noreferrer\">Shared memory - a brief tutorial</a></li>\n</ul>\n<h2 id=\"simd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simd\"><span>SIMD</span></a></h2>\n<ul>\n<li>TC39, <a href=\"https://docs.google.com/presentation/d/1MY9NHrHmL7ma7C8dyNXvmYNNGgVmmxXk8ZIiQtPlfH4/edit#slide=id.p19\" target=\"_blank\" rel=\"noopener noreferrer\">SIMD.js Stage 2</a></li>\n<li>MDN, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SIMD\" target=\"_blank\" rel=\"noopener noreferrer\">SIMD</a></li>\n<li>TC39, <a href=\"https://github.com/tc39/ecmascript_simd\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript SIMD</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2013/12/simd-js.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript gains support for SIMD</a></li>\n</ul>\n<h2 id=\"工具\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#工具\"><span>工具</span></a></h2>\n<ul>\n<li>Babel, <a href=\"https://github.com/thejameskyle/babel-handbook/tree/master/translations/en\" target=\"_blank\" rel=\"noopener noreferrer\">Babel Handbook</a>: Babel 的用法介绍</li>\n<li>Google, <a href=\"https://github.com/google/traceur-compiler\" target=\"_blank\" rel=\"noopener noreferrer\">traceur-compiler</a>: Traceur 编译器</li>\n<li>Casper Beyer, <a href=\"http://caspervonb.github.io/2014/03/05/ecmascript6-features-and-tools.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 Features and Tools</a></li>\n<li>Stoyan Stefanov, <a href=\"http://www.phpied.com/writing-es6-today-with-jstransform/\" target=\"_blank\" rel=\"noopener noreferrer\">Writing ES6 today with jstransform</a></li>\n<li>ES6 Module Loader, <a href=\"https://github.com/ModuleLoader/es6-module-loader\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Loader Polyfill</a>: 在浏览器和 node.js 加载 ES6 模块的一个库，文档里对 ES6 模块有详细解释</li>\n<li>Paul Miller, <a href=\"https://github.com/paulmillr/es6-shim\" target=\"_blank\" rel=\"noopener noreferrer\">es6-shim</a>: 一个针对老式浏览器，模拟 ES6 部分功能的垫片库(shim)</li>\n<li>army8735, <a href=\"https://github.com/army8735/jsdc\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Downcast</a>: 国产的 ES6 到 ES5 的转码器</li>\n<li>esnext, <a href=\"https://github.com/esnext/es6-module-transpiler\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Transpiler</a>: 基于 node.js 的将 ES6 模块转为 ES5 代码的命令行工具</li>\n<li>Sebastian McKenzie, <a href=\"http://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">BabelJS</a>: ES6 转译器</li>\n<li>SystemJS, <a href=\"https://github.com/systemjs/systemjs\" target=\"_blank\" rel=\"noopener noreferrer\">SystemJS</a>: 在浏览器中加载 AMD、CJS、ES6 模块的一个垫片库</li>\n<li>Modernizr, <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills#ecmascript-6-harmony\" target=\"_blank\" rel=\"noopener noreferrer\">HTML5 Cross Browser Polyfills</a>: ES6 垫片库清单</li>\n<li>Facebook, <a href=\"https://github.com/facebook/regenerator\" target=\"_blank\" rel=\"noopener noreferrer\">regenerator</a>: 将 Generator 函数转为 ES5 的转码器</li>\n</ul>\n</template>","contentStripped":"<h1 id=\"参考链接\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#参考链接\"><span>参考链接</span></a></h1>\n<h2 id=\"官方文件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#官方文件\"><span>官方文件</span></a></h2>\n<ul>\n<li><a href=\"https://www.ecma-international.org/ecma-262/6.0/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2015 Language Specification</a>: ECMAScript 2015 规格</li>\n<li><a href=\"https://www.ecma-international.org/ecma-262/7.0/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2016 Language Specification</a>: ECMAScript 2016 规格</li>\n<li><a href=\"https://tc39.github.io/ecma262/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript® 2017 Language Specification</a>: ECMAScript 2017 规格(草案)</li>\n<li><a href=\"https://github.com/tc39/ecma262\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Current Proposals</a>: ECMAScript 当前的所有提案</li>\n<li><a href=\"https://github.com/tc39/proposals\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Active Proposals</a>: 已经进入正式流程的提案</li>\n<li><a href=\"https://github.com/hemanth/es-next\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript proposals</a>: 从阶段 0 到阶段 4 的所有提案列表</li>\n<li><a href=\"https://github.com/tc39/agendas\" target=\"_blank\" rel=\"noopener noreferrer\">TC39 meeting agendas</a>: TC39 委员会历年的会议记录</li>\n<li><a href=\"https://ecmascript-daily.github.io/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript Daily</a>: TC39 委员会的动态</li>\n<li><a href=\"https://tc39.github.io/process-document/\" target=\"_blank\" rel=\"noopener noreferrer\">The TC39 Process</a>: 提案进入正式规格的流程</li>\n<li><a href=\"https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39: A Process Sketch, Stages 0 and 1</a>: Stage 0 和 Stage 1 的含义</li>\n<li><a href=\"https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39 Process Sketch, Stage 2</a>: Stage 2 的含义</li>\n</ul>\n<h2 id=\"综合介绍\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#综合介绍\"><span>综合介绍</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"https://exploringjs.com/es6/\" target=\"_blank\" rel=\"noopener noreferrer\">Exploring ES6: Upgrade to the next version of JavaScript</a>: ES6 的专著，本书的许多代码实例来自该书</li>\n<li>Sayanee Basu, <a href=\"http://net.tutsplus.com/articles/news/ecmascript-6-today/\" target=\"_blank\" rel=\"noopener noreferrer\">Use ECMAScript 6 Today</a></li>\n<li>Ariya Hidayat, <a href=\"http://www.sencha.com/blog/toward-modern-web-apps-with-ecmascript-6/\" target=\"_blank\" rel=\"noopener noreferrer\">Toward Modern Web Apps with ECMAScript 6</a></li>\n<li>Dale Schouten, <a href=\"http://html5hub.com/10-ecmascript-6-tricks-you-can-perform-right-now/\" target=\"_blank\" rel=\"noopener noreferrer\">10 Ecmascript-6 tricks you can perform right now</a></li>\n<li>Colin Toh, <a href=\"http://colintoh.com/blog/lightweight-es6-features\" target=\"_blank\" rel=\"noopener noreferrer\">Lightweight ES6 Features That Pack A Punch</a>: ES6 的一些“轻量级”的特性介绍</li>\n<li>Domenic Denicola, <a href=\"http://www.slideshare.net/domenicdenicola/es6-the-awesome-parts\" target=\"_blank\" rel=\"noopener noreferrer\">ES6: The Awesome Parts</a></li>\n<li>Nicholas C. Zakas, <a href=\"https://github.com/nzakas/understandinges6\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding ECMAScript 6</a></li>\n<li>Justin Drake, <a href=\"https://github.com/JustinDrake/node-es6-examples\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 in Node.JS</a></li>\n<li>Ryan Dao, <a href=\"http://ryandao.net/portal/content/summary-ecmascript-6-major-features\" target=\"_blank\" rel=\"noopener noreferrer\">Summary of ECMAScript 6 major features</a></li>\n<li>Luke Hoban, <a href=\"https://github.com/lukehoban/es6features\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 features</a>: ES6 新语法点的罗列</li>\n<li>Traceur-compiler, <a href=\"https://github.com/google/traceur-compiler/wiki/LanguageFeatures\" target=\"_blank\" rel=\"noopener noreferrer\">Language Features</a>: Traceur 文档列出的一些 ES6 例子</li>\n<li>Axel Rauschmayer, <a href=\"https://speakerdeck.com/rauschma/ecmascript-6-whats-next-for-javascript-august-2014\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: what’s next for JavaScript?</a>: 关于 ES6 新增语法的综合介绍，有很多例子</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/08/getting-started-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Getting started with ECMAScript 6</a>: ES6 语法点的综合介绍</li>\n<li>Toby Ho, <a href=\"http://davidwalsh.name/es6-io\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 in io.js</a></li>\n<li>Guillermo Rauch, <a href=\"http://rauchg.com/2015/ecmascript-6/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6</a></li>\n<li>Charles King, <a href=\"http://charlesbking.com/power_of_es6/#/\" target=\"_blank\" rel=\"noopener noreferrer\">The power of ECMAScript 6</a></li>\n<li>Benjamin De Cock, <a href=\"https://github.com/bendc/frontend-guidelines\" target=\"_blank\" rel=\"noopener noreferrer\">Frontend Guidelines</a>: ES6 最佳实践</li>\n<li>Jani Hartikainen, <a href=\"http://codeutopia.net/blog/2015/01/06/es6-what-are-the-benefits-of-the-new-features-in-practice/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6: What are the benefits of the new features in practice?</a></li>\n<li>kangax, <a href=\"http://perfectionkills.com/javascript-quiz-es6/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript quiz. ES6 edition</a>: ES6 小测试</li>\n<li>Jeremy Fairbank, <a href=\"https://speakerdeck.com/jfairbank/html5devconf-es7-and-beyond\" target=\"_blank\" rel=\"noopener noreferrer\">HTML5DevConf ES2016 and Beyond!</a>: ES2016 新增语法点介绍</li>\n<li>Timothy Gu, <a href=\"https://timothygu.me/es-howto/\" target=\"_blank\" rel=\"noopener noreferrer\">How to Read the ECMAScript Specification</a>: 如何读懂 ES6 规格</li>\n</ul>\n<h2 id=\"let-和-const\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#let-和-const\"><span>let 和 const</span></a></h2>\n<ul>\n<li>Kyle Simpson, <a href=\"http://davidwalsh.name/for-and-against-let\" target=\"_blank\" rel=\"noopener noreferrer\">For and against let</a>: 讨论 let 命令的作用域</li>\n<li>kangax, <a href=\"http://es-discourse.com/t/why-typeof-is-no-longer-safe/15\" target=\"_blank\" rel=\"noopener noreferrer\">Why typeof is no longer “safe”</a>: 讨论在块级作用域内，let 命令的变量声明和赋值的行为</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-scoping.html\" target=\"_blank\" rel=\"noopener noreferrer\">Variables and scoping in ECMAScript 6</a>: 讨论块级作用域与 let 和 const 的行为</li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-let-const-and-temporal-dead-zone-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Let, Const and the “Temporal Dead Zone” (TDZ) in Depth</a></li>\n<li>acorn, <a href=\"https://github.com/ternjs/acorn/issues/118\" target=\"_blank\" rel=\"noopener noreferrer\">Function statements in strict mode</a>: 块级作用域对严格模式的函数声明的影响</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/09/global.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: global</a>: 顶层对象 <code v-pre>global</code></li>\n</ul>\n<h2 id=\"解构赋值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#解构赋值\"><span>解构赋值</span></a></h2>\n<ul>\n<li>Nick Fitzgerald, <a href=\"http://fitzgeraldnick.com/weblog/50/\" target=\"_blank\" rel=\"noopener noreferrer\">Destructuring Assignment in ECMAScript 6</a>: 详细介绍解构赋值的用法</li>\n<li>Nicholas C. Zakas, <a href=\"https://www.nczonline.net/blog/2015/10/ecmascript-6-destructuring-gotcha/\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 destructuring gotcha</a></li>\n</ul>\n<h2 id=\"字符串\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#字符串\"><span>字符串</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2012/08/01/a-critical-review-of-ecmascript-6-quasi-literals/\" target=\"_blank\" rel=\"noopener noreferrer\">A critical review of ECMAScript 6 quasi-literals</a></li>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings\" target=\"_blank\" rel=\"noopener noreferrer\">Template strings</a></li>\n<li>Addy Osmani, <a href=\"http://updates.html5rocks.com/2015/01/ES6-Template-Strings\" target=\"_blank\" rel=\"noopener noreferrer\">Getting Literal With ES6 Template Strings</a>: 模板字符串的介绍</li>\n<li>Blake Winton, <a href=\"https://weblog.latte.ca/blake/tech/firefox/templates.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Templates</a>: 模板字符串的介绍</li>\n<li>Peter Jaszkowiak, <a href=\"https://medium.com/@PitaJ/how-to-write-a-template-compiler-in-javascript-f174df6f32f\" target=\"_blank\" rel=\"noopener noreferrer\">How to write a template compiler in JavaScript</a>: 使用模板字符串，编写一个模板编译函数</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/11/string-padding.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES.stage3: string padding</a></li>\n</ul>\n<h2 id=\"正则\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#正则\"><span>正则</span></a></h2>\n<ul>\n<li>Mathias Bynens, <a href=\"https://mathiasbynens.be/notes/es6-unicode-regex\" target=\"_blank\" rel=\"noopener noreferrer\">Unicode-aware regular expressions in ES6</a>: 详细介绍正则表达式的 u 修饰符</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/07/regexp-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">New regular expression features in ECMAScript 6</a>: ES6 正则特性的详细介绍</li>\n<li>Yang Guo, <a href=\"http://v8project.blogspot.jp/2016/02/regexp-lookbehind-assertions.html\" target=\"_blank\" rel=\"noopener noreferrer\">Regular expression lookbehind assertions</a>: 介绍后行断言</li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/05/regexp-named-capture-groups.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: regular expression named capture groups</a>: 具名组匹配的介绍</li>\n<li>Mathias Bynens, <a href=\"https://mathiasbynens.be/notes/es-regexp-proposals\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript regular expressions are getting better!</a>: 介绍 ES2018 添加的多项正则语法</li>\n</ul>\n<h2 id=\"数值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#数值\"><span>数值</span></a></h2>\n<ul>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-number-improvements-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Number Improvements in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/03/es-integer.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: arbitrary precision integers</a></li>\n</ul>\n<h2 id=\"数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#数组\"><span>数组</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/05/es6-array-methods.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6’s new array methods</a>: 对 ES6 新增的数组方法的全面介绍</li>\n<li>TC39, <a href=\"https://github.com/tc39/Array.prototype.includes/\" target=\"_blank\" rel=\"noopener noreferrer\">Array.prototype.includes</a>: 数组的 includes 方法的规格</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/holes-arrays-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: holes in Arrays</a>: 数组的空位问题</li>\n</ul>\n<h2 id=\"函数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#函数\"><span>函数</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2013/09/10/understanding-ecmascript-6-arrow-functions/\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding ECMAScript 6 arrow functions</a></li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2014/04/real-life-es6-arrow-fn/\" target=\"_blank\" rel=\"noopener noreferrer\">Real Life ES6 - Arrow Functions</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/04/required-parameters-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Handling required parameters in ECMAScript 6</a></li>\n<li>Dmitry Soshnikov, <a href=\"http://dmitrysoshnikov.com/ecmascript/es6-notes-default-values-of-parameters/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Notes: Default values of parameters</a>: 介绍参数的默认值</li>\n<li>Ragan Wald, <a href=\"http://raganwald.com/2015/02/02/destructuring.html\" target=\"_blank\" rel=\"noopener noreferrer\">Destructuring and Recursion in ES6</a>: rest 参数和扩展运算符的详细介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/function-names-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">The names of functions in ES6</a>: 函数的 name 属性的详细介绍</li>\n<li>Kyle Simpson, <a href=\"http://blog.getify.com/arrow-this/\" target=\"_blank\" rel=\"noopener noreferrer\">Arrow This</a>: 箭头函数并没有自己的 this</li>\n<li>Derick Bailey, <a href=\"http://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">Do ES6 Arrow Functions Really Solve “this” In JavaScript?</a>: 使用箭头函数处理 this 指向，必须非常小心</li>\n<li>Mark McDonnell, <a href=\"http://www.integralist.co.uk/posts/js-recursion.html\" target=\"_blank\" rel=\"noopener noreferrer\">Understanding recursion in functional JavaScript programming</a>: 如何自己实现尾递归优化</li>\n<li>Nicholas C. Zakas, <a href=\"https://www.nczonline.net/blog/2016/10/the-ecmascript-2016-change-you-probably-dont-know/\" target=\"_blank\" rel=\"noopener noreferrer\">The ECMAScript 2016 change you probably don’t know</a>: 使用参数默认值时，不能在函数内部显式开启严格模式</li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/08/optional-catch-binding.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: optional catch binding</a></li>\n</ul>\n<h2 id=\"对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#对象\"><span>对象</span></a></h2>\n<ul>\n<li>Addy Osmani, <a href=\"http://www.html5rocks.com/en/tutorials/es7/observe/\" target=\"_blank\" rel=\"noopener noreferrer\">Data-binding Revolutions with Object.observe()</a>: 介绍 Object.observe()的概念</li>\n<li>Sella Rafaeli, <a href=\"http://www.sellarafaeli.com/blog/native_javascript_data_binding\" target=\"_blank\" rel=\"noopener noreferrer\">Native JavaScript Data-Binding</a>: 如何使用 Object.observe 方法，实现数据对象与 DOM 对象的双向绑定</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/proto-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\"><code v-pre>__proto__</code> in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/10/enumerability-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Enumerability in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/02/object-getownpropertydescriptors.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: Object.getOwnPropertyDescriptors()</a></li>\n<li>TC39, <a href=\"https://github.com/tc39/proposal-object-getownpropertydescriptors\" target=\"_blank\" rel=\"noopener noreferrer\">Object.getOwnPropertyDescriptors Proposal</a></li>\n</ul>\n<h2 id=\"symbol\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#symbol\"><span>Symbol</span></a></h2>\n<ul>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-symbols.html\" target=\"_blank\" rel=\"noopener noreferrer\">Symbols in ECMAScript 6</a>: Symbol 简介</li>\n<li>MDN, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol\" target=\"_blank\" rel=\"noopener noreferrer\">Symbol</a>: Symbol 类型的详细介绍</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Symbols</a></li>\n<li>Keith Cirkel, <a href=\"http://blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaprogramming in ES6: Symbols and why they’re awesome</a>: Symbol 的深入介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/well-known-symbols-es6.html\" target=\"_blank\" rel=\"noopener noreferrer\">Customizing ES6 via well-known symbols</a></li>\n<li>Derick Bailey, <a href=\"https://derickbailey.com/2016/03/09/creating-a-true-singleton-in-node-js-with-es6-symbols/\" target=\"_blank\" rel=\"noopener noreferrer\">Creating A True Singleton In Node.js, With ES6 Symbols</a></li>\n<li>Das Surma, <a href=\"https://dassur.ma/things/reading-specs-2/\" target=\"_blank\" rel=\"noopener noreferrer\">How to read web specs Part IIa – Or: ECMAScript Symbols</a>: 介绍 Symbol 的规格</li>\n</ul>\n<h2 id=\"set-和-map\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#set-和-map\"><span>Set 和 Map</span></a></h2>\n<ul>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet\" target=\"_blank\" rel=\"noopener noreferrer\">WeakSet</a>: 介绍 WeakSet 数据结构</li>\n<li>Dwayne Charrington, <a href=\"http://ilikekillnerds.com/2015/02/what-are-weakmaps-in-es6/\" target=\"_blank\" rel=\"noopener noreferrer\">What Are Weakmaps In ES6?</a>: WeakMap 数据结构介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/01/es6-maps-sets.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: maps and sets</a>: Set 和 Map 结构的详细介绍</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/06/es6-in-depth-collections/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Collections</a>: Set 和 Map 结构的设计思想</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/08/es6-map-json.html\" target=\"_blank\" rel=\"noopener noreferrer\">Converting ES6 Maps to and from JSON</a>: 如何将 Map 与其他数据结构互相转换</li>\n</ul>\n<h2 id=\"proxy-和-reflect\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#proxy-和-reflect\"><span>Proxy 和 Reflect</span></a></h2>\n<ul>\n<li>Nicholas C. Zakas, <a href=\"http://www.nczonline.net/blog/2014/04/22/creating-defensive-objects-with-es6-proxies/\" target=\"_blank\" rel=\"noopener noreferrer\">Creating defensive objects with ES6 proxies</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-proxies.html\" target=\"_blank\" rel=\"noopener noreferrer\">Meta programming with ECMAScript 6 proxies</a>: Proxy 详解</li>\n<li>Daniel Zautner, <a href=\"http://dzautner.com/meta-programming-javascript-using-proxies/\" target=\"_blank\" rel=\"noopener noreferrer\">Meta-programming JavaScript Using Proxies</a>: 使用 Proxy 实现元编程</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/wiki\" target=\"_blank\" rel=\"noopener noreferrer\">Harmony-reflect</a>: Reflect 对象的设计目的</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/traps.html\" target=\"_blank\" rel=\"noopener noreferrer\">Proxy Traps</a>: Proxy 拦截操作一览</li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/api.html\" target=\"_blank\" rel=\"noopener noreferrer\">Reflect API</a></li>\n<li>Tom Van Cutsem, <a href=\"https://github.com/tvcutsem/harmony-reflect/blob/master/doc/handler_api.html\" target=\"_blank\" rel=\"noopener noreferrer\">Proxy Handler API</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-proxies-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Proxies in Depth</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-proxy-traps-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Proxy Traps in Depth</a></li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/more-es6-proxy-traps-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">More ES6 Proxy Traps in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/11/proxying-builtins.html\" target=\"_blank\" rel=\"noopener noreferrer\">Pitfall: not all objects can be wrapped transparently by proxies</a></li>\n<li>Bertalan Miklos, <a href=\"https://blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/\" target=\"_blank\" rel=\"noopener noreferrer\">Writing a JavaScript Framework - Data Binding with ES6 Proxies</a>: 使用 Proxy 实现观察者模式</li>\n<li>Keith Cirkel, <a href=\"https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/\" target=\"_blank\" rel=\"noopener noreferrer\">Metaprogramming in ES6: Part 2 - Reflect</a>: Reflect API 的详细介绍</li>\n</ul>\n<h2 id=\"promise-对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#promise-对象\"><span>Promise 对象</span></a></h2>\n<ul>\n<li>Jake Archibald, <a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Promises: There and back again</a></li>\n<li>Jake Archibald, <a href=\"https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\" target=\"_blank\" rel=\"noopener noreferrer\">Tasks, microtasks, queues and schedules</a></li>\n<li>Tilde, <a href=\"https://github.com/tildeio/rsvp.js\" target=\"_blank\" rel=\"noopener noreferrer\">rsvp.js</a></li>\n<li>Sandeep Panda, <a href=\"http://www.sitepoint.com/overview-javascript-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">An Overview of JavaScript Promises</a>: ES6 Promise 入门介绍</li>\n<li>Dave Atchley, <a href=\"http://www.datchley.name/es6-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Promises</a>: Promise 的语法介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/10/es6-promises-api.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 promises (2/2): the API</a>: 对 ES6 Promise 规格和用法的详细介绍</li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2015/02/promises/\" target=\"_blank\" rel=\"noopener noreferrer\">Embracing Promises in JavaScript</a>: catch 方法的例子</li>\n<li>Ronald Chen, <a href=\"https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513#.2an1he6vf\" target=\"_blank\" rel=\"noopener noreferrer\">How to escape Promise Hell</a>: 如何使用 <code v-pre>Promise.all</code> 方法的一些很好的例子</li>\n<li>Jordan Harband, <a href=\"https://github.com/ljharb/proposal-promise-try\" target=\"_blank\" rel=\"noopener noreferrer\">proposal-promise-try</a>: Promise.try() 方法的提案</li>\n<li>Sven Slootweg, <a href=\"http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/\" target=\"_blank\" rel=\"noopener noreferrer\">What is Promise.try, and why does it matter?</a>: Promise.try() 方法的优点</li>\n<li>Yehuda Katz, <a href=\"https://thefeedbackloop.xyz/tc39-promises-promises/\" target=\"_blank\" rel=\"noopener noreferrer\">TC39: Promises, Promises</a>: Promise.try() 的用处</li>\n</ul>\n<h2 id=\"iterator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#iterator\"><span>Iterator</span></a></h2>\n<ul>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators\" target=\"_blank\" rel=\"noopener noreferrer\">Iterators and generators</a></li>\n<li>Mozilla Developer Network, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol\" target=\"_blank\" rel=\"noopener noreferrer\">The Iterator protocol</a></li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/04/es6-in-depth-iterators-and-the-for-of-loop/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Iterators and the for-of loop</a>: 遍历器与 for...of 循环的介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2013/06/iterators-generators.html\" target=\"_blank\" rel=\"noopener noreferrer\">Iterators and generators in ECMAScript 6</a>: 探讨 Iterator 和 Generator 的设计目的</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-iteration.html\" target=\"_blank\" rel=\"noopener noreferrer\">Iterables and iterators in ECMAScript 6</a>: Iterator 的详细介绍</li>\n<li>Kyle Simpson, <a href=\"http://blog.getify.com/iterating-es6-numbers/\" target=\"_blank\" rel=\"noopener noreferrer\">Iterating ES6 Numbers</a>: 在数值对象上部署遍历器</li>\n</ul>\n<h2 id=\"generator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#generator\"><span>Generator</span></a></h2>\n<ul>\n<li>Matt Baker, <a href=\"http://flippinawesome.org/2014/02/10/replacing-callbacks-with-es6-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Replacing callbacks with ES6 Generators</a></li>\n<li>Steven Sanderson, <a href=\"http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Experiments with Koa and JavaScript Generators</a></li>\n<li>jmar777, <a href=\"http://devsmash.com/blog/whats-the-big-deal-with-generators\" target=\"_blank\" rel=\"noopener noreferrer\">What’s the Big Deal with Generators?</a></li>\n<li>Marc Harter, <a href=\"http://strongloop.com/strongblog/how-to-generators-node-js-yield-use-cases/\" target=\"_blank\" rel=\"noopener noreferrer\">Generators in Node.js: Common Misconceptions and Three Good Use Cases</a>: 讨论 Generator 函数的作用</li>\n<li>StackOverflow, <a href=\"http://stackoverflow.com/questions/20977379/es6-yield-what-happens-to-the-arguments-of-the-first-call-next\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 yield : what happens to the arguments of the first call next()?</a>: 第一次使用 next 方法时不能带有参数</li>\n<li>Kyle Simpson, <a href=\"http://davidwalsh.name/es6-generators\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Generators: Complete Series</a>: 由浅入深探讨 Generator 的系列文章，共四篇</li>\n<li>Gajus Kuizinas, <a href=\"http://gajus.com/blog/2/the-definetive-guide-to-the-javascript-generators\" target=\"_blank\" rel=\"noopener noreferrer\">The Definitive Guide to the JavaScript Generators</a>: 对 Generator 的综合介绍</li>\n<li>Jan Krems, <a href=\"https://gist.github.com/jkrems/04a2b34fb9893e4c2b5c\" target=\"_blank\" rel=\"noopener noreferrer\">Generators Are Like Arrays</a>: 讨论 Generator 可以被当作数据结构看待</li>\n<li>Harold Cooper, <a href=\"http://syzygy.st/javascript-coroutines/\" target=\"_blank\" rel=\"noopener noreferrer\">Coroutine Event Loops in JavaScript</a>: Generator 用于实现状态机</li>\n<li>Ruslan Ismagilov, <a href=\"https://github.com/isRuslan/learn-generators\" target=\"_blank\" rel=\"noopener noreferrer\">learn-generators</a>: 编程练习，共 6 道题</li>\n<li>Steven Sanderson, <a href=\"http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/\" target=\"_blank\" rel=\"noopener noreferrer\">Experiments with Koa and JavaScript Generators</a>: Generator 入门介绍，以 Koa 框架为例</li>\n<li>Mahdi Dibaiee, <a href=\"http://dibaiee.ir/es7-array-generator-comprehensions/\" target=\"_blank\" rel=\"noopener noreferrer\">ES2016 Array and Generator comprehensions</a>: ES2016 的 Generator 推导</li>\n<li>Nicolas Bevacqua, <a href=\"http://ponyfoo.com/articles/es6-generators-in-depth\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Generators in Depth</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/03/es6-generators.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 generators in depth</a>: Generator 规格的详尽讲解</li>\n<li>Derick Bailey, <a href=\"https://derickbailey.com/2015/10/05/using-es6-generators-to-short-circuit-hierarchical-data-iteration/\" target=\"_blank\" rel=\"noopener noreferrer\">Using ES6 Generators To Short-Circuit Hierarchical Data Iteration</a>: 使用 for...of 循环完成预定的操作步骤</li>\n</ul>\n<h2 id=\"异步操作和-async-函数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步操作和-async-函数\"><span>异步操作和 Async 函数</span></a></h2>\n<ul>\n<li>Luke Hoban, <a href=\"https://github.com/lukehoban/ecmascript-asyncawait\" target=\"_blank\" rel=\"noopener noreferrer\">Async Functions for ECMAScript</a>: Async 函数的设计思想，与 Promise、Gernerator 函数的关系</li>\n<li>Jafar Husain, <a href=\"https://github.com/jhusain/asyncgenerator\" target=\"_blank\" rel=\"noopener noreferrer\">Asynchronous Generators for ES2016</a>: Async 函数的深入讨论</li>\n<li>Nolan Lawson, <a href=\"http://pouchdb.com/2015/03/05/taming-the-async-beast-with-es7.html\" target=\"_blank\" rel=\"noopener noreferrer\">Taming the asynchronous beast with ES2016</a>: async 函数通俗的实例讲解</li>\n<li>Jafar Husain, <a href=\"https://docs.google.com/file/d/0B4PVbLpUIdzoMDR5dWstRllXblU/view?sle=true\" target=\"_blank\" rel=\"noopener noreferrer\">Async Generators</a>: 对 async 与 Generator 混合使用的一些讨论</li>\n<li>Daniel Brain, <a href=\"https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8\" target=\"_blank\" rel=\"noopener noreferrer\">Understand promises before you start using async/await</a>: 讨论 async/await 与 Promise 的关系</li>\n<li>Jake Archibald, <a href=\"https://developers.google.com/web/fundamentals/getting-started/primers/async-functions\" target=\"_blank\" rel=\"noopener noreferrer\">Async functions - making promises friendly</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2016/10/asynchronous-iteration.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: asynchronous iteration</a>: 异步遍历器的详细介绍</li>\n<li>Dima Grossman, <a href=\"http://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/\" target=\"_blank\" rel=\"noopener noreferrer\">How to write async await without try-catch blocks in JavaScript</a>: 除了 try/catch 以外的 async 函数内部捕捉错误的方法</li>\n<li>Mostafa Gaafa, <a href=\"https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9\" target=\"_blank\" rel=\"noopener noreferrer\">6 Reasons Why JavaScript’s Async/Await Blows Promises Away</a>: Async 函数的 6 个好处</li>\n</ul>\n<h2 id=\"class\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#class\"><span>Class</span></a></h2>\n<ul>\n<li>Sebastian Porto, <a href=\"https://reinteractive.net/posts/235-es6-classes-and-javascript-prototypes\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 classes and JavaScript prototypes</a>: ES6 Class 的写法与 ES5 Prototype 的写法对比</li>\n<li>Jack Franklin, <a href=\"http://javascriptplayground.com/blog/2014/07/introduction-to-es6-classes-tutorial/\" target=\"_blank\" rel=\"noopener noreferrer\">An introduction to ES6 classes</a>: ES6 class 的入门介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/12/es6-oop.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6: new OOP features besides classes</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/02/es6-classes-final.html\" target=\"_blank\" rel=\"noopener noreferrer\">Classes in ECMAScript 6 (final semantics)</a>: Class 语法的详细介绍和设计思想分析</li>\n<li>Eric Faust, <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-subclassing/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Subclassing</a>: Class 语法的深入介绍</li>\n<li>Nicolás Bevacqua, <a href=\"https://ponyfoo.com/articles/binding-methods-to-class-instance-objects\" target=\"_blank\" rel=\"noopener noreferrer\">Binding Methods to Class Instance Objects</a>: 如何绑定类的实例中的 this</li>\n<li>Jamie Kyle, <a href=\"https://jamie.build/javascripts-new-private-class-fields.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript’s new #private class fields</a>: 私有属性的介绍。</li>\n</ul>\n<h2 id=\"decorator\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#decorator\"><span>Decorator</span></a></h2>\n<ul>\n<li>Maximiliano Fierro, <a href=\"http://elmasse.github.io/js/decorators-bindings-es7.html\" target=\"_blank\" rel=\"noopener noreferrer\">Declarative vs Imperative</a>: Decorators 和 Mixin 介绍</li>\n<li>Justin Fagnani, <a href=\"http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/\" target=\"_blank\" rel=\"noopener noreferrer\">&quot;Real&quot; Mixins with JavaScript Classes</a>: 使用类的继承实现 Mixin</li>\n<li>Addy Osmani, <a href=\"https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841\" target=\"_blank\" rel=\"noopener noreferrer\">Exploring ES2016 Decorators</a>: Decorator 的深入介绍</li>\n<li>Sebastian McKenzie, <a href=\"https://github.com/wycats/javascript-decorators/issues/4\" target=\"_blank\" rel=\"noopener noreferrer\">Allow decorators for functions as well</a>: 为什么修饰器不能用于函数</li>\n<li>Maximiliano Fierro, <a href=\"http://cocktailjs.github.io/blog/traits-with-es7-decorators.html\" target=\"_blank\" rel=\"noopener noreferrer\">Traits with ES2016 Decorators</a>: Trait 的用法介绍</li>\n<li>Jonathan Creamer: <a href=\"http://jonathancreamer.com/using-es2016-decorators-to-publish-on-an-event-bus/\" target=\"_blank\" rel=\"noopener noreferrer\">Using ES2016 Decorators to Publish on an Event Bus</a>: 使用修饰器实现自动发布事件</li>\n</ul>\n<h2 id=\"module\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#module\"><span>Module</span></a></h2>\n<ul>\n<li>Jack Franklin, <a href=\"http://24ways.org/2014/javascript-modules-the-es6-way/\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Modules the ES6 Way</a>: ES6 模块入门</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2014/09/es6-modules-final.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 modules: the final syntax</a>: ES6 模块的介绍，以及与 CommonJS 规格的详细比较</li>\n<li>Dave Herman, <a href=\"http://calculist.org/blog/2012/06/29/static-module-resolution/\" target=\"_blank\" rel=\"noopener noreferrer\">Static module resolution</a>: ES6 模块的静态化设计思想</li>\n<li>Jason Orendorff, <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 In Depth: Modules</a>: ES6 模块设计思想的介绍</li>\n<li>Ben Newman, <a href=\"http://benjamn.github.io/empirenode-2015/#/\" target=\"_blank\" rel=\"noopener noreferrer\">The Importance of import and export</a>: ES6 模块的设计思想</li>\n<li>ESDiscuss, <a href=\"https://esdiscuss.org/topic/why-is-export-default-var-a-1-invalid-syntax\" target=\"_blank\" rel=\"noopener noreferrer\">Why is &quot;export default var a = 1;&quot; invalid syntax?</a></li>\n<li>Bradley Meck, <a href=\"https://github.com/nodejs/node-eps/blob/master/002-es6-modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Interoperability</a>: 介绍 Node.js 如何处理 ES6 语法加载 CommonJS 模块</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2017/01/babel-esm-spec-mode.html\" target=\"_blank\" rel=\"noopener noreferrer\">Making transpiled ES modules more spec-compliant</a>: ES6 模块编译成 CommonJS 模块的详细介绍</li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2017/01/import-operator.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: import() – dynamically importing ES modules</a>: import() 的用法</li>\n<li>Node.js EPS, <a href=\"https://github.com/nodejs/node-eps/blob/master/002-es-modules.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES Module Interoperability</a>: Node.js 对 ES6 模块的处理规格</li>\n</ul>\n<h2 id=\"二进制数组\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#二进制数组\"><span>二进制数组</span></a></h2>\n<ul>\n<li>Ilmari Heikkinen, <a href=\"http://www.html5rocks.com/en/tutorials/webgl/typed_arrays/\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Arrays: Binary Data in the Browser</a></li>\n<li>Khronos, <a href=\"http://www.khronos.org/registry/typedarray/specs/latest/\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Array Specification</a></li>\n<li>Ian Elliot, <a href=\"http://www.i-programmer.info/projects/36-web/6234-reading-a-bmp-file-in-javascript.html\" target=\"_blank\" rel=\"noopener noreferrer\">Reading A BMP File In JavaScript</a></li>\n<li>Renato Mangini, <a href=\"http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String\" target=\"_blank\" rel=\"noopener noreferrer\">How to convert ArrayBuffer to and from String</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2015/09/typed-arrays.html\" target=\"_blank\" rel=\"noopener noreferrer\">Typed Arrays in ECMAScript 6</a></li>\n<li>Axel Rauschmayer, <a href=\"http://2ality.com/2017/01/shared-array-buffer.html\" target=\"_blank\" rel=\"noopener noreferrer\">ES proposal: Shared memory and atomics</a></li>\n<li>Lin Clark, <a href=\"https://hacks.mozilla.org/2017/06/avoiding-race-conditions-in-sharedarraybuffers-with-atomics/\" target=\"_blank\" rel=\"noopener noreferrer\">Avoiding race conditions in SharedArrayBuffers with Atomics</a>: Atomics 对象使用场景的解释</li>\n<li>Lars T Hansen, <a href=\"https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.html\" target=\"_blank\" rel=\"noopener noreferrer\">Shared memory - a brief tutorial</a></li>\n</ul>\n<h2 id=\"simd\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#simd\"><span>SIMD</span></a></h2>\n<ul>\n<li>TC39, <a href=\"https://docs.google.com/presentation/d/1MY9NHrHmL7ma7C8dyNXvmYNNGgVmmxXk8ZIiQtPlfH4/edit#slide=id.p19\" target=\"_blank\" rel=\"noopener noreferrer\">SIMD.js Stage 2</a></li>\n<li>MDN, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SIMD\" target=\"_blank\" rel=\"noopener noreferrer\">SIMD</a></li>\n<li>TC39, <a href=\"https://github.com/tc39/ecmascript_simd\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript SIMD</a></li>\n<li>Axel Rauschmayer, <a href=\"http://www.2ality.com/2013/12/simd-js.html\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript gains support for SIMD</a></li>\n</ul>\n<h2 id=\"工具\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#工具\"><span>工具</span></a></h2>\n<ul>\n<li>Babel, <a href=\"https://github.com/thejameskyle/babel-handbook/tree/master/translations/en\" target=\"_blank\" rel=\"noopener noreferrer\">Babel Handbook</a>: Babel 的用法介绍</li>\n<li>Google, <a href=\"https://github.com/google/traceur-compiler\" target=\"_blank\" rel=\"noopener noreferrer\">traceur-compiler</a>: Traceur 编译器</li>\n<li>Casper Beyer, <a href=\"http://caspervonb.github.io/2014/03/05/ecmascript6-features-and-tools.html\" target=\"_blank\" rel=\"noopener noreferrer\">ECMAScript 6 Features and Tools</a></li>\n<li>Stoyan Stefanov, <a href=\"http://www.phpied.com/writing-es6-today-with-jstransform/\" target=\"_blank\" rel=\"noopener noreferrer\">Writing ES6 today with jstransform</a></li>\n<li>ES6 Module Loader, <a href=\"https://github.com/ModuleLoader/es6-module-loader\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Loader Polyfill</a>: 在浏览器和 node.js 加载 ES6 模块的一个库，文档里对 ES6 模块有详细解释</li>\n<li>Paul Miller, <a href=\"https://github.com/paulmillr/es6-shim\" target=\"_blank\" rel=\"noopener noreferrer\">es6-shim</a>: 一个针对老式浏览器，模拟 ES6 部分功能的垫片库(shim)</li>\n<li>army8735, <a href=\"https://github.com/army8735/jsdc\" target=\"_blank\" rel=\"noopener noreferrer\">JavaScript Downcast</a>: 国产的 ES6 到 ES5 的转码器</li>\n<li>esnext, <a href=\"https://github.com/esnext/es6-module-transpiler\" target=\"_blank\" rel=\"noopener noreferrer\">ES6 Module Transpiler</a>: 基于 node.js 的将 ES6 模块转为 ES5 代码的命令行工具</li>\n<li>Sebastian McKenzie, <a href=\"http://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">BabelJS</a>: ES6 转译器</li>\n<li>SystemJS, <a href=\"https://github.com/systemjs/systemjs\" target=\"_blank\" rel=\"noopener noreferrer\">SystemJS</a>: 在浏览器中加载 AMD、CJS、ES6 模块的一个垫片库</li>\n<li>Modernizr, <a href=\"https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills#ecmascript-6-harmony\" target=\"_blank\" rel=\"noopener noreferrer\">HTML5 Cross Browser Polyfills</a>: ES6 垫片库清单</li>\n<li>Facebook, <a href=\"https://github.com/facebook/regenerator\" target=\"_blank\" rel=\"noopener noreferrer\">regenerator</a>: 将 Generator 函数转为 ES5 的转码器</li>\n</ul>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n# 参考链接\n\n## 官方文件\n\n- [ECMAScript® 2015 Language Specification](https://www.ecma-international.org/ecma-262/6.0/index.html): ECMAScript 2015 规格\n- [ECMAScript® 2016 Language Specification](https://www.ecma-international.org/ecma-262/7.0/): ECMAScript 2016 规格\n- [ECMAScript® 2017 Language Specification](https://tc39.github.io/ecma262/): ECMAScript 2017 规格(草案)\n- [ECMAScript Current Proposals](https://github.com/tc39/ecma262): ECMAScript 当前的所有提案\n- [ECMAScript Active Proposals](https://github.com/tc39/proposals): 已经进入正式流程的提案\n- [ECMAScript proposals](https://github.com/hemanth/es-next): 从阶段 0 到阶段 4 的所有提案列表\n- [TC39 meeting agendas](https://github.com/tc39/agendas): TC39 委员会历年的会议记录\n- [ECMAScript Daily](https://ecmascript-daily.github.io/): TC39 委员会的动态\n- [The TC39 Process](https://tc39.github.io/process-document/): 提案进入正式规格的流程\n- [TC39: A Process Sketch, Stages 0 and 1](https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/): Stage 0 和 Stage 1 的含义\n- [TC39 Process Sketch, Stage 2](https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/): Stage 2 的含义\n\n## 综合介绍\n\n- Axel Rauschmayer, [Exploring ES6: Upgrade to the next version of JavaScript](https://exploringjs.com/es6/): ES6 的专著，本书的许多代码实例来自该书\n- Sayanee Basu, [Use ECMAScript 6 Today](http://net.tutsplus.com/articles/news/ecmascript-6-today/)\n- Ariya Hidayat, [Toward Modern Web Apps with ECMAScript 6](http://www.sencha.com/blog/toward-modern-web-apps-with-ecmascript-6/)\n- Dale Schouten, [10 Ecmascript-6 tricks you can perform right now](http://html5hub.com/10-ecmascript-6-tricks-you-can-perform-right-now/)\n- Colin Toh, [Lightweight ES6 Features That Pack A Punch](http://colintoh.com/blog/lightweight-es6-features): ES6 的一些“轻量级”的特性介绍\n- Domenic Denicola, [ES6: The Awesome Parts](http://www.slideshare.net/domenicdenicola/es6-the-awesome-parts)\n- Nicholas C. Zakas, [Understanding ECMAScript 6](https://github.com/nzakas/understandinges6)\n- Justin Drake, [ECMAScript 6 in Node.JS](https://github.com/JustinDrake/node-es6-examples)\n- Ryan Dao, [Summary of ECMAScript 6 major features](http://ryandao.net/portal/content/summary-ecmascript-6-major-features)\n- Luke Hoban, [ES6 features](https://github.com/lukehoban/es6features): ES6 新语法点的罗列\n- Traceur-compiler, [Language Features](https://github.com/google/traceur-compiler/wiki/LanguageFeatures): Traceur 文档列出的一些 ES6 例子\n- Axel Rauschmayer, [ECMAScript 6: what’s next for JavaScript?](https://speakerdeck.com/rauschma/ecmascript-6-whats-next-for-javascript-august-2014): 关于 ES6 新增语法的综合介绍，有很多例子\n- Axel Rauschmayer, [Getting started with ECMAScript 6](http://www.2ality.com/2015/08/getting-started-es6.html): ES6 语法点的综合介绍\n- Toby Ho, [ES6 in io.js](http://davidwalsh.name/es6-io)\n- Guillermo Rauch, [ECMAScript 6](http://rauchg.com/2015/ecmascript-6/)\n- Charles King, [The power of ECMAScript 6](http://charlesbking.com/power_of_es6/#/)\n- Benjamin De Cock, [Frontend Guidelines](https://github.com/bendc/frontend-guidelines): ES6 最佳实践\n- Jani Hartikainen, [ES6: What are the benefits of the new features in practice?](http://codeutopia.net/blog/2015/01/06/es6-what-are-the-benefits-of-the-new-features-in-practice/)\n- kangax, [JavaScript quiz. ES6 edition](http://perfectionkills.com/javascript-quiz-es6/): ES6 小测试\n- Jeremy Fairbank, [HTML5DevConf ES2016 and Beyond!](https://speakerdeck.com/jfairbank/html5devconf-es7-and-beyond): ES2016 新增语法点介绍\n- Timothy Gu, [How to Read the ECMAScript Specification](https://timothygu.me/es-howto/): 如何读懂 ES6 规格\n\n## let 和 const\n\n- Kyle Simpson, [For and against let](http://davidwalsh.name/for-and-against-let): 讨论 let 命令的作用域\n- kangax, [Why typeof is no longer “safe”](http://es-discourse.com/t/why-typeof-is-no-longer-safe/15): 讨论在块级作用域内，let 命令的变量声明和赋值的行为\n- Axel Rauschmayer, [Variables and scoping in ECMAScript 6](http://www.2ality.com/2015/02/es6-scoping.html): 讨论块级作用域与 let 和 const 的行为\n- Nicolas Bevacqua, [ES6 Let, Const and the “Temporal Dead Zone” (TDZ) in Depth](http://ponyfoo.com/articles/es6-let-const-and-temporal-dead-zone-in-depth)\n- acorn, [Function statements in strict mode](https://github.com/ternjs/acorn/issues/118): 块级作用域对严格模式的函数声明的影响\n- Axel Rauschmayer, [ES proposal: global](http://www.2ality.com/2016/09/global.html): 顶层对象 `global`\n\n## 解构赋值\n\n- Nick Fitzgerald, [Destructuring Assignment in ECMAScript 6](http://fitzgeraldnick.com/weblog/50/): 详细介绍解构赋值的用法\n- Nicholas C. Zakas, [ECMAScript 6 destructuring gotcha](https://www.nczonline.net/blog/2015/10/ecmascript-6-destructuring-gotcha/)\n\n## 字符串\n\n- Nicholas C. Zakas, [A critical review of ECMAScript 6 quasi-literals](http://www.nczonline.net/blog/2012/08/01/a-critical-review-of-ecmascript-6-quasi-literals/)\n- Mozilla Developer Network, [Template strings](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings)\n- Addy Osmani, [Getting Literal With ES6 Template Strings](http://updates.html5rocks.com/2015/01/ES6-Template-Strings): 模板字符串的介绍\n- Blake Winton, [ES6 Templates](https://weblog.latte.ca/blake/tech/firefox/templates.html): 模板字符串的介绍\n- Peter Jaszkowiak, [How to write a template compiler in JavaScript](https://medium.com/@PitaJ/how-to-write-a-template-compiler-in-javascript-f174df6f32f): 使用模板字符串，编写一个模板编译函数\n- Axel Rauschmayer, [ES.stage3: string padding](http://www.2ality.com/2015/11/string-padding.html)\n\n## 正则\n\n- Mathias Bynens, [Unicode-aware regular expressions in ES6](https://mathiasbynens.be/notes/es6-unicode-regex): 详细介绍正则表达式的 u 修饰符\n- Axel Rauschmayer, [New regular expression features in ECMAScript 6](http://www.2ality.com/2015/07/regexp-es6.html): ES6 正则特性的详细介绍\n- Yang Guo, [Regular expression lookbehind assertions](http://v8project.blogspot.jp/2016/02/regexp-lookbehind-assertions.html): 介绍后行断言\n- Axel Rauschmayer, [ES proposal: regular expression named capture groups](http://2ality.com/2017/05/regexp-named-capture-groups.html): 具名组匹配的介绍\n- Mathias Bynens, [ECMAScript regular expressions are getting better!](https://mathiasbynens.be/notes/es-regexp-proposals): 介绍 ES2018 添加的多项正则语法\n\n## 数值\n\n- Nicolas Bevacqua, [ES6 Number Improvements in Depth](http://ponyfoo.com/articles/es6-number-improvements-in-depth)\n- Axel Rauschmayer, [ES proposal: arbitrary precision integers](http://2ality.com/2017/03/es-integer.html)\n\n## 数组\n\n- Axel Rauschmayer, [ECMAScript 6’s new array methods](http://www.2ality.com/2014/05/es6-array-methods.html): 对 ES6 新增的数组方法的全面介绍\n- TC39, [Array.prototype.includes](https://github.com/tc39/Array.prototype.includes/): 数组的 includes 方法的规格\n- Axel Rauschmayer, [ECMAScript 6: holes in Arrays](http://www.2ality.com/2015/09/holes-arrays-es6.html): 数组的空位问题\n\n## 函数\n\n- Nicholas C. Zakas, [Understanding ECMAScript 6 arrow functions](http://www.nczonline.net/blog/2013/09/10/understanding-ecmascript-6-arrow-functions/)\n- Jack Franklin, [Real Life ES6 - Arrow Functions](http://javascriptplayground.com/blog/2014/04/real-life-es6-arrow-fn/)\n- Axel Rauschmayer, [Handling required parameters in ECMAScript 6](http://www.2ality.com/2014/04/required-parameters-es6.html)\n- Dmitry Soshnikov, [ES6 Notes: Default values of parameters](http://dmitrysoshnikov.com/ecmascript/es6-notes-default-values-of-parameters/): 介绍参数的默认值\n- Ragan Wald, [Destructuring and Recursion in ES6](http://raganwald.com/2015/02/02/destructuring.html): rest 参数和扩展运算符的详细介绍\n- Axel Rauschmayer, [The names of functions in ES6](http://www.2ality.com/2015/09/function-names-es6.html): 函数的 name 属性的详细介绍\n- Kyle Simpson, [Arrow This](http://blog.getify.com/arrow-this/): 箭头函数并没有自己的 this\n- Derick Bailey, [Do ES6 Arrow Functions Really Solve “this” In JavaScript?](http://derickbailey.com/2015/09/28/do-es6-arrow-functions-really-solve-this-in-javascript/): 使用箭头函数处理 this 指向，必须非常小心\n- Mark McDonnell, [Understanding recursion in functional JavaScript programming](http://www.integralist.co.uk/posts/js-recursion.html): 如何自己实现尾递归优化\n- Nicholas C. Zakas, [The ECMAScript 2016 change you probably don’t know](https://www.nczonline.net/blog/2016/10/the-ecmascript-2016-change-you-probably-dont-know/): 使用参数默认值时，不能在函数内部显式开启严格模式\n- Axel Rauschmayer, [ES proposal: optional catch binding](http://2ality.com/2017/08/optional-catch-binding.html)\n\n## 对象\n\n- Addy Osmani, [Data-binding Revolutions with Object.observe()](http://www.html5rocks.com/en/tutorials/es7/observe/): 介绍 Object.observe()的概念\n- Sella Rafaeli, [Native JavaScript Data-Binding](http://www.sellarafaeli.com/blog/native_javascript_data_binding): 如何使用 Object.observe 方法，实现数据对象与 DOM 对象的双向绑定\n- Axel Rauschmayer, [`__proto__` in ECMAScript 6](http://www.2ality.com/2015/09/proto-es6.html)\n- Axel Rauschmayer, [Enumerability in ECMAScript 6](http://www.2ality.com/2015/10/enumerability-es6.html)\n- Axel Rauschmayer, [ES proposal: Object.getOwnPropertyDescriptors()](http://www.2ality.com/2016/02/object-getownpropertydescriptors.html)\n- TC39, [Object.getOwnPropertyDescriptors Proposal](https://github.com/tc39/proposal-object-getownpropertydescriptors)\n\n## Symbol\n\n- Axel Rauschmayer, [Symbols in ECMAScript 6](http://www.2ality.com/2014/12/es6-symbols.html): Symbol 简介\n- MDN, [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol): Symbol 类型的详细介绍\n- Jason Orendorff, [ES6 In Depth: Symbols](https://hacks.mozilla.org/2015/06/es6-in-depth-symbols/)\n- Keith Cirkel, [Metaprogramming in ES6: Symbols and why they’re awesome](http://blog.keithcirkel.co.uk/metaprogramming-in-es6-symbols/): Symbol 的深入介绍\n- Axel Rauschmayer, [Customizing ES6 via well-known symbols](http://www.2ality.com/2015/09/well-known-symbols-es6.html)\n- Derick Bailey, [Creating A True Singleton In Node.js, With ES6 Symbols](https://derickbailey.com/2016/03/09/creating-a-true-singleton-in-node-js-with-es6-symbols/)\n- Das Surma, [How to read web specs Part IIa – Or: ECMAScript Symbols](https://dassur.ma/things/reading-specs-2/): 介绍 Symbol 的规格\n\n## Set 和 Map\n\n- Mozilla Developer Network, [WeakSet](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet): 介绍 WeakSet 数据结构\n- Dwayne Charrington, [What Are Weakmaps In ES6?](http://ilikekillnerds.com/2015/02/what-are-weakmaps-in-es6/): WeakMap 数据结构介绍\n- Axel Rauschmayer, [ECMAScript 6: maps and sets](http://www.2ality.com/2015/01/es6-maps-sets.html): Set 和 Map 结构的详细介绍\n- Jason Orendorff, [ES6 In Depth: Collections](https://hacks.mozilla.org/2015/06/es6-in-depth-collections/): Set 和 Map 结构的设计思想\n- Axel Rauschmayer, [Converting ES6 Maps to and from JSON](http://www.2ality.com/2015/08/es6-map-json.html): 如何将 Map 与其他数据结构互相转换\n\n## Proxy 和 Reflect\n\n- Nicholas C. Zakas, [Creating defensive objects with ES6 proxies](http://www.nczonline.net/blog/2014/04/22/creating-defensive-objects-with-es6-proxies/)\n- Axel Rauschmayer, [Meta programming with ECMAScript 6 proxies](http://www.2ality.com/2014/12/es6-proxies.html): Proxy 详解\n- Daniel Zautner, [Meta-programming JavaScript Using Proxies](http://dzautner.com/meta-programming-javascript-using-proxies/): 使用 Proxy 实现元编程\n- Tom Van Cutsem, [Harmony-reflect](https://github.com/tvcutsem/harmony-reflect/wiki): Reflect 对象的设计目的\n- Tom Van Cutsem, [Proxy Traps](https://github.com/tvcutsem/harmony-reflect/blob/master/doc/traps.html): Proxy 拦截操作一览\n- Tom Van Cutsem, [Reflect API](https://github.com/tvcutsem/harmony-reflect/blob/master/doc/api.html)\n- Tom Van Cutsem, [Proxy Handler API](https://github.com/tvcutsem/harmony-reflect/blob/master/doc/handler_api.html)\n- Nicolas Bevacqua, [ES6 Proxies in Depth](http://ponyfoo.com/articles/es6-proxies-in-depth)\n- Nicolas Bevacqua, [ES6 Proxy Traps in Depth](http://ponyfoo.com/articles/es6-proxy-traps-in-depth)\n- Nicolas Bevacqua, [More ES6 Proxy Traps in Depth](http://ponyfoo.com/articles/more-es6-proxy-traps-in-depth)\n- Axel Rauschmayer, [Pitfall: not all objects can be wrapped transparently by proxies](http://www.2ality.com/2016/11/proxying-builtins.html)\n- Bertalan Miklos, [Writing a JavaScript Framework - Data Binding with ES6 Proxies](https://blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/): 使用 Proxy 实现观察者模式\n- Keith Cirkel, [Metaprogramming in ES6: Part 2 - Reflect](https://www.keithcirkel.co.uk/metaprogramming-in-es6-part-2-reflect/): Reflect API 的详细介绍\n\n## Promise 对象\n\n- Jake Archibald, [JavaScript Promises: There and back again](http://www.html5rocks.com/en/tutorials/es6/promises/)\n- Jake Archibald, [Tasks, microtasks, queues and schedules](https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/)\n- Tilde, [rsvp.js](https://github.com/tildeio/rsvp.js)\n- Sandeep Panda, [An Overview of JavaScript Promises](http://www.sitepoint.com/overview-javascript-promises/): ES6 Promise 入门介绍\n- Dave Atchley, [ES6 Promises](http://www.datchley.name/es6-promises/): Promise 的语法介绍\n- Axel Rauschmayer, [ECMAScript 6 promises (2/2): the API](http://www.2ality.com/2014/10/es6-promises-api.html): 对 ES6 Promise 规格和用法的详细介绍\n- Jack Franklin, [Embracing Promises in JavaScript](http://javascriptplayground.com/blog/2015/02/promises/): catch 方法的例子\n- Ronald Chen, [How to escape Promise Hell](https://medium.com/@pyrolistical/how-to-get-out-of-promise-hell-8c20e0ab0513#.2an1he6vf): 如何使用 `Promise.all` 方法的一些很好的例子\n- Jordan Harband, [proposal-promise-try](https://github.com/ljharb/proposal-promise-try): Promise.try() 方法的提案\n- Sven Slootweg, [What is Promise.try, and why does it matter?](http://cryto.net/~joepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/): Promise.try() 方法的优点\n- Yehuda Katz, [TC39: Promises, Promises](https://thefeedbackloop.xyz/tc39-promises-promises/): Promise.try() 的用处\n\n## Iterator\n\n- Mozilla Developer Network, [Iterators and generators](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators)\n- Mozilla Developer Network, [The Iterator protocol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol)\n- Jason Orendorff, [ES6 In Depth: Iterators and the for-of loop](https://hacks.mozilla.org/2015/04/es6-in-depth-iterators-and-the-for-of-loop/): 遍历器与 for...of 循环的介绍\n- Axel Rauschmayer, [Iterators and generators in ECMAScript 6](http://www.2ality.com/2013/06/iterators-generators.html): 探讨 Iterator 和 Generator 的设计目的\n- Axel Rauschmayer, [Iterables and iterators in ECMAScript 6](http://www.2ality.com/2015/02/es6-iteration.html): Iterator 的详细介绍\n- Kyle Simpson, [Iterating ES6 Numbers](http://blog.getify.com/iterating-es6-numbers/): 在数值对象上部署遍历器\n\n## Generator\n\n- Matt Baker, [Replacing callbacks with ES6 Generators](http://flippinawesome.org/2014/02/10/replacing-callbacks-with-es6-generators/)\n- Steven Sanderson, [Experiments with Koa and JavaScript Generators](http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/)\n- jmar777, [What’s the Big Deal with Generators?](http://devsmash.com/blog/whats-the-big-deal-with-generators)\n- Marc Harter, [Generators in Node.js: Common Misconceptions and Three Good Use Cases](http://strongloop.com/strongblog/how-to-generators-node-js-yield-use-cases/): 讨论 Generator 函数的作用\n- StackOverflow, [ES6 yield : what happens to the arguments of the first call next()?](http://stackoverflow.com/questions/20977379/es6-yield-what-happens-to-the-arguments-of-the-first-call-next): 第一次使用 next 方法时不能带有参数\n- Kyle Simpson, [ES6 Generators: Complete Series](http://davidwalsh.name/es6-generators): 由浅入深探讨 Generator 的系列文章，共四篇\n- Gajus Kuizinas, [The Definitive Guide to the JavaScript Generators](http://gajus.com/blog/2/the-definetive-guide-to-the-javascript-generators): 对 Generator 的综合介绍\n- Jan Krems, [Generators Are Like Arrays](https://gist.github.com/jkrems/04a2b34fb9893e4c2b5c): 讨论 Generator 可以被当作数据结构看待\n- Harold Cooper, [Coroutine Event Loops in JavaScript](http://syzygy.st/javascript-coroutines/): Generator 用于实现状态机\n- Ruslan Ismagilov, [learn-generators](https://github.com/isRuslan/learn-generators): 编程练习，共 6 道题\n- Steven Sanderson, [Experiments with Koa and JavaScript Generators](http://blog.stevensanderson.com/2013/12/21/experiments-with-koa-and-javascript-generators/): Generator 入门介绍，以 Koa 框架为例\n- Mahdi Dibaiee, [ES2016 Array and Generator comprehensions](http://dibaiee.ir/es7-array-generator-comprehensions/): ES2016 的 Generator 推导\n- Nicolas Bevacqua, [ES6 Generators in Depth](http://ponyfoo.com/articles/es6-generators-in-depth)\n- Axel Rauschmayer, [ES6 generators in depth](http://www.2ality.com/2015/03/es6-generators.html): Generator 规格的详尽讲解\n- Derick Bailey, [Using ES6 Generators To Short-Circuit Hierarchical Data Iteration](https://derickbailey.com/2015/10/05/using-es6-generators-to-short-circuit-hierarchical-data-iteration/): 使用 for...of 循环完成预定的操作步骤\n\n## 异步操作和 Async 函数\n\n- Luke Hoban, [Async Functions for ECMAScript](https://github.com/lukehoban/ecmascript-asyncawait): Async 函数的设计思想，与 Promise、Gernerator 函数的关系\n- Jafar Husain, [Asynchronous Generators for ES2016](https://github.com/jhusain/asyncgenerator): Async 函数的深入讨论\n- Nolan Lawson, [Taming the asynchronous beast with ES2016](http://pouchdb.com/2015/03/05/taming-the-async-beast-with-es7.html): async 函数通俗的实例讲解\n- Jafar Husain, [Async Generators](https://docs.google.com/file/d/0B4PVbLpUIdzoMDR5dWstRllXblU/view?sle=true): 对 async 与 Generator 混合使用的一些讨论\n- Daniel Brain, [Understand promises before you start using async/await](https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8): 讨论 async/await 与 Promise 的关系\n- Jake Archibald, [Async functions - making promises friendly](https://developers.google.com/web/fundamentals/getting-started/primers/async-functions)\n- Axel Rauschmayer, [ES proposal: asynchronous iteration](http://www.2ality.com/2016/10/asynchronous-iteration.html): 异步遍历器的详细介绍\n- Dima Grossman, [How to write async await without try-catch blocks in JavaScript](http://blog.grossman.io/how-to-write-async-await-without-try-catch-blocks-in-javascript/): 除了 try/catch 以外的 async 函数内部捕捉错误的方法\n- Mostafa Gaafa, [6 Reasons Why JavaScript’s Async/Await Blows Promises Away](https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9): Async 函数的 6 个好处\n\n## Class\n\n- Sebastian Porto, [ES6 classes and JavaScript prototypes](https://reinteractive.net/posts/235-es6-classes-and-javascript-prototypes): ES6 Class 的写法与 ES5 Prototype 的写法对比\n- Jack Franklin, [An introduction to ES6 classes](http://javascriptplayground.com/blog/2014/07/introduction-to-es6-classes-tutorial/): ES6 class 的入门介绍\n- Axel Rauschmayer, [ECMAScript 6: new OOP features besides classes](http://www.2ality.com/2014/12/es6-oop.html)\n- Axel Rauschmayer, [Classes in ECMAScript 6 (final semantics)](http://www.2ality.com/2015/02/es6-classes-final.html): Class 语法的详细介绍和设计思想分析\n- Eric Faust, [ES6 In Depth: Subclassing](https://hacks.mozilla.org/2015/08/es6-in-depth-subclassing/): Class 语法的深入介绍\n- Nicolás Bevacqua, [Binding Methods to Class Instance Objects](https://ponyfoo.com/articles/binding-methods-to-class-instance-objects): 如何绑定类的实例中的 this\n- Jamie Kyle, [JavaScript’s new #private class fields](https://jamie.build/javascripts-new-private-class-fields.html): 私有属性的介绍。\n\n## Decorator\n\n- Maximiliano Fierro, [Declarative vs Imperative](http://elmasse.github.io/js/decorators-bindings-es7.html): Decorators 和 Mixin 介绍\n- Justin Fagnani, [\"Real\" Mixins with JavaScript Classes](http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/): 使用类的继承实现 Mixin\n- Addy Osmani, [Exploring ES2016 Decorators](https://medium.com/google-developers/exploring-es7-decorators-76ecb65fb841): Decorator 的深入介绍\n- Sebastian McKenzie, [Allow decorators for functions as well](https://github.com/wycats/javascript-decorators/issues/4): 为什么修饰器不能用于函数\n- Maximiliano Fierro, [Traits with ES2016 Decorators](http://cocktailjs.github.io/blog/traits-with-es7-decorators.html): Trait 的用法介绍\n- Jonathan Creamer: [Using ES2016 Decorators to Publish on an Event Bus](http://jonathancreamer.com/using-es2016-decorators-to-publish-on-an-event-bus/): 使用修饰器实现自动发布事件\n\n## Module\n\n- Jack Franklin, [JavaScript Modules the ES6 Way](http://24ways.org/2014/javascript-modules-the-es6-way/): ES6 模块入门\n- Axel Rauschmayer, [ECMAScript 6 modules: the final syntax](http://www.2ality.com/2014/09/es6-modules-final.html): ES6 模块的介绍，以及与 CommonJS 规格的详细比较\n- Dave Herman, [Static module resolution](http://calculist.org/blog/2012/06/29/static-module-resolution/): ES6 模块的静态化设计思想\n- Jason Orendorff, [ES6 In Depth: Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/): ES6 模块设计思想的介绍\n- Ben Newman, [The Importance of import and export](http://benjamn.github.io/empirenode-2015/#/): ES6 模块的设计思想\n- ESDiscuss, [Why is \"export default var a = 1;\" invalid syntax?](https://esdiscuss.org/topic/why-is-export-default-var-a-1-invalid-syntax)\n- Bradley Meck, [ES6 Module Interoperability](https://github.com/nodejs/node-eps/blob/master/002-es6-modules.html): 介绍 Node.js 如何处理 ES6 语法加载 CommonJS 模块\n- Axel Rauschmayer, [Making transpiled ES modules more spec-compliant](http://www.2ality.com/2017/01/babel-esm-spec-mode.html): ES6 模块编译成 CommonJS 模块的详细介绍\n- Axel Rauschmayer, [ES proposal: import() – dynamically importing ES modules](http://www.2ality.com/2017/01/import-operator.html): import() 的用法\n- Node.js EPS, [ES Module Interoperability](https://github.com/nodejs/node-eps/blob/master/002-es-modules.html): Node.js 对 ES6 模块的处理规格\n\n## 二进制数组\n\n- Ilmari Heikkinen, [Typed Arrays: Binary Data in the Browser](http://www.html5rocks.com/en/tutorials/webgl/typed_arrays/)\n- Khronos, [Typed Array Specification](http://www.khronos.org/registry/typedarray/specs/latest/)\n- Ian Elliot, [Reading A BMP File In JavaScript](http://www.i-programmer.info/projects/36-web/6234-reading-a-bmp-file-in-javascript.html)\n- Renato Mangini, [How to convert ArrayBuffer to and from String](http://updates.html5rocks.com/2012/06/How-to-convert-ArrayBuffer-to-and-from-String)\n- Axel Rauschmayer, [Typed Arrays in ECMAScript 6](http://www.2ality.com/2015/09/typed-arrays.html)\n- Axel Rauschmayer, [ES proposal: Shared memory and atomics](http://2ality.com/2017/01/shared-array-buffer.html)\n- Lin Clark, [Avoiding race conditions in SharedArrayBuffers with Atomics](https://hacks.mozilla.org/2017/06/avoiding-race-conditions-in-sharedarraybuffers-with-atomics/): Atomics 对象使用场景的解释\n- Lars T Hansen, [Shared memory - a brief tutorial](https://github.com/tc39/ecmascript_sharedmem/blob/master/TUTORIAL.html)\n\n## SIMD\n\n- TC39, [SIMD.js Stage 2](https://docs.google.com/presentation/d/1MY9NHrHmL7ma7C8dyNXvmYNNGgVmmxXk8ZIiQtPlfH4/edit#slide=id.p19)\n- MDN, [SIMD](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SIMD)\n- TC39, [ECMAScript SIMD](https://github.com/tc39/ecmascript_simd)\n- Axel Rauschmayer, [JavaScript gains support for SIMD](http://www.2ality.com/2013/12/simd-js.html)\n\n## 工具\n\n- Babel, [Babel Handbook](https://github.com/thejameskyle/babel-handbook/tree/master/translations/en): Babel 的用法介绍\n- Google, [traceur-compiler](https://github.com/google/traceur-compiler): Traceur 编译器\n- Casper Beyer, [ECMAScript 6 Features and Tools](http://caspervonb.github.io/2014/03/05/ecmascript6-features-and-tools.html)\n- Stoyan Stefanov, [Writing ES6 today with jstransform](http://www.phpied.com/writing-es6-today-with-jstransform/)\n- ES6 Module Loader, [ES6 Module Loader Polyfill](https://github.com/ModuleLoader/es6-module-loader): 在浏览器和 node.js 加载 ES6 模块的一个库，文档里对 ES6 模块有详细解释\n- Paul Miller, [es6-shim](https://github.com/paulmillr/es6-shim): 一个针对老式浏览器，模拟 ES6 部分功能的垫片库(shim)\n- army8735, [JavaScript Downcast](https://github.com/army8735/jsdc): 国产的 ES6 到 ES5 的转码器\n- esnext, [ES6 Module Transpiler](https://github.com/esnext/es6-module-transpiler): 基于 node.js 的将 ES6 模块转为 ES5 代码的命令行工具\n- Sebastian McKenzie, [BabelJS](http://babeljs.io/): ES6 转译器\n- SystemJS, [SystemJS](https://github.com/systemjs/systemjs): 在浏览器中加载 AMD、CJS、ES6 模块的一个垫片库\n- Modernizr, [HTML5 Cross Browser Polyfills](https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills#ecmascript-6-harmony): ES6 垫片库清单\n- Facebook, [regenerator](https://github.com/facebook/regenerator): 将 Generator 函数转为 ES5 的转码器\n","excerpt":"","title":"参考链接","headers":[{"level":2,"title":"官方文件","slug":"官方文件","link":"#官方文件","children":[]},{"level":2,"title":"综合介绍","slug":"综合介绍","link":"#综合介绍","children":[]},{"level":2,"title":"let 和 const","slug":"let-和-const","link":"#let-和-const","children":[]},{"level":2,"title":"解构赋值","slug":"解构赋值","link":"#解构赋值","children":[]},{"level":2,"title":"字符串","slug":"字符串","link":"#字符串","children":[]},{"level":2,"title":"正则","slug":"正则","link":"#正则","children":[]},{"level":2,"title":"数值","slug":"数值","link":"#数值","children":[]},{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":2,"title":"对象","slug":"对象","link":"#对象","children":[]},{"level":2,"title":"Symbol","slug":"symbol","link":"#symbol","children":[]},{"level":2,"title":"Set 和 Map","slug":"set-和-map","link":"#set-和-map","children":[]},{"level":2,"title":"Proxy 和 Reflect","slug":"proxy-和-reflect","link":"#proxy-和-reflect","children":[]},{"level":2,"title":"Promise 对象","slug":"promise-对象","link":"#promise-对象","children":[]},{"level":2,"title":"Iterator","slug":"iterator","link":"#iterator","children":[]},{"level":2,"title":"Generator","slug":"generator","link":"#generator","children":[]},{"level":2,"title":"异步操作和 Async 函数","slug":"异步操作和-async-函数","link":"#异步操作和-async-函数","children":[]},{"level":2,"title":"Class","slug":"class","link":"#class","children":[]},{"level":2,"title":"Decorator","slug":"decorator","link":"#decorator","children":[]},{"level":2,"title":"Module","slug":"module","link":"#module","children":[]},{"level":2,"title":"二进制数组","slug":"二进制数组","link":"#二进制数组","children":[]},{"level":2,"title":"SIMD","slug":"simd","link":"#simd","children":[]},{"level":2,"title":"工具","slug":"工具","link":"#工具","children":[]}]}}
