{"content":"<h1 id=\"命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命名管道\"><span>命名管道</span></a></h1>\n<p>在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。</p>\n<p>命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> > </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">named_pipe</span></span></code></pre>\n</div><p>和</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x3C; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">named_pipe</span></span></code></pre>\n</div><p>表现出来就像这样:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process2</span></span></code></pre>\n</div><h2 id=\"设置一个命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#设置一个命名管道\"><span>设置一个命名管道</span></a></h2>\n<p>使用 mkfifo 命令能够创建命令管道:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mkfifo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">prw-r--r--</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> me</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> me</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 2009-07-17</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 06:41</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span></code></pre>\n</div><p>这里我们使用 mkfifo 创建了一个名为 pipe1 的命名管道。使用 ls 命令，我们查看这个文件， 看到位于属性字段的第一个字母是 “p”，表明它是一个命名管道。</p>\n<h2 id=\"使用命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用命名管道\"><span>使用命名管道</span></a></h2>\n<p>为了演示命名管道是如何工作的，我们将需要两个终端窗口(或用两个虚拟控制台代替)。在第一个终端中，我们输入一个简单命令，并把命令的输出重定向到命名管道:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> > </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">pipe1</span></span></code></pre>\n</div><p>我们按下 Enter 按键之后，命令将会挂起。这是因为在管道的另一端没有任何接受数据。当这种现象发生的时候， 据说是管道阻塞了。一旦我们绑定一个进程到管道的另一端，该进程开始从管道中读取输入的时候，这种情况会消失。使用第二个终端窗口，我们输入这个命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x3C; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">pipe1</span></span></code></pre>\n</div><p>然后产自第一个终端窗口的目录列表出现在第二个终端中，并作为来自 cat 命令的输出。在第一个终端 窗口中的 ls 命令一旦它不再阻塞，会成功地结束。</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/linux/bash/archives/named-pipe.md","filePathRelative":"linux/bash/archives/named-pipe.md","frontmatter":{"date":"2020-06-04T00:00:00.000Z"},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命名管道\"><span>命名管道</span></a></h1>\n<p>在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。</p>\n<p>命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> > </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">named_pipe</span></span></code></pre>\n</div><p>和</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x3C; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">named_pipe</span></span></code></pre>\n</div><p>表现出来就像这样:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process2</span></span></code></pre>\n</div><h2 id=\"设置一个命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#设置一个命名管道\"><span>设置一个命名管道</span></a></h2>\n<p>使用 mkfifo 命令能够创建命令管道:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mkfifo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">prw-r--r--</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> me</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> me</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 2009-07-17</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 06:41</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span></code></pre>\n</div><p>这里我们使用 mkfifo 创建了一个名为 pipe1 的命名管道。使用 ls 命令，我们查看这个文件， 看到位于属性字段的第一个字母是 “p”，表明它是一个命名管道。</p>\n<h2 id=\"使用命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用命名管道\"><span>使用命名管道</span></a></h2>\n<p>为了演示命名管道是如何工作的，我们将需要两个终端窗口(或用两个虚拟控制台代替)。在第一个终端中，我们输入一个简单命令，并把命令的输出重定向到命名管道:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> > </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">pipe1</span></span></code></pre>\n</div><p>我们按下 Enter 按键之后，命令将会挂起。这是因为在管道的另一端没有任何接受数据。当这种现象发生的时候， 据说是管道阻塞了。一旦我们绑定一个进程到管道的另一端，该进程开始从管道中读取输入的时候，这种情况会消失。使用第二个终端窗口，我们输入这个命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x3C; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">pipe1</span></span></code></pre>\n</div><p>然后产自第一个终端窗口的目录列表出现在第二个终端中，并作为来自 cat 命令的输出。在第一个终端 窗口中的 ls 命令一旦它不再阻塞，会成功地结束。</p>\n</template>","contentStripped":"<h1 id=\"命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命名管道\"><span>命名管道</span></a></h1>\n<p>在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。</p>\n<p>命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> > </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">named_pipe</span></span></code></pre>\n</div><p>和</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x3C; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">named_pipe</span></span></code></pre>\n</div><p>表现出来就像这样:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">process2</span></span></code></pre>\n</div><h2 id=\"设置一个命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#设置一个命名管道\"><span>设置一个命名管道</span></a></h2>\n<p>使用 mkfifo 命令能够创建命令管道:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> mkfifo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">prw-r--r--</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> me</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> me</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 0</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 2009-07-17</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 06:41</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pipe1</span></span></code></pre>\n</div><p>这里我们使用 mkfifo 创建了一个名为 pipe1 的命名管道。使用 ls 命令，我们查看这个文件， 看到位于属性字段的第一个字母是 “p”，表明它是一个命名管道。</p>\n<h2 id=\"使用命名管道\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用命名管道\"><span>使用命名管道</span></a></h2>\n<p>为了演示命名管道是如何工作的，我们将需要两个终端窗口(或用两个虚拟控制台代替)。在第一个终端中，我们输入一个简单命令，并把命令的输出重定向到命名管道:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> > </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">pipe1</span></span></code></pre>\n</div><p>我们按下 Enter 按键之后，命令将会挂起。这是因为在管道的另一端没有任何接受数据。当这种现象发生的时候， 据说是管道阻塞了。一旦我们绑定一个进程到管道的另一端，该进程开始从管道中读取输入的时候，这种情况会消失。使用第二个终端窗口，我们输入这个命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">cat</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x3C; </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">pipe1</span></span></code></pre>\n</div><p>然后产自第一个终端窗口的目录列表出现在第二个终端中，并作为来自 cat 命令的输出。在第一个终端 窗口中的 ls 命令一旦它不再阻塞，会成功地结束。</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n# 命名管道\n\n在大多数类似 Unix 的操作系统中，有可能创建一种特殊类型的文件，叫做命名管道。命名管道用来在 两个进程之间建立连接，也可以像其它类型的文件一样使用。\n\n命令管道的行为类似于文件，但实际上形成了先入先出(FIFO)的缓冲。和普通(未命令的)管道一样， 数据从一端进入，然后从另一端出现。通过命令管道，有可能像这样设置一些东西:\n\n```bash\nprocess1 > named_pipe\n```\n\n和\n\n```bash\nprocess2 < named_pipe\n```\n\n表现出来就像这样:\n\n```bash\nprocess1 | process2\n```\n\n## 设置一个命名管道\n\n使用 mkfifo 命令能够创建命令管道:\n\n```bash\n$ mkfifo pipe1\n$ ls -l pipe1\nprw-r--r-- 1 me me 0 2009-07-17 06:41 pipe1\n```\n\n这里我们使用 mkfifo 创建了一个名为 pipe1 的命名管道。使用 ls 命令，我们查看这个文件， 看到位于属性字段的第一个字母是 “p”，表明它是一个命名管道。\n\n## 使用命名管道\n\n为了演示命名管道是如何工作的，我们将需要两个终端窗口(或用两个虚拟控制台代替)。在第一个终端中，我们输入一个简单命令，并把命令的输出重定向到命名管道:\n\n```bash\nls -l > pipe1\n```\n\n我们按下 Enter 按键之后，命令将会挂起。这是因为在管道的另一端没有任何接受数据。当这种现象发生的时候， 据说是管道阻塞了。一旦我们绑定一个进程到管道的另一端，该进程开始从管道中读取输入的时候，这种情况会消失。使用第二个终端窗口，我们输入这个命令。\n\n```bash\ncat < pipe1\n```\n\n然后产自第一个终端窗口的目录列表出现在第二个终端中，并作为来自 cat 命令的输出。在第一个终端 窗口中的 ls 命令一旦它不再阻塞，会成功地结束。\n","excerpt":"","title":"命名管道","headers":[{"level":2,"title":"设置一个命名管道","slug":"设置一个命名管道","link":"#设置一个命名管道","children":[]},{"level":2,"title":"使用命名管道","slug":"使用命名管道","link":"#使用命名管道","children":[]}]}}
