{"content":"<h2 id=\"前台-后台状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#前台-后台状态\"><span>前台/后台状态</span></a></h2>\n<p>小程序启动后，界面被展示给用户，此时小程序处于前台状态。</p>\n<p>当用户点击右上角胶囊按钮关闭小程序，或者按了设备 Home 键离开微信时，小程序并没有完全终止运行，而是进入了后台状态，小程序还可以运行一小段时间。</p>\n<p>当用户再次进入微信或再次打开小程序，小程序又会从后台进入前台。但如果用户很久没有再进入小程序，或者系统资源紧张，小程序可能被销毁，即完全终止运行。</p>\n<h2 id=\"小程序启动\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小程序启动\"><span>小程序启动</span></a></h2>\n<p>这样，小程序启动可以分为两种情况，一种是冷启动，一种是热启动。</p>\n<ul>\n<li>冷启动: 如果用户首次打开，或小程序销毁后被用户再次打开，此时小程序需要重新加载启动，即冷启动。</li>\n<li>热启动: 如果用户已经打开过某小程序，然后在一定时间内再次打开该小程序，此时小程序并未被销毁，只是从后台状态进入前台状态，这个过程就是热启动。</li>\n</ul>\n<h2 id=\"小程序销毁时机\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小程序销毁时机\"><span>小程序销毁时机</span></a></h2>\n<p>通常，只有当小程序进入后台一定时间，或者系统资源占用过高，才会被销毁。具体而言包括以下几种情形:</p>\n<ul>\n<li>当小程序进入后台，可以维持一小段时间的运行状态，如果这段时间内都未进入前台，小程序会被销毁。</li>\n<li>当小程序占用系统资源过高，可能会被系统销毁或被微信客户端主动回收。\n<ul>\n<li>在 iOS 上，当微信客户端在一定时间间隔内连续收到系统内存告警时，会根据一定的策略，主动销毁小程序，并提示用户 「运行内存不足，请重新打开该小程序」。具体策略会持续进行调整优化。</li>\n<li>建议小程序在必要时使用 wx.onMemoryWarning 监听内存告警事件，进行必要的内存清理。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"启动场景分类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#启动场景分类\"><span>启动场景分类</span></a></h2>\n<p>用户打开小程序时，场景可分为以下 A、B 两类:</p>\n<p>A. 保留上次的浏览状态。场景值有以下几项:</p>\n<table>\n<thead>\n<tr>\n<th>场景值 ID</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1001</td>\n<td>发现栏小程序主入口，「最近使用」列表(基础库 2.2.4 版本起包含「我的小程序」列表)</td>\n</tr>\n<tr>\n<td>1003</td>\n<td>星标小程序列表</td>\n</tr>\n<tr>\n<td>1023</td>\n<td>系统桌面小图标打开小程序</td>\n</tr>\n<tr>\n<td>1038</td>\n<td>从其他小程序返回小程序</td>\n</tr>\n<tr>\n<td>1056</td>\n<td>聊天顶部音乐播放器右上角菜单，打开小程序</td>\n</tr>\n<tr>\n<td>1080</td>\n<td>客服会话菜单小程序入口，打开小程序</td>\n</tr>\n<tr>\n<td>1083</td>\n<td>公众号会话菜单小程序入口 ，打开小程序(只有腾讯客服小程序有)</td>\n</tr>\n<tr>\n<td>1089</td>\n<td>聊天主界面下拉，打开小程序/微信聊天主界面下拉，「最近使用」栏(基础库 2.2.4 版本起包含「我的小程序」栏)</td>\n</tr>\n<tr>\n<td>1090</td>\n<td>长按小程序右上角菜单，打开小程序</td>\n</tr>\n<tr>\n<td>1103</td>\n<td>发现-小程序主入口我的小程序，打开小程序</td>\n</tr>\n<tr>\n<td>1104</td>\n<td>聊天主界面下拉，从我的小程序，打开小程序</td>\n</tr>\n<tr>\n<td>1113</td>\n<td>安卓手机负一屏，打开小程序</td>\n</tr>\n<tr>\n<td>1114</td>\n<td>安卓手机侧边栏，打开小程序</td>\n</tr>\n<tr>\n<td>1117</td>\n<td>后台运行小程序的管理页中，打开小程序</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>若进入的场景中带有 path，则每次打开小程序时都进入对应的 path 页面</li>\n<li>若进入的场景中不带 path:</li>\n<li>若小程序是热启动，则保留原来状态</li>\n<li>若小程序是冷启动，则遵循下一节的重启策略，可能是首页或上次退出的页面</li>\n</ul>\n<p>B. relaunch 到指定页或首页</p>\n<p>包括除 A 类外的其他场景</p>\n<ul>\n<li>若进入的场景中带有 path，则每次点击时都进入对应的 path 页面</li>\n<li>若进入的场景中不带 path，则每次进入都打开首页</li>\n</ul>\n<h2 id=\"a-类场景的重新启动策略\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#a-类场景的重新启动策略\"><span>A 类场景的重新启动策略</span></a></h2>\n<blockquote>\n<p>基础库 2.8.0 开始支持</p>\n</blockquote>\n<p>小程序被销毁后，下次冷启动如果属于 B 类场景，将会进入特定的页面。</p>\n<p>下次冷启动如果属于 A 类场景，默认情况下将会进入小程序的首页。在页面对应的 json 文件中(也可以全局配置在 app.json 的 <code v-pre>window</code> 段中)，指定 <code v-pre>restartStrategy</code> 配置项可以改变这个默认的行为，使得从某个页面退出后，下次 A 类场景的冷启动可以回到这个页面。</p>\n<details class=\"hint-container details\"><summary>代码示例</summary>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"restartStrategy\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"homePage\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div></details>\n<p><code v-pre>restartStrategy</code> 可选值:</p>\n<table>\n<thead>\n<tr>\n<th>可选值</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>homePage</td>\n<td>(默认值)如果从这个页面退出小程序，下次将从首页冷启动</td>\n</tr>\n<tr>\n<td>homePageAndLatestPage</td>\n<td>如果从这个页面退出小程序，下次冷启动后立刻加载这个页面，页面的参数保持不变(不可用于 tab 页)</td>\n</tr>\n</tbody>\n</table>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>即使不配置为 homePage ，小程序如果退出过久(当前默认一天时间，可以使用退出状态来调整)，下次冷启动时也将不再遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</p>\n</div>\n<p>无论如何，页面中的状态并不会被保留，如输入框中的文本内容、 checkbox 的勾选状态等都不会还原。如果需要还原或部分还原，需要利用退出状态。</p>\n<h2 id=\"退出状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#退出状态\"><span>退出状态</span></a></h2>\n<p>每当小程序可能被销毁之前，页面回调函数 <code v-pre>onSaveExitState</code> 会被调用。如果想保留页面中的状态，可以在这个回调函数中“保存”一些数据，下次启动时可以通过 <code v-pre>exitState</code> 获得这些已保存数据。</p>\n<details class=\"hint-container details\"><summary>代码示例</summary>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"restartStrategy\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"homePageAndLatestPage\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> prevExitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">exitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 尝试获得上一次退出前 onSaveExitState 保存的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">prevExitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> !==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> undefined</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      // 如果是根据 restartStrategy 配置进行的冷启动，就可以获取到</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      prevExitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myDataField</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"myData\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onSaveExitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> exitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myDataField</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"myData\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 需要保存的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> exitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      expireTimeStamp</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Date</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">now</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 24</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 60</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 60</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 超时时刻</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></details>\n<p><code v-pre>onSaveExitState</code> 返回值可以包含两项:</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>Any</td>\n<td>需要保存的数据(只能是 JSON 兼容的数据)</td>\n</tr>\n<tr>\n<td>expireTimeStamp</td>\n<td>Number</td>\n<td>超时时刻，在这个时刻后，保存的数据保证一定被丢弃，默认为 (当前时刻 + 1 天)</td>\n</tr>\n</tbody>\n</table>\n<p>一个更完整的示例: <a href=\"https://developers.weixin.qq.com/s/ELP5uTmN7E8l\" target=\"_blank\" rel=\"noopener noreferrer\">在开发者工具中预览效果</a></p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<ul>\n<li>如果超过 <code v-pre>expireTimeStamp</code> ，保存的数据将被丢弃，且冷启动时不遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</li>\n<li><code v-pre>expireTimeStamp</code> 有可能被自动提前，如微信客户端需要清理数据的时候。</li>\n<li>在小程序存活期间， <code v-pre>onSaveExitState</code> 可能会被多次调用，此时以最后一次的调用结果作为最终结果。</li>\n<li>在某些特殊情况下(如微信客户端直接被系统杀死)，这个方法将不会被调用，下次冷启动也不遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</li>\n</ul>\n</div>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/mini-app/guide/frame/mechanism.md","filePathRelative":"code/mini-app/guide/frame/mechanism.md","frontmatter":{"date":"2020-12-19T00:00:00.000Z","title":"小程序运行机制","icon":"operate","category":"小程序"},"sfcBlocks":{"template":{"type":"template","content":"<template><h2 id=\"前台-后台状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#前台-后台状态\"><span>前台/后台状态</span></a></h2>\n<p>小程序启动后，界面被展示给用户，此时小程序处于前台状态。</p>\n<p>当用户点击右上角胶囊按钮关闭小程序，或者按了设备 Home 键离开微信时，小程序并没有完全终止运行，而是进入了后台状态，小程序还可以运行一小段时间。</p>\n<p>当用户再次进入微信或再次打开小程序，小程序又会从后台进入前台。但如果用户很久没有再进入小程序，或者系统资源紧张，小程序可能被销毁，即完全终止运行。</p>\n<h2 id=\"小程序启动\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小程序启动\"><span>小程序启动</span></a></h2>\n<p>这样，小程序启动可以分为两种情况，一种是冷启动，一种是热启动。</p>\n<ul>\n<li>冷启动: 如果用户首次打开，或小程序销毁后被用户再次打开，此时小程序需要重新加载启动，即冷启动。</li>\n<li>热启动: 如果用户已经打开过某小程序，然后在一定时间内再次打开该小程序，此时小程序并未被销毁，只是从后台状态进入前台状态，这个过程就是热启动。</li>\n</ul>\n<h2 id=\"小程序销毁时机\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小程序销毁时机\"><span>小程序销毁时机</span></a></h2>\n<p>通常，只有当小程序进入后台一定时间，或者系统资源占用过高，才会被销毁。具体而言包括以下几种情形:</p>\n<ul>\n<li>当小程序进入后台，可以维持一小段时间的运行状态，如果这段时间内都未进入前台，小程序会被销毁。</li>\n<li>当小程序占用系统资源过高，可能会被系统销毁或被微信客户端主动回收。\n<ul>\n<li>在 iOS 上，当微信客户端在一定时间间隔内连续收到系统内存告警时，会根据一定的策略，主动销毁小程序，并提示用户 「运行内存不足，请重新打开该小程序」。具体策略会持续进行调整优化。</li>\n<li>建议小程序在必要时使用 wx.onMemoryWarning 监听内存告警事件，进行必要的内存清理。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"启动场景分类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#启动场景分类\"><span>启动场景分类</span></a></h2>\n<p>用户打开小程序时，场景可分为以下 A、B 两类:</p>\n<p>A. 保留上次的浏览状态。场景值有以下几项:</p>\n<table>\n<thead>\n<tr>\n<th>场景值 ID</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1001</td>\n<td>发现栏小程序主入口，「最近使用」列表(基础库 2.2.4 版本起包含「我的小程序」列表)</td>\n</tr>\n<tr>\n<td>1003</td>\n<td>星标小程序列表</td>\n</tr>\n<tr>\n<td>1023</td>\n<td>系统桌面小图标打开小程序</td>\n</tr>\n<tr>\n<td>1038</td>\n<td>从其他小程序返回小程序</td>\n</tr>\n<tr>\n<td>1056</td>\n<td>聊天顶部音乐播放器右上角菜单，打开小程序</td>\n</tr>\n<tr>\n<td>1080</td>\n<td>客服会话菜单小程序入口，打开小程序</td>\n</tr>\n<tr>\n<td>1083</td>\n<td>公众号会话菜单小程序入口 ，打开小程序(只有腾讯客服小程序有)</td>\n</tr>\n<tr>\n<td>1089</td>\n<td>聊天主界面下拉，打开小程序/微信聊天主界面下拉，「最近使用」栏(基础库 2.2.4 版本起包含「我的小程序」栏)</td>\n</tr>\n<tr>\n<td>1090</td>\n<td>长按小程序右上角菜单，打开小程序</td>\n</tr>\n<tr>\n<td>1103</td>\n<td>发现-小程序主入口我的小程序，打开小程序</td>\n</tr>\n<tr>\n<td>1104</td>\n<td>聊天主界面下拉，从我的小程序，打开小程序</td>\n</tr>\n<tr>\n<td>1113</td>\n<td>安卓手机负一屏，打开小程序</td>\n</tr>\n<tr>\n<td>1114</td>\n<td>安卓手机侧边栏，打开小程序</td>\n</tr>\n<tr>\n<td>1117</td>\n<td>后台运行小程序的管理页中，打开小程序</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>若进入的场景中带有 path，则每次打开小程序时都进入对应的 path 页面</li>\n<li>若进入的场景中不带 path:</li>\n<li>若小程序是热启动，则保留原来状态</li>\n<li>若小程序是冷启动，则遵循下一节的重启策略，可能是首页或上次退出的页面</li>\n</ul>\n<p>B. relaunch 到指定页或首页</p>\n<p>包括除 A 类外的其他场景</p>\n<ul>\n<li>若进入的场景中带有 path，则每次点击时都进入对应的 path 页面</li>\n<li>若进入的场景中不带 path，则每次进入都打开首页</li>\n</ul>\n<h2 id=\"a-类场景的重新启动策略\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#a-类场景的重新启动策略\"><span>A 类场景的重新启动策略</span></a></h2>\n<blockquote>\n<p>基础库 2.8.0 开始支持</p>\n</blockquote>\n<p>小程序被销毁后，下次冷启动如果属于 B 类场景，将会进入特定的页面。</p>\n<p>下次冷启动如果属于 A 类场景，默认情况下将会进入小程序的首页。在页面对应的 json 文件中(也可以全局配置在 app.json 的 <code v-pre>window</code> 段中)，指定 <code v-pre>restartStrategy</code> 配置项可以改变这个默认的行为，使得从某个页面退出后，下次 A 类场景的冷启动可以回到这个页面。</p>\n<details class=\"hint-container details\"><summary>代码示例</summary>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"restartStrategy\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"homePage\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div></details>\n<p><code v-pre>restartStrategy</code> 可选值:</p>\n<table>\n<thead>\n<tr>\n<th>可选值</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>homePage</td>\n<td>(默认值)如果从这个页面退出小程序，下次将从首页冷启动</td>\n</tr>\n<tr>\n<td>homePageAndLatestPage</td>\n<td>如果从这个页面退出小程序，下次冷启动后立刻加载这个页面，页面的参数保持不变(不可用于 tab 页)</td>\n</tr>\n</tbody>\n</table>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>即使不配置为 homePage ，小程序如果退出过久(当前默认一天时间，可以使用退出状态来调整)，下次冷启动时也将不再遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</p>\n</div>\n<p>无论如何，页面中的状态并不会被保留，如输入框中的文本内容、 checkbox 的勾选状态等都不会还原。如果需要还原或部分还原，需要利用退出状态。</p>\n<h2 id=\"退出状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#退出状态\"><span>退出状态</span></a></h2>\n<p>每当小程序可能被销毁之前，页面回调函数 <code v-pre>onSaveExitState</code> 会被调用。如果想保留页面中的状态，可以在这个回调函数中“保存”一些数据，下次启动时可以通过 <code v-pre>exitState</code> 获得这些已保存数据。</p>\n<details class=\"hint-container details\"><summary>代码示例</summary>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"restartStrategy\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"homePageAndLatestPage\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> prevExitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">exitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 尝试获得上一次退出前 onSaveExitState 保存的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">prevExitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> !==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> undefined</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      // 如果是根据 restartStrategy 配置进行的冷启动，就可以获取到</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      prevExitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myDataField</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"myData\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onSaveExitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> exitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myDataField</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"myData\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 需要保存的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> exitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      expireTimeStamp</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Date</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">now</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 24</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 60</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 60</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 超时时刻</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></details>\n<p><code v-pre>onSaveExitState</code> 返回值可以包含两项:</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>Any</td>\n<td>需要保存的数据(只能是 JSON 兼容的数据)</td>\n</tr>\n<tr>\n<td>expireTimeStamp</td>\n<td>Number</td>\n<td>超时时刻，在这个时刻后，保存的数据保证一定被丢弃，默认为 (当前时刻 + 1 天)</td>\n</tr>\n</tbody>\n</table>\n<p>一个更完整的示例: <a href=\"https://developers.weixin.qq.com/s/ELP5uTmN7E8l\" target=\"_blank\" rel=\"noopener noreferrer\">在开发者工具中预览效果</a></p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<ul>\n<li>如果超过 <code v-pre>expireTimeStamp</code> ，保存的数据将被丢弃，且冷启动时不遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</li>\n<li><code v-pre>expireTimeStamp</code> 有可能被自动提前，如微信客户端需要清理数据的时候。</li>\n<li>在小程序存活期间， <code v-pre>onSaveExitState</code> 可能会被多次调用，此时以最后一次的调用结果作为最终结果。</li>\n<li>在某些特殊情况下(如微信客户端直接被系统杀死)，这个方法将不会被调用，下次冷启动也不遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</li>\n</ul>\n</div>\n</template>","contentStripped":"<h2 id=\"前台-后台状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#前台-后台状态\"><span>前台/后台状态</span></a></h2>\n<p>小程序启动后，界面被展示给用户，此时小程序处于前台状态。</p>\n<p>当用户点击右上角胶囊按钮关闭小程序，或者按了设备 Home 键离开微信时，小程序并没有完全终止运行，而是进入了后台状态，小程序还可以运行一小段时间。</p>\n<p>当用户再次进入微信或再次打开小程序，小程序又会从后台进入前台。但如果用户很久没有再进入小程序，或者系统资源紧张，小程序可能被销毁，即完全终止运行。</p>\n<h2 id=\"小程序启动\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小程序启动\"><span>小程序启动</span></a></h2>\n<p>这样，小程序启动可以分为两种情况，一种是冷启动，一种是热启动。</p>\n<ul>\n<li>冷启动: 如果用户首次打开，或小程序销毁后被用户再次打开，此时小程序需要重新加载启动，即冷启动。</li>\n<li>热启动: 如果用户已经打开过某小程序，然后在一定时间内再次打开该小程序，此时小程序并未被销毁，只是从后台状态进入前台状态，这个过程就是热启动。</li>\n</ul>\n<h2 id=\"小程序销毁时机\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小程序销毁时机\"><span>小程序销毁时机</span></a></h2>\n<p>通常，只有当小程序进入后台一定时间，或者系统资源占用过高，才会被销毁。具体而言包括以下几种情形:</p>\n<ul>\n<li>当小程序进入后台，可以维持一小段时间的运行状态，如果这段时间内都未进入前台，小程序会被销毁。</li>\n<li>当小程序占用系统资源过高，可能会被系统销毁或被微信客户端主动回收。\n<ul>\n<li>在 iOS 上，当微信客户端在一定时间间隔内连续收到系统内存告警时，会根据一定的策略，主动销毁小程序，并提示用户 「运行内存不足，请重新打开该小程序」。具体策略会持续进行调整优化。</li>\n<li>建议小程序在必要时使用 wx.onMemoryWarning 监听内存告警事件，进行必要的内存清理。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"启动场景分类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#启动场景分类\"><span>启动场景分类</span></a></h2>\n<p>用户打开小程序时，场景可分为以下 A、B 两类:</p>\n<p>A. 保留上次的浏览状态。场景值有以下几项:</p>\n<table>\n<thead>\n<tr>\n<th>场景值 ID</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1001</td>\n<td>发现栏小程序主入口，「最近使用」列表(基础库 2.2.4 版本起包含「我的小程序」列表)</td>\n</tr>\n<tr>\n<td>1003</td>\n<td>星标小程序列表</td>\n</tr>\n<tr>\n<td>1023</td>\n<td>系统桌面小图标打开小程序</td>\n</tr>\n<tr>\n<td>1038</td>\n<td>从其他小程序返回小程序</td>\n</tr>\n<tr>\n<td>1056</td>\n<td>聊天顶部音乐播放器右上角菜单，打开小程序</td>\n</tr>\n<tr>\n<td>1080</td>\n<td>客服会话菜单小程序入口，打开小程序</td>\n</tr>\n<tr>\n<td>1083</td>\n<td>公众号会话菜单小程序入口 ，打开小程序(只有腾讯客服小程序有)</td>\n</tr>\n<tr>\n<td>1089</td>\n<td>聊天主界面下拉，打开小程序/微信聊天主界面下拉，「最近使用」栏(基础库 2.2.4 版本起包含「我的小程序」栏)</td>\n</tr>\n<tr>\n<td>1090</td>\n<td>长按小程序右上角菜单，打开小程序</td>\n</tr>\n<tr>\n<td>1103</td>\n<td>发现-小程序主入口我的小程序，打开小程序</td>\n</tr>\n<tr>\n<td>1104</td>\n<td>聊天主界面下拉，从我的小程序，打开小程序</td>\n</tr>\n<tr>\n<td>1113</td>\n<td>安卓手机负一屏，打开小程序</td>\n</tr>\n<tr>\n<td>1114</td>\n<td>安卓手机侧边栏，打开小程序</td>\n</tr>\n<tr>\n<td>1117</td>\n<td>后台运行小程序的管理页中，打开小程序</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>若进入的场景中带有 path，则每次打开小程序时都进入对应的 path 页面</li>\n<li>若进入的场景中不带 path:</li>\n<li>若小程序是热启动，则保留原来状态</li>\n<li>若小程序是冷启动，则遵循下一节的重启策略，可能是首页或上次退出的页面</li>\n</ul>\n<p>B. relaunch 到指定页或首页</p>\n<p>包括除 A 类外的其他场景</p>\n<ul>\n<li>若进入的场景中带有 path，则每次点击时都进入对应的 path 页面</li>\n<li>若进入的场景中不带 path，则每次进入都打开首页</li>\n</ul>\n<h2 id=\"a-类场景的重新启动策略\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#a-类场景的重新启动策略\"><span>A 类场景的重新启动策略</span></a></h2>\n<blockquote>\n<p>基础库 2.8.0 开始支持</p>\n</blockquote>\n<p>小程序被销毁后，下次冷启动如果属于 B 类场景，将会进入特定的页面。</p>\n<p>下次冷启动如果属于 A 类场景，默认情况下将会进入小程序的首页。在页面对应的 json 文件中(也可以全局配置在 app.json 的 <code v-pre>window</code> 段中)，指定 <code v-pre>restartStrategy</code> 配置项可以改变这个默认的行为，使得从某个页面退出后，下次 A 类场景的冷启动可以回到这个页面。</p>\n<details class=\"hint-container details\"><summary>代码示例</summary>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"restartStrategy\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"homePage\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div></details>\n<p><code v-pre>restartStrategy</code> 可选值:</p>\n<table>\n<thead>\n<tr>\n<th>可选值</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>homePage</td>\n<td>(默认值)如果从这个页面退出小程序，下次将从首页冷启动</td>\n</tr>\n<tr>\n<td>homePageAndLatestPage</td>\n<td>如果从这个页面退出小程序，下次冷启动后立刻加载这个页面，页面的参数保持不变(不可用于 tab 页)</td>\n</tr>\n</tbody>\n</table>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>即使不配置为 homePage ，小程序如果退出过久(当前默认一天时间，可以使用退出状态来调整)，下次冷启动时也将不再遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</p>\n</div>\n<p>无论如何，页面中的状态并不会被保留，如输入框中的文本内容、 checkbox 的勾选状态等都不会还原。如果需要还原或部分还原，需要利用退出状态。</p>\n<h2 id=\"退出状态\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#退出状态\"><span>退出状态</span></a></h2>\n<p>每当小程序可能被销毁之前，页面回调函数 <code v-pre>onSaveExitState</code> 会被调用。如果想保留页面中的状态，可以在这个回调函数中“保存”一些数据，下次启动时可以通过 <code v-pre>exitState</code> 获得这些已保存数据。</p>\n<details class=\"hint-container details\"><summary>代码示例</summary>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"restartStrategy\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"homePageAndLatestPage\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> prevExitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> this</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">exitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 尝试获得上一次退出前 onSaveExitState 保存的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">prevExitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> !==</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> undefined</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      // 如果是根据 restartStrategy 配置进行的冷启动，就可以获取到</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">      prevExitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myDataField</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ===</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"myData\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onSaveExitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\"> exitState</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myDataField</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"myData\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> }; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 需要保存的数据</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> exitState</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      expireTimeStamp</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> Date</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">now</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">+</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 24</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 60</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 60</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1000</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 超时时刻</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    };</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></details>\n<p><code v-pre>onSaveExitState</code> 返回值可以包含两项:</p>\n<table>\n<thead>\n<tr>\n<th>字段名</th>\n<th>类型</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>data</td>\n<td>Any</td>\n<td>需要保存的数据(只能是 JSON 兼容的数据)</td>\n</tr>\n<tr>\n<td>expireTimeStamp</td>\n<td>Number</td>\n<td>超时时刻，在这个时刻后，保存的数据保证一定被丢弃，默认为 (当前时刻 + 1 天)</td>\n</tr>\n</tbody>\n</table>\n<p>一个更完整的示例: <a href=\"https://developers.weixin.qq.com/s/ELP5uTmN7E8l\" target=\"_blank\" rel=\"noopener noreferrer\">在开发者工具中预览效果</a></p>\n<div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<ul>\n<li>如果超过 <code v-pre>expireTimeStamp</code> ，保存的数据将被丢弃，且冷启动时不遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</li>\n<li><code v-pre>expireTimeStamp</code> 有可能被自动提前，如微信客户端需要清理数据的时候。</li>\n<li>在小程序存活期间， <code v-pre>onSaveExitState</code> 可能会被多次调用，此时以最后一次的调用结果作为最终结果。</li>\n<li>在某些特殊情况下(如微信客户端直接被系统杀死)，这个方法将不会被调用，下次冷启动也不遵循 <code v-pre>restartStrategy</code> 的配置，而是直接从首页冷启动。</li>\n</ul>\n</div>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n## 前台/后台状态\n\n小程序启动后，界面被展示给用户，此时小程序处于前台状态。\n\n当用户点击右上角胶囊按钮关闭小程序，或者按了设备 Home 键离开微信时，小程序并没有完全终止运行，而是进入了后台状态，小程序还可以运行一小段时间。\n\n当用户再次进入微信或再次打开小程序，小程序又会从后台进入前台。但如果用户很久没有再进入小程序，或者系统资源紧张，小程序可能被销毁，即完全终止运行。\n\n## 小程序启动\n\n这样，小程序启动可以分为两种情况，一种是冷启动，一种是热启动。\n\n- 冷启动: 如果用户首次打开，或小程序销毁后被用户再次打开，此时小程序需要重新加载启动，即冷启动。\n- 热启动: 如果用户已经打开过某小程序，然后在一定时间内再次打开该小程序，此时小程序并未被销毁，只是从后台状态进入前台状态，这个过程就是热启动。\n\n## 小程序销毁时机\n\n通常，只有当小程序进入后台一定时间，或者系统资源占用过高，才会被销毁。具体而言包括以下几种情形:\n\n- 当小程序进入后台，可以维持一小段时间的运行状态，如果这段时间内都未进入前台，小程序会被销毁。\n- 当小程序占用系统资源过高，可能会被系统销毁或被微信客户端主动回收。\n  - 在 iOS 上，当微信客户端在一定时间间隔内连续收到系统内存告警时，会根据一定的策略，主动销毁小程序，并提示用户 「运行内存不足，请重新打开该小程序」。具体策略会持续进行调整优化。\n  - 建议小程序在必要时使用 wx.onMemoryWarning 监听内存告警事件，进行必要的内存清理。\n\n## 启动场景分类\n\n用户打开小程序时，场景可分为以下 A、B 两类:\n\nA. 保留上次的浏览状态。场景值有以下几项:\n\n| 场景值 ID | 说明                                                                                                   |\n| --------- | ------------------------------------------------------------------------------------------------------ |\n| 1001      | 发现栏小程序主入口，「最近使用」列表(基础库 2.2.4 版本起包含「我的小程序」列表)                        |\n| 1003      | 星标小程序列表                                                                                         |\n| 1023      | 系统桌面小图标打开小程序                                                                               |\n| 1038      | 从其他小程序返回小程序                                                                                 |\n| 1056      | 聊天顶部音乐播放器右上角菜单，打开小程序                                                               |\n| 1080      | 客服会话菜单小程序入口，打开小程序                                                                     |\n| 1083      | 公众号会话菜单小程序入口 ，打开小程序(只有腾讯客服小程序有)                                            |\n| 1089      | 聊天主界面下拉，打开小程序/微信聊天主界面下拉，「最近使用」栏(基础库 2.2.4 版本起包含「我的小程序」栏) |\n| 1090      | 长按小程序右上角菜单，打开小程序                                                                       |\n| 1103      | 发现-小程序主入口我的小程序，打开小程序                                                                |\n| 1104      | 聊天主界面下拉，从我的小程序，打开小程序                                                               |\n| 1113      | 安卓手机负一屏，打开小程序                                                                             |\n| 1114      | 安卓手机侧边栏，打开小程序                                                                             |\n| 1117      | 后台运行小程序的管理页中，打开小程序                                                                   |\n\n- 若进入的场景中带有 path，则每次打开小程序时都进入对应的 path 页面\n- 若进入的场景中不带 path:\n- 若小程序是热启动，则保留原来状态\n- 若小程序是冷启动，则遵循下一节的重启策略，可能是首页或上次退出的页面\n\nB. relaunch 到指定页或首页\n\n包括除 A 类外的其他场景\n\n- 若进入的场景中带有 path，则每次点击时都进入对应的 path 页面\n- 若进入的场景中不带 path，则每次进入都打开首页\n\n## A 类场景的重新启动策略\n\n> 基础库 2.8.0 开始支持\n\n小程序被销毁后，下次冷启动如果属于 B 类场景，将会进入特定的页面。\n\n下次冷启动如果属于 A 类场景，默认情况下将会进入小程序的首页。在页面对应的 json 文件中(也可以全局配置在 app.json 的 `window` 段中)，指定 `restartStrategy` 配置项可以改变这个默认的行为，使得从某个页面退出后，下次 A 类场景的冷启动可以回到这个页面。\n\n::: details 代码示例\n\n```json\n{\n  \"restartStrategy\": \"homePage\"\n}\n```\n\n:::\n\n`restartStrategy` 可选值:\n\n| 可选值                | 含义                                                                                        |\n| --------------------- | ------------------------------------------------------------------------------------------- |\n| homePage              | (默认值)如果从这个页面退出小程序，下次将从首页冷启动                                        |\n| homePageAndLatestPage | 如果从这个页面退出小程序，下次冷启动后立刻加载这个页面，页面的参数保持不变(不可用于 tab 页) |\n\n::: tip\n\n即使不配置为 homePage ，小程序如果退出过久(当前默认一天时间，可以使用退出状态来调整)，下次冷启动时也将不再遵循 `restartStrategy` 的配置，而是直接从首页冷启动。\n\n:::\n\n无论如何，页面中的状态并不会被保留，如输入框中的文本内容、 checkbox 的勾选状态等都不会还原。如果需要还原或部分还原，需要利用退出状态。\n\n## 退出状态\n\n每当小程序可能被销毁之前，页面回调函数 `onSaveExitState` 会被调用。如果想保留页面中的状态，可以在这个回调函数中“保存”一些数据，下次启动时可以通过 `exitState` 获得这些已保存数据。\n\n::: details 代码示例\n\n```json\n{\n  \"restartStrategy\": \"homePageAndLatestPage\"\n}\n```\n\n```js\nPage({\n  onLoad() {\n    const prevExitState = this.exitState; // 尝试获得上一次退出前 onSaveExitState 保存的数据\n\n    if (prevExitState !== undefined) {\n      // 如果是根据 restartStrategy 配置进行的冷启动，就可以获取到\n      prevExitState.myDataField === \"myData\";\n    }\n  },\n  onSaveExitState() {\n    const exitState = { myDataField: \"myData\" }; // 需要保存的数据\n\n    return {\n      data: exitState,\n      expireTimeStamp: Date.now() + 24 * 60 * 60 * 1000, // 超时时刻\n    };\n  },\n});\n```\n\n:::\n\n`onSaveExitState` 返回值可以包含两项:\n\n| 字段名          | 类型   | 含义                                                                       |\n| --------------- | ------ | -------------------------------------------------------------------------- |\n| data            | Any    | 需要保存的数据(只能是 JSON 兼容的数据)                                     |\n| expireTimeStamp | Number | 超时时刻，在这个时刻后，保存的数据保证一定被丢弃，默认为 (当前时刻 + 1 天) |\n\n一个更完整的示例: [在开发者工具中预览效果](https://developers.weixin.qq.com/s/ELP5uTmN7E8l)\n\n::: tip\n\n- 如果超过 `expireTimeStamp` ，保存的数据将被丢弃，且冷启动时不遵循 `restartStrategy` 的配置，而是直接从首页冷启动。\n- `expireTimeStamp` 有可能被自动提前，如微信客户端需要清理数据的时候。\n- 在小程序存活期间， `onSaveExitState` 可能会被多次调用，此时以最后一次的调用结果作为最终结果。\n- 在某些特殊情况下(如微信客户端直接被系统杀死)，这个方法将不会被调用，下次冷启动也不遵循 `restartStrategy` 的配置，而是直接从首页冷启动。\n\n:::\n","excerpt":"","title":"","headers":[{"level":2,"title":"前台/后台状态","slug":"前台-后台状态","link":"#前台-后台状态","children":[]},{"level":2,"title":"小程序启动","slug":"小程序启动","link":"#小程序启动","children":[]},{"level":2,"title":"小程序销毁时机","slug":"小程序销毁时机","link":"#小程序销毁时机","children":[]},{"level":2,"title":"启动场景分类","slug":"启动场景分类","link":"#启动场景分类","children":[]},{"level":2,"title":"A 类场景的重新启动策略","slug":"a-类场景的重新启动策略","link":"#a-类场景的重新启动策略","children":[]},{"level":2,"title":"退出状态","slug":"退出状态","link":"#退出状态","children":[]}]}}
