{"content":"<p>Bash 变量分成环境变量和自定义变量两类。</p>\n<!-- more -->\n<h2 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h2>\n<p>环境变量是 Bash 环境自带的变量，进入 Shell 时已经定义好了，可以直接使用。它们通常是系统定义好的，也可以由用户从父 Shell 传入子 Shell。</p>\n<p><code v-pre>env</code> 命令或 <code v-pre>printenv</code> 命令，可以显示所有环境变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> env</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span></span></code></pre>\n</div><p>下面是一些常见的环境变量。</p>\n<ul>\n<li><code v-pre>BASHPID</code>: Bash 进程的进程 ID。</li>\n<li><code v-pre>BASHOPTS</code>: 当前 Shell 的参数，可以用 <code v-pre>shopt</code> 命令修改。</li>\n<li><code v-pre>DISPLAY</code>: 图形环境的显示器名字，通常是 <code v-pre>:0</code>，表示 X Server 的第一个显示器。</li>\n<li><code v-pre>EDITOR</code>: 默认的文本编辑器。</li>\n<li><code v-pre>HOME</code>: 用户的主目录。</li>\n<li><code v-pre>HOST</code>: 当前主机的名称。</li>\n<li><code v-pre>IFS</code>: 词与词之间的分隔符，默认为空格。</li>\n<li><code v-pre>LANG</code>: 字符集以及语言编码，比如 <code v-pre>zh_CN.UTF-8</code>。</li>\n<li><code v-pre>PATH</code>: 由冒号分开的目录列表，当输入可执行程序名后，会搜索这个目录列表。</li>\n<li><code v-pre>PS1</code>: Shell 提示符。</li>\n<li><code v-pre>PS2</code>: 输入多行命令时，次要的 Shell 提示符。</li>\n<li><code v-pre>PWD</code>: 当前工作目录。</li>\n<li><code v-pre>RANDOM</code>: 返回一个 0 到 32767 之间的随机数。</li>\n<li><code v-pre>SHELL</code>: Shell 的名字。</li>\n<li><code v-pre>SHELLOPTS</code>: 启动当前 Shell 的 <code v-pre>set</code> 命令的参数，参见《set 命令》一章。</li>\n<li><code v-pre>TERM</code>: 终端类型名，即终端仿真器所用的协议。</li>\n<li><code v-pre>UID</code>: 当前用户的 ID 编号。</li>\n<li><code v-pre>USER</code>: 当前用户的用户名。</li>\n</ul>\n<p>很多环境变量很少发生变化，而且是只读的，可以视为常量。由于它们的变量名全部都是大写，所以传统上，如果用户要自己定义一个常量，也会使用全部大写的变量名。</p>\n<p>注意，Bash 变量名区分大小写，<code v-pre>HOME</code> 和 <code v-pre>home</code> 是两个不同的变量。</p>\n<p>查看单个环境变量的值，可以使用 <code v-pre>printenv</code> 命令或 <code v-pre>echo</code> 命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $PATH</span></span></code></pre>\n</div><p>注意，<code v-pre>printenv</code> 命令后面的变量名，不用加前缀 <code v-pre>$</code>。</p>\n<p>自定义变量是用户在当前 Shell 里面自己定义的变量，必须先定义后使用，而且仅在当前 Shell 可用。一旦退出当前 Shell，该变量就不存在了。</p>\n<p><code v-pre>set</code> 命令可以显示所有变量(包括环境变量和自定义变量)，以及所有的 Bash 函数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span></span></code></pre>\n</div><h2 id=\"创建变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#创建变量\"><span>创建变量</span></a></h2>\n<p>用户创建变量的时候，变量名必须遵守下面的规则。</p>\n<ul>\n<li>字母、数字和下划线字符组成。</li>\n<li>第一个字符必须是一个字母或一个下划线，不能是数字。</li>\n<li>不允许出现空格和标点符号。</li>\n</ul>\n<p>变量声明的语法如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">value</span></span></code></pre>\n</div><p>上面命令中，等号左边是变量名，右边是变量。注意，等号两边不能有空格。</p>\n<p>如果变量的值包含空格，则必须将值放在引号中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello world\"</span></span></code></pre>\n</div><p>Bash 没有数据类型的概念，所有的变量值都是字符串。</p>\n<p>下面是一些自定义变量的例子。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">z</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                     # 变量 a 赋值为字符串 z</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            # 变量值包含空格，就必须放在引号里面</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string and </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     # 变量值可以引用其他变量的值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">d</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\\t\\ta string\\n\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      # 变量值可以使用转义字符</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)      </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 变量值可以是命令的执行结果</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 7</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))            </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 变量值可以是数学运算的结果</span></span></code></pre>\n</div><p>变量可以重复赋值，后面的赋值会覆盖前面的赋值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p>上面例子中，变量 <code v-pre>foo</code> 的第二次赋值会覆盖第一次赋值。</p>\n<h2 id=\"读取变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#读取变量\"><span>读取变量</span></a></h2>\n<p>读取变量的时候，直接在变量名前加上 <code v-pre>$</code> 就可以了。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n</div><p>每当 Shell 看到以 <code v-pre>$</code> 开头的单词时，就会尝试读取这个变量名对应的值。</p>\n<p>如果变量不存在，Bash 不会报错，而会输出空字符。</p>\n<p>由于 <code v-pre>$</code> 在 Bash 中有特殊含义，把它当作美元符号使用时，一定要非常小心，</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 00.00</span></span></code></pre>\n</div><p>上面命令的原意是输入 <code v-pre>$100</code>，但是 Bash 将 <code v-pre>$1</code> 解释成了变量，该变量为空，因此输入就变成了 <code v-pre>00.00</code>。所以，如果要使用 <code v-pre>$</code> 的原义，需要在 <code v-pre>$</code> 前面放上反斜杠，进行转义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">100.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span></code></pre>\n</div><p>读取变量的时候，变量名也可以使用花括号 <code v-pre>{}</code> 包围，比如 <code v-pre>$a</code> 也可以写成 <code v-pre>${a}</code>。这种写法可以用于变量名与其他字符连用的情况。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $a_file</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">_file</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo_file</span></span></code></pre>\n</div><p>上面代码中，变量名 <code v-pre>a_file</code> 不会有任何输出，因为 Bash 将其整个解释为变量，而这个变量是不存在的。只有用花括号区分 <code v-pre>$a</code>，Bash 才能正确解读。</p>\n<p>事实上，读取变量的语法 <code v-pre>$foo</code>，可以看作是 <code v-pre>${foo}</code> 的简写形式。</p>\n<p>如果变量的值本身也是变量，可以使用 <code v-pre>${!varname}</code> 的语法，读取最终的值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myvar=USER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ruanyf</span></span></code></pre>\n</div><p>上面的例子中，变量 <code v-pre>myvar</code> 的值是 <code v-pre>USER</code>，<code v-pre>${!myvar}</code> 的写法将其展开成最终的值。</p>\n<h2 id=\"删除变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#删除变量\"><span>删除变量</span></a></h2>\n<p><code v-pre>unset</code> 命令用来删除一个变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> NAME</span></span></code></pre>\n</div><p>这个命令不是很有用。因为不存在的 Bash 变量一律等于空字符串，所以即使 <code v-pre>unset</code> 命令删除了变量，还是可以读取这个变量，值为空字符串。</p>\n<p>所以，删除一个变量，也可以将这个变量设成空字符串。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span></span></code></pre>\n</div><p>上面两种写法，都是删除了变量 <code v-pre>foo</code>。由于不存在的值默认为空字符串，所以后一种写法可以在等号右边不写任何值。</p>\n<h2 id=\"输出变量-export-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#输出变量-export-命令\"><span>输出变量，export 命令</span></a></h2>\n<p>用户创建的变量仅可用于当前 Shell，子 Shell 默认读取不到父 Shell 定义的变量。为了把变量传递给子 Shell，需要使用 <code v-pre>export</code> 命令。这样输出的变量，对于子 Shell 来说就是环境变量。</p>\n<p><code v-pre>export</code> 命令用来向子 Shell 输出变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span></span></code></pre>\n</div><p>上面命令输出了变量 <code v-pre>NAME</code>。变量的赋值和输出也可以在一个步骤中完成。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n</div><p>上面命令执行后，当前 Shell 及随后新建的子 Shell，都可以读取变量 <code v-pre>$NAME</code>。</p>\n<p>子 Shell 如果修改继承的变量，不会影响父 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 输出变量 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 新建子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 修改继承的变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=baz</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 退出子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> exit</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，子 Shell 修改了继承的变量 <code v-pre>$foo</code>，对父 Shell 没有影响。</p>\n<h2 id=\"特殊变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特殊变量\"><span>特殊变量</span></a></h2>\n<p>Bash 提供一些特殊变量。这些变量的值由 Shell 提供，用户不能进行赋值。</p>\n<p>(1) <code v-pre>$?</code></p>\n<p><code v-pre>$?</code> 为上一个命令的退出码，用来判断上一个命令是否执行成功。返回值是 <code v-pre>0</code>，表示上一个命令执行成功；如果是非零，上一个命令执行失败。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> No</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> such</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> directory</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>ls</code> 命令查看一个不存在的文件，导致报错。<code v-pre>$?</code> 为 1，表示上一个命令执行失败。</p>\n<p>(2) <code v-pre>$$</code></p>\n<p><code v-pre>$$</code> 为当前 Shell 的进程 ID。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $$</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">10662</span></span></code></pre>\n</div><p>这个特殊变量可以用来命名临时文件。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">LOGFILE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/tmp/output_log.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$$</span></span></code></pre>\n</div><p>(3) <code v-pre>$_</code></p>\n<p><code v-pre>$_</code> 为上一个命令的最后一个参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dictionary</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/share/dict/words</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">dictionary</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $_</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/usr/share/dict/words</span></span></code></pre>\n</div><p>(4) <code v-pre>$!</code></p>\n<p><code v-pre>$!</code> 为最近一个后台执行的异步命令的进程 ID。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> firefox</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x26;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[1] </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>firefox</code> 是后台运行的命令，<code v-pre>$!</code> 返回该命令的进程 ID。</p>\n<p>(5) <code v-pre>$0</code></p>\n<p><code v-pre>$0</code> 为当前 Shell 的名称(在命令行直接执行时)或者脚本名(在脚本中执行时)。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> $0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>$0</code> 返回当前运行的是 Bash。</p>\n<p>(6) <code v-pre>$-</code></p>\n<p><code v-pre>$-</code> 为当前 Shell 的启动参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $-</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">himBHs</span></span></code></pre>\n</div><p>(7) <code v-pre>$@</code> 和 <code v-pre>$#</code></p>\n<p><code v-pre>$@</code> 和 <code v-pre>$#</code> 表示脚本的参数数量，参见脚本一章。</p>\n<h2 id=\"变量的默认值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#变量的默认值\"><span>变量的默认值</span></a></h2>\n<p>Bash 提供四个特殊语法，跟变量的默认值有关，目的是保证变量不为空。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则返回 <code v-pre>word</code>。它的目的是返回一个默认值，比如 <code v-pre>${count:-0}</code> 表示变量 <code v-pre>count</code> 不存在时返回 <code v-pre>0</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则将它设为 <code v-pre>word</code>，并且返回 <code v-pre>word</code>。它的目的是设置变量的默认值，比如 <code v-pre>${count:=0}</code> 表示变量 <code v-pre>count</code> 不存在时返回 <code v-pre>0</code>，且将 <code v-pre>count</code> 设为 <code v-pre>0</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:+</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量名存在且不为空，则返回 <code v-pre>word</code>，否则返回空值。它的目的是测试变量是否存在，比如 <code v-pre>${count:+1}</code> 表示变量 <code v-pre>count</code> 存在时返回 <code v-pre>1</code>(表示 <code v-pre>true</code>)，否则返回空值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">message</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则打印出 <code v-pre>varname: message</code>，并中断脚本的执行。如果省略了 <code v-pre>message</code>，则输出默认的信息“parameter null or not set.”。它的目的是防止变量未定义，比如 <code v-pre>${count:?&quot;undefined!&quot;}</code> 表示变量 <code v-pre>count</code> 未定义时就中断执行，抛出错误，返回给定的报错信息 <code v-pre>undefined!</code>。</p>\n<p>上面四种语法如果用在脚本中，变量名的部分可以用到数字 <code v-pre>1</code> 到 <code v-pre>9</code>，表示脚本的参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filename</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">${1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename missing.\"</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">}</span></span></code></pre>\n</div><p>上面代码出现在脚本中，<code v-pre>1</code> 表示脚本的第一个参数。如果该参数不存在，就退出脚本并报错。</p>\n<h2 id=\"declare-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#declare-命令\"><span>declare 命令</span></a></h2>\n<p><code v-pre>declare</code> 命令可以声明一些特殊类型的变量，为变量设置一些限制，比如声明只读类型的变量和整数类型的变量。</p>\n<p>它的语法形式如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> OPTION</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> VARIABLE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n</div><p><code v-pre>declare</code> 命令的主要参数(OPTION)如下。</p>\n<ul>\n<li><code v-pre>-a</code>: 声明数组变量。</li>\n<li><code v-pre>-f</code>: 输出所有函数定义。</li>\n<li><code v-pre>-F</code>: 输出所有函数名。</li>\n<li><code v-pre>-i</code>: 声明整数变量。</li>\n<li><code v-pre>-l</code>: 声明变量为小写字母。</li>\n<li><code v-pre>-p</code>: 查看变量信息。</li>\n<li><code v-pre>-r</code>: 声明只读变量。</li>\n<li><code v-pre>-u</code>: 声明变量为大写字母。</li>\n<li><code v-pre>-x</code>: 该变量输出为环境变量。</li>\n</ul>\n<p><code v-pre>declare</code> 命令如果用在函数中，声明的变量只在函数内部有效，等同于 <code v-pre>local</code> 命令。</p>\n<p>不带任何参数时，<code v-pre>declare</code> 命令输出当前环境的所有变量，包括函数在内，等同于不带有任何参数的 <code v-pre>set</code> 命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span></span></code></pre>\n</div><p><strong>(1) <code v-pre>-i</code> 参数</strong></p>\n<p><code v-pre>-i</code> 参数声明整数变量以后，可以直接进行数学运算。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val1=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val2=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result=val1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">val2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">60</span></span></code></pre>\n</div><p>上面例子中，如果变量 <code v-pre>result</code> 不声明为整数，<code v-pre>val1*val2</code> 会被当作字面量，不会进行整数运算。另外，<code v-pre>val1</code> 和 <code v-pre>val2</code> 其实不需要声明为整数，因为只要 <code v-pre>result</code> 声明为整数，它的赋值就会自动解释为整数运算。</p>\n<p>注意，一个变量声明为整数以后，依然可以被改写为字符串。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $var</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n</div><p>上面例子中，变量 <code v-pre>var</code> 声明为整数，覆盖以后，Bash 不会报错，但会赋以不确定的值，上面的例子中可能输出 0，也可能输出的是 3。</p>\n<p><strong>(2) <code v-pre>-x</code> 参数</strong></p>\n<p><code v-pre>-x</code> 参数等同于 <code v-pre>export</code> 命令，可以输出一个变量为子 Shell 的环境变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span></code></pre>\n</div><p><strong>(3) <code v-pre>-r</code> 参数</strong></p>\n<p><code v-pre>-r</code> 参数可以声明只读变量，无法改变变量值，也不能 <code v-pre>unset</code> 变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -r</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，后两个赋值语句都会报错，命令执行失败。</p>\n<p><strong>(4) <code v-pre>-u</code> 参数</strong></p>\n<p><code v-pre>-u</code> 参数声明变量为大写字母，可以自动把变量值转成大写字母。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=upper</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">UPPER</span></span></code></pre>\n</div><p><strong>(5) <code v-pre>-l</code> 参数</strong></p>\n<p><code v-pre>-l</code> 参数声明变量为小写字母，可以自动把变量值转成小写字母。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=LOWER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">lower</span></span></code></pre>\n</div><p><strong>(6) <code v-pre>-p</code> 参数</strong></p>\n<p><code v-pre>-p</code> 参数输出变量信息。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> --</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>declare -p</code> 可以输出已定义变量的值，对于未定义的变量，会提示找不到。</p>\n<p>如果不提供变量名，<code v-pre>declare -p</code> 输出所有变量的信息。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span></span></code></pre>\n</div><p><strong>(7) <code v-pre>-f</code> 参数</strong></p>\n<p><code v-pre>-f</code> 参数输出当前环境的所有函数，包括它的定义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span></span></code></pre>\n</div><p><strong>(8) <code v-pre>-F</code> 参数</strong></p>\n<p><code v-pre>-F</code> 参数输出当前环境的所有函数名，不包含函数定义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -F</span></span></code></pre>\n</div><h2 id=\"readonly-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#readonly-命令\"><span>readonly 命令</span></a></h2>\n<p><code v-pre>readonly</code> 命令等同于 <code v-pre>declare -r</code>，用来声明只读变量，不能改变变量值，也不能 <code v-pre>unset</code> 变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> readonly</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n</div><p>上面例子中，更改只读变量 <code v-pre>foo</code> 会报错，命令执行失败。</p>\n<p><code v-pre>readonly</code> 命令有三个参数。</p>\n<ul>\n<li><code v-pre>-f</code>: 声明的变量为函数名。</li>\n<li><code v-pre>-p</code>: 打印出所有的只读变量。</li>\n<li><code v-pre>-a</code>: 声明的变量为数组。</li>\n</ul>\n<h2 id=\"let-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#let-命令\"><span>let 命令</span></a></h2>\n<p><code v-pre>let</code> 命令声明变量时，可以直接执行算术表达式。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=1+2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>let</code> 命令可以直接计算 <code v-pre>1 + 2</code>。</p>\n<p><code v-pre>let</code> 命令的参数表达式如果包含空格，就需要使用引号。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"foo = 1 + 2\"</span></span></code></pre>\n</div><p><code v-pre>let</code> 可以同时对多个变量赋值，赋值表达式之间使用空格分隔。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v1 = 1\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v2 = v1++\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $v1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$v2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2,1</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>let</code> 声明了两个变量 <code v-pre>v1</code> 和 <code v-pre>v2</code>，其中 <code v-pre>v2</code> 等于 <code v-pre>v1++</code>，表示先返回 <code v-pre>v1</code> 的值，然后 <code v-pre>v1</code> 自增。</p>\n<p>这种语法支持的运算符，参考《Bash 的算术运算》一章。</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/linux/bash/variable.md","filePathRelative":"linux/bash/variable.md","frontmatter":{"date":"2020-05-04T00:00:00.000Z","title":"Bash 变量","icon":"variable","author":"阮一峰","category":"Linux","tag":["Bash"],"copyright":"本教程采用<a href=\"https://creativecommons.org/licenses/by-sa/3.0/deed.zh\" rel=\"noopener noreferrer\" target=\"_blank\">知识共享 署名-相同方式共享 3.0协议</a>"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>Bash 变量分成环境变量和自定义变量两类。</p>\n<!-- more -->\n<h2 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h2>\n<p>环境变量是 Bash 环境自带的变量，进入 Shell 时已经定义好了，可以直接使用。它们通常是系统定义好的，也可以由用户从父 Shell 传入子 Shell。</p>\n<p><code v-pre>env</code> 命令或 <code v-pre>printenv</code> 命令，可以显示所有环境变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> env</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span></span></code></pre>\n</div><p>下面是一些常见的环境变量。</p>\n<ul>\n<li><code v-pre>BASHPID</code>: Bash 进程的进程 ID。</li>\n<li><code v-pre>BASHOPTS</code>: 当前 Shell 的参数，可以用 <code v-pre>shopt</code> 命令修改。</li>\n<li><code v-pre>DISPLAY</code>: 图形环境的显示器名字，通常是 <code v-pre>:0</code>，表示 X Server 的第一个显示器。</li>\n<li><code v-pre>EDITOR</code>: 默认的文本编辑器。</li>\n<li><code v-pre>HOME</code>: 用户的主目录。</li>\n<li><code v-pre>HOST</code>: 当前主机的名称。</li>\n<li><code v-pre>IFS</code>: 词与词之间的分隔符，默认为空格。</li>\n<li><code v-pre>LANG</code>: 字符集以及语言编码，比如 <code v-pre>zh_CN.UTF-8</code>。</li>\n<li><code v-pre>PATH</code>: 由冒号分开的目录列表，当输入可执行程序名后，会搜索这个目录列表。</li>\n<li><code v-pre>PS1</code>: Shell 提示符。</li>\n<li><code v-pre>PS2</code>: 输入多行命令时，次要的 Shell 提示符。</li>\n<li><code v-pre>PWD</code>: 当前工作目录。</li>\n<li><code v-pre>RANDOM</code>: 返回一个 0 到 32767 之间的随机数。</li>\n<li><code v-pre>SHELL</code>: Shell 的名字。</li>\n<li><code v-pre>SHELLOPTS</code>: 启动当前 Shell 的 <code v-pre>set</code> 命令的参数，参见《set 命令》一章。</li>\n<li><code v-pre>TERM</code>: 终端类型名，即终端仿真器所用的协议。</li>\n<li><code v-pre>UID</code>: 当前用户的 ID 编号。</li>\n<li><code v-pre>USER</code>: 当前用户的用户名。</li>\n</ul>\n<p>很多环境变量很少发生变化，而且是只读的，可以视为常量。由于它们的变量名全部都是大写，所以传统上，如果用户要自己定义一个常量，也会使用全部大写的变量名。</p>\n<p>注意，Bash 变量名区分大小写，<code v-pre>HOME</code> 和 <code v-pre>home</code> 是两个不同的变量。</p>\n<p>查看单个环境变量的值，可以使用 <code v-pre>printenv</code> 命令或 <code v-pre>echo</code> 命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $PATH</span></span></code></pre>\n</div><p>注意，<code v-pre>printenv</code> 命令后面的变量名，不用加前缀 <code v-pre>$</code>。</p>\n<p>自定义变量是用户在当前 Shell 里面自己定义的变量，必须先定义后使用，而且仅在当前 Shell 可用。一旦退出当前 Shell，该变量就不存在了。</p>\n<p><code v-pre>set</code> 命令可以显示所有变量(包括环境变量和自定义变量)，以及所有的 Bash 函数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span></span></code></pre>\n</div><h2 id=\"创建变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#创建变量\"><span>创建变量</span></a></h2>\n<p>用户创建变量的时候，变量名必须遵守下面的规则。</p>\n<ul>\n<li>字母、数字和下划线字符组成。</li>\n<li>第一个字符必须是一个字母或一个下划线，不能是数字。</li>\n<li>不允许出现空格和标点符号。</li>\n</ul>\n<p>变量声明的语法如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">value</span></span></code></pre>\n</div><p>上面命令中，等号左边是变量名，右边是变量。注意，等号两边不能有空格。</p>\n<p>如果变量的值包含空格，则必须将值放在引号中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello world\"</span></span></code></pre>\n</div><p>Bash 没有数据类型的概念，所有的变量值都是字符串。</p>\n<p>下面是一些自定义变量的例子。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">z</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                     # 变量 a 赋值为字符串 z</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            # 变量值包含空格，就必须放在引号里面</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string and </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     # 变量值可以引用其他变量的值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">d</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\\t\\ta string\\n\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      # 变量值可以使用转义字符</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)      </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 变量值可以是命令的执行结果</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 7</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))            </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 变量值可以是数学运算的结果</span></span></code></pre>\n</div><p>变量可以重复赋值，后面的赋值会覆盖前面的赋值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p>上面例子中，变量 <code v-pre>foo</code> 的第二次赋值会覆盖第一次赋值。</p>\n<h2 id=\"读取变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#读取变量\"><span>读取变量</span></a></h2>\n<p>读取变量的时候，直接在变量名前加上 <code v-pre>$</code> 就可以了。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n</div><p>每当 Shell 看到以 <code v-pre>$</code> 开头的单词时，就会尝试读取这个变量名对应的值。</p>\n<p>如果变量不存在，Bash 不会报错，而会输出空字符。</p>\n<p>由于 <code v-pre>$</code> 在 Bash 中有特殊含义，把它当作美元符号使用时，一定要非常小心，</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 00.00</span></span></code></pre>\n</div><p>上面命令的原意是输入 <code v-pre>$100</code>，但是 Bash 将 <code v-pre>$1</code> 解释成了变量，该变量为空，因此输入就变成了 <code v-pre>00.00</code>。所以，如果要使用 <code v-pre>$</code> 的原义，需要在 <code v-pre>$</code> 前面放上反斜杠，进行转义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">100.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span></code></pre>\n</div><p>读取变量的时候，变量名也可以使用花括号 <code v-pre>{}</code> 包围，比如 <code v-pre>$a</code> 也可以写成 <code v-pre>${a}</code>。这种写法可以用于变量名与其他字符连用的情况。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $a_file</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">_file</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo_file</span></span></code></pre>\n</div><p>上面代码中，变量名 <code v-pre>a_file</code> 不会有任何输出，因为 Bash 将其整个解释为变量，而这个变量是不存在的。只有用花括号区分 <code v-pre>$a</code>，Bash 才能正确解读。</p>\n<p>事实上，读取变量的语法 <code v-pre>$foo</code>，可以看作是 <code v-pre>${foo}</code> 的简写形式。</p>\n<p>如果变量的值本身也是变量，可以使用 <code v-pre>${!varname}</code> 的语法，读取最终的值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myvar=USER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ruanyf</span></span></code></pre>\n</div><p>上面的例子中，变量 <code v-pre>myvar</code> 的值是 <code v-pre>USER</code>，<code v-pre>${!myvar}</code> 的写法将其展开成最终的值。</p>\n<h2 id=\"删除变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#删除变量\"><span>删除变量</span></a></h2>\n<p><code v-pre>unset</code> 命令用来删除一个变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> NAME</span></span></code></pre>\n</div><p>这个命令不是很有用。因为不存在的 Bash 变量一律等于空字符串，所以即使 <code v-pre>unset</code> 命令删除了变量，还是可以读取这个变量，值为空字符串。</p>\n<p>所以，删除一个变量，也可以将这个变量设成空字符串。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span></span></code></pre>\n</div><p>上面两种写法，都是删除了变量 <code v-pre>foo</code>。由于不存在的值默认为空字符串，所以后一种写法可以在等号右边不写任何值。</p>\n<h2 id=\"输出变量-export-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#输出变量-export-命令\"><span>输出变量，export 命令</span></a></h2>\n<p>用户创建的变量仅可用于当前 Shell，子 Shell 默认读取不到父 Shell 定义的变量。为了把变量传递给子 Shell，需要使用 <code v-pre>export</code> 命令。这样输出的变量，对于子 Shell 来说就是环境变量。</p>\n<p><code v-pre>export</code> 命令用来向子 Shell 输出变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span></span></code></pre>\n</div><p>上面命令输出了变量 <code v-pre>NAME</code>。变量的赋值和输出也可以在一个步骤中完成。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n</div><p>上面命令执行后，当前 Shell 及随后新建的子 Shell，都可以读取变量 <code v-pre>$NAME</code>。</p>\n<p>子 Shell 如果修改继承的变量，不会影响父 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 输出变量 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 新建子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 修改继承的变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=baz</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 退出子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> exit</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，子 Shell 修改了继承的变量 <code v-pre>$foo</code>，对父 Shell 没有影响。</p>\n<h2 id=\"特殊变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特殊变量\"><span>特殊变量</span></a></h2>\n<p>Bash 提供一些特殊变量。这些变量的值由 Shell 提供，用户不能进行赋值。</p>\n<p>(1) <code v-pre>$?</code></p>\n<p><code v-pre>$?</code> 为上一个命令的退出码，用来判断上一个命令是否执行成功。返回值是 <code v-pre>0</code>，表示上一个命令执行成功；如果是非零，上一个命令执行失败。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> No</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> such</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> directory</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>ls</code> 命令查看一个不存在的文件，导致报错。<code v-pre>$?</code> 为 1，表示上一个命令执行失败。</p>\n<p>(2) <code v-pre>$$</code></p>\n<p><code v-pre>$$</code> 为当前 Shell 的进程 ID。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $$</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">10662</span></span></code></pre>\n</div><p>这个特殊变量可以用来命名临时文件。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">LOGFILE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/tmp/output_log.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$$</span></span></code></pre>\n</div><p>(3) <code v-pre>$_</code></p>\n<p><code v-pre>$_</code> 为上一个命令的最后一个参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dictionary</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/share/dict/words</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">dictionary</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $_</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/usr/share/dict/words</span></span></code></pre>\n</div><p>(4) <code v-pre>$!</code></p>\n<p><code v-pre>$!</code> 为最近一个后台执行的异步命令的进程 ID。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> firefox</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x26;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[1] </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>firefox</code> 是后台运行的命令，<code v-pre>$!</code> 返回该命令的进程 ID。</p>\n<p>(5) <code v-pre>$0</code></p>\n<p><code v-pre>$0</code> 为当前 Shell 的名称(在命令行直接执行时)或者脚本名(在脚本中执行时)。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> $0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>$0</code> 返回当前运行的是 Bash。</p>\n<p>(6) <code v-pre>$-</code></p>\n<p><code v-pre>$-</code> 为当前 Shell 的启动参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $-</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">himBHs</span></span></code></pre>\n</div><p>(7) <code v-pre>$@</code> 和 <code v-pre>$#</code></p>\n<p><code v-pre>$@</code> 和 <code v-pre>$#</code> 表示脚本的参数数量，参见脚本一章。</p>\n<h2 id=\"变量的默认值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#变量的默认值\"><span>变量的默认值</span></a></h2>\n<p>Bash 提供四个特殊语法，跟变量的默认值有关，目的是保证变量不为空。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则返回 <code v-pre>word</code>。它的目的是返回一个默认值，比如 <code v-pre>${count:-0}</code> 表示变量 <code v-pre>count</code> 不存在时返回 <code v-pre>0</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则将它设为 <code v-pre>word</code>，并且返回 <code v-pre>word</code>。它的目的是设置变量的默认值，比如 <code v-pre>${count:=0}</code> 表示变量 <code v-pre>count</code> 不存在时返回 <code v-pre>0</code>，且将 <code v-pre>count</code> 设为 <code v-pre>0</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:+</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量名存在且不为空，则返回 <code v-pre>word</code>，否则返回空值。它的目的是测试变量是否存在，比如 <code v-pre>${count:+1}</code> 表示变量 <code v-pre>count</code> 存在时返回 <code v-pre>1</code>(表示 <code v-pre>true</code>)，否则返回空值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">message</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则打印出 <code v-pre>varname: message</code>，并中断脚本的执行。如果省略了 <code v-pre>message</code>，则输出默认的信息“parameter null or not set.”。它的目的是防止变量未定义，比如 <code v-pre>${count:?&quot;undefined!&quot;}</code> 表示变量 <code v-pre>count</code> 未定义时就中断执行，抛出错误，返回给定的报错信息 <code v-pre>undefined!</code>。</p>\n<p>上面四种语法如果用在脚本中，变量名的部分可以用到数字 <code v-pre>1</code> 到 <code v-pre>9</code>，表示脚本的参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filename</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">${1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename missing.\"</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">}</span></span></code></pre>\n</div><p>上面代码出现在脚本中，<code v-pre>1</code> 表示脚本的第一个参数。如果该参数不存在，就退出脚本并报错。</p>\n<h2 id=\"declare-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#declare-命令\"><span>declare 命令</span></a></h2>\n<p><code v-pre>declare</code> 命令可以声明一些特殊类型的变量，为变量设置一些限制，比如声明只读类型的变量和整数类型的变量。</p>\n<p>它的语法形式如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> OPTION</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> VARIABLE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n</div><p><code v-pre>declare</code> 命令的主要参数(OPTION)如下。</p>\n<ul>\n<li><code v-pre>-a</code>: 声明数组变量。</li>\n<li><code v-pre>-f</code>: 输出所有函数定义。</li>\n<li><code v-pre>-F</code>: 输出所有函数名。</li>\n<li><code v-pre>-i</code>: 声明整数变量。</li>\n<li><code v-pre>-l</code>: 声明变量为小写字母。</li>\n<li><code v-pre>-p</code>: 查看变量信息。</li>\n<li><code v-pre>-r</code>: 声明只读变量。</li>\n<li><code v-pre>-u</code>: 声明变量为大写字母。</li>\n<li><code v-pre>-x</code>: 该变量输出为环境变量。</li>\n</ul>\n<p><code v-pre>declare</code> 命令如果用在函数中，声明的变量只在函数内部有效，等同于 <code v-pre>local</code> 命令。</p>\n<p>不带任何参数时，<code v-pre>declare</code> 命令输出当前环境的所有变量，包括函数在内，等同于不带有任何参数的 <code v-pre>set</code> 命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span></span></code></pre>\n</div><p><strong>(1) <code v-pre>-i</code> 参数</strong></p>\n<p><code v-pre>-i</code> 参数声明整数变量以后，可以直接进行数学运算。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val1=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val2=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result=val1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">val2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">60</span></span></code></pre>\n</div><p>上面例子中，如果变量 <code v-pre>result</code> 不声明为整数，<code v-pre>val1*val2</code> 会被当作字面量，不会进行整数运算。另外，<code v-pre>val1</code> 和 <code v-pre>val2</code> 其实不需要声明为整数，因为只要 <code v-pre>result</code> 声明为整数，它的赋值就会自动解释为整数运算。</p>\n<p>注意，一个变量声明为整数以后，依然可以被改写为字符串。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $var</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n</div><p>上面例子中，变量 <code v-pre>var</code> 声明为整数，覆盖以后，Bash 不会报错，但会赋以不确定的值，上面的例子中可能输出 0，也可能输出的是 3。</p>\n<p><strong>(2) <code v-pre>-x</code> 参数</strong></p>\n<p><code v-pre>-x</code> 参数等同于 <code v-pre>export</code> 命令，可以输出一个变量为子 Shell 的环境变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span></code></pre>\n</div><p><strong>(3) <code v-pre>-r</code> 参数</strong></p>\n<p><code v-pre>-r</code> 参数可以声明只读变量，无法改变变量值，也不能 <code v-pre>unset</code> 变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -r</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，后两个赋值语句都会报错，命令执行失败。</p>\n<p><strong>(4) <code v-pre>-u</code> 参数</strong></p>\n<p><code v-pre>-u</code> 参数声明变量为大写字母，可以自动把变量值转成大写字母。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=upper</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">UPPER</span></span></code></pre>\n</div><p><strong>(5) <code v-pre>-l</code> 参数</strong></p>\n<p><code v-pre>-l</code> 参数声明变量为小写字母，可以自动把变量值转成小写字母。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=LOWER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">lower</span></span></code></pre>\n</div><p><strong>(6) <code v-pre>-p</code> 参数</strong></p>\n<p><code v-pre>-p</code> 参数输出变量信息。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> --</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>declare -p</code> 可以输出已定义变量的值，对于未定义的变量，会提示找不到。</p>\n<p>如果不提供变量名，<code v-pre>declare -p</code> 输出所有变量的信息。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span></span></code></pre>\n</div><p><strong>(7) <code v-pre>-f</code> 参数</strong></p>\n<p><code v-pre>-f</code> 参数输出当前环境的所有函数，包括它的定义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span></span></code></pre>\n</div><p><strong>(8) <code v-pre>-F</code> 参数</strong></p>\n<p><code v-pre>-F</code> 参数输出当前环境的所有函数名，不包含函数定义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -F</span></span></code></pre>\n</div><h2 id=\"readonly-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#readonly-命令\"><span>readonly 命令</span></a></h2>\n<p><code v-pre>readonly</code> 命令等同于 <code v-pre>declare -r</code>，用来声明只读变量，不能改变变量值，也不能 <code v-pre>unset</code> 变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> readonly</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n</div><p>上面例子中，更改只读变量 <code v-pre>foo</code> 会报错，命令执行失败。</p>\n<p><code v-pre>readonly</code> 命令有三个参数。</p>\n<ul>\n<li><code v-pre>-f</code>: 声明的变量为函数名。</li>\n<li><code v-pre>-p</code>: 打印出所有的只读变量。</li>\n<li><code v-pre>-a</code>: 声明的变量为数组。</li>\n</ul>\n<h2 id=\"let-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#let-命令\"><span>let 命令</span></a></h2>\n<p><code v-pre>let</code> 命令声明变量时，可以直接执行算术表达式。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=1+2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>let</code> 命令可以直接计算 <code v-pre>1 + 2</code>。</p>\n<p><code v-pre>let</code> 命令的参数表达式如果包含空格，就需要使用引号。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"foo = 1 + 2\"</span></span></code></pre>\n</div><p><code v-pre>let</code> 可以同时对多个变量赋值，赋值表达式之间使用空格分隔。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v1 = 1\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v2 = v1++\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $v1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$v2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2,1</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>let</code> 声明了两个变量 <code v-pre>v1</code> 和 <code v-pre>v2</code>，其中 <code v-pre>v2</code> 等于 <code v-pre>v1++</code>，表示先返回 <code v-pre>v1</code> 的值，然后 <code v-pre>v1</code> 自增。</p>\n<p>这种语法支持的运算符，参考《Bash 的算术运算》一章。</p>\n</template>","contentStripped":"<p>Bash 变量分成环境变量和自定义变量两类。</p>\n<!-- more -->\n<h2 id=\"简介\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#简介\"><span>简介</span></a></h2>\n<p>环境变量是 Bash 环境自带的变量，进入 Shell 时已经定义好了，可以直接使用。它们通常是系统定义好的，也可以由用户从父 Shell 传入子 Shell。</p>\n<p><code v-pre>env</code> 命令或 <code v-pre>printenv</code> 命令，可以显示所有环境变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> env</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span></span></code></pre>\n</div><p>下面是一些常见的环境变量。</p>\n<ul>\n<li><code v-pre>BASHPID</code>: Bash 进程的进程 ID。</li>\n<li><code v-pre>BASHOPTS</code>: 当前 Shell 的参数，可以用 <code v-pre>shopt</code> 命令修改。</li>\n<li><code v-pre>DISPLAY</code>: 图形环境的显示器名字，通常是 <code v-pre>:0</code>，表示 X Server 的第一个显示器。</li>\n<li><code v-pre>EDITOR</code>: 默认的文本编辑器。</li>\n<li><code v-pre>HOME</code>: 用户的主目录。</li>\n<li><code v-pre>HOST</code>: 当前主机的名称。</li>\n<li><code v-pre>IFS</code>: 词与词之间的分隔符，默认为空格。</li>\n<li><code v-pre>LANG</code>: 字符集以及语言编码，比如 <code v-pre>zh_CN.UTF-8</code>。</li>\n<li><code v-pre>PATH</code>: 由冒号分开的目录列表，当输入可执行程序名后，会搜索这个目录列表。</li>\n<li><code v-pre>PS1</code>: Shell 提示符。</li>\n<li><code v-pre>PS2</code>: 输入多行命令时，次要的 Shell 提示符。</li>\n<li><code v-pre>PWD</code>: 当前工作目录。</li>\n<li><code v-pre>RANDOM</code>: 返回一个 0 到 32767 之间的随机数。</li>\n<li><code v-pre>SHELL</code>: Shell 的名字。</li>\n<li><code v-pre>SHELLOPTS</code>: 启动当前 Shell 的 <code v-pre>set</code> 命令的参数，参见《set 命令》一章。</li>\n<li><code v-pre>TERM</code>: 终端类型名，即终端仿真器所用的协议。</li>\n<li><code v-pre>UID</code>: 当前用户的 ID 编号。</li>\n<li><code v-pre>USER</code>: 当前用户的用户名。</li>\n</ul>\n<p>很多环境变量很少发生变化，而且是只读的，可以视为常量。由于它们的变量名全部都是大写，所以传统上，如果用户要自己定义一个常量，也会使用全部大写的变量名。</p>\n<p>注意，Bash 变量名区分大小写，<code v-pre>HOME</code> 和 <code v-pre>home</code> 是两个不同的变量。</p>\n<p>查看单个环境变量的值，可以使用 <code v-pre>printenv</code> 命令或 <code v-pre>echo</code> 命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> printenv</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $PATH</span></span></code></pre>\n</div><p>注意，<code v-pre>printenv</code> 命令后面的变量名，不用加前缀 <code v-pre>$</code>。</p>\n<p>自定义变量是用户在当前 Shell 里面自己定义的变量，必须先定义后使用，而且仅在当前 Shell 可用。一旦退出当前 Shell，该变量就不存在了。</p>\n<p><code v-pre>set</code> 命令可以显示所有变量(包括环境变量和自定义变量)，以及所有的 Bash 函数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">set</span></span></code></pre>\n</div><h2 id=\"创建变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#创建变量\"><span>创建变量</span></a></h2>\n<p>用户创建变量的时候，变量名必须遵守下面的规则。</p>\n<ul>\n<li>字母、数字和下划线字符组成。</li>\n<li>第一个字符必须是一个字母或一个下划线，不能是数字。</li>\n<li>不允许出现空格和标点符号。</li>\n</ul>\n<p>变量声明的语法如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">variable</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">value</span></span></code></pre>\n</div><p>上面命令中，等号左边是变量名，右边是变量。注意，等号两边不能有空格。</p>\n<p>如果变量的值包含空格，则必须将值放在引号中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello world\"</span></span></code></pre>\n</div><p>Bash 没有数据类型的概念，所有的变量值都是字符串。</p>\n<p>下面是一些自定义变量的例子。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">z</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">                     # 变量 a 赋值为字符串 z</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">            # 变量值包含空格，就必须放在引号里面</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"a string and </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$b</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">     # 变量值可以引用其他变量的值</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">d</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"\\t\\ta string\\n\"</span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">      # 变量值可以使用转义字符</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">e</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo.txt</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)      </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 变量值可以是命令的执行结果</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$((</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">5</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 7</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">))            </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 变量值可以是数学运算的结果</span></span></code></pre>\n</div><p>变量可以重复赋值，后面的赋值会覆盖前面的赋值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p>上面例子中，变量 <code v-pre>foo</code> 的第二次赋值会覆盖第一次赋值。</p>\n<h2 id=\"读取变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#读取变量\"><span>读取变量</span></a></h2>\n<p>读取变量的时候，直接在变量名前加上 <code v-pre>$</code> 就可以了。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n</div><p>每当 Shell 看到以 <code v-pre>$</code> 开头的单词时，就会尝试读取这个变量名对应的值。</p>\n<p>如果变量不存在，Bash 不会报错，而会输出空字符。</p>\n<p>由于 <code v-pre>$</code> 在 Bash 中有特殊含义，把它当作美元符号使用时，一定要非常小心，</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 00.00</span></span></code></pre>\n</div><p>上面命令的原意是输入 <code v-pre>$100</code>，但是 Bash 将 <code v-pre>$1</code> 解释成了变量，该变量为空，因此输入就变成了 <code v-pre>00.00</code>。所以，如果要使用 <code v-pre>$</code> 的原义，需要在 <code v-pre>$</code> 前面放上反斜杠，进行转义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">100.00</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">The</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> total</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $100</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">.00</span></span></code></pre>\n</div><p>读取变量的时候，变量名也可以使用花括号 <code v-pre>{}</code> 包围，比如 <code v-pre>$a</code> 也可以写成 <code v-pre>${a}</code>。这种写法可以用于变量名与其他字符连用的情况。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> a=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $a_file</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">a</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">_file</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">foo_file</span></span></code></pre>\n</div><p>上面代码中，变量名 <code v-pre>a_file</code> 不会有任何输出，因为 Bash 将其整个解释为变量，而这个变量是不存在的。只有用花括号区分 <code v-pre>$a</code>，Bash 才能正确解读。</p>\n<p>事实上，读取变量的语法 <code v-pre>$foo</code>，可以看作是 <code v-pre>${foo}</code> 的简写形式。</p>\n<p>如果变量的值本身也是变量，可以使用 <code v-pre>${!varname}</code> 的语法，读取最终的值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> myvar=USER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\"> ${</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">!</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">myvar</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ruanyf</span></span></code></pre>\n</div><p>上面的例子中，变量 <code v-pre>myvar</code> 的值是 <code v-pre>USER</code>，<code v-pre>${!myvar}</code> 的写法将其展开成最终的值。</p>\n<h2 id=\"删除变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#删除变量\"><span>删除变量</span></a></h2>\n<p><code v-pre>unset</code> 命令用来删除一个变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> NAME</span></span></code></pre>\n</div><p>这个命令不是很有用。因为不存在的 Bash 变量一律等于空字符串，所以即使 <code v-pre>unset</code> 命令删除了变量，还是可以读取这个变量，值为空字符串。</p>\n<p>所以，删除一个变量，也可以将这个变量设成空字符串。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">''</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span></span></code></pre>\n</div><p>上面两种写法，都是删除了变量 <code v-pre>foo</code>。由于不存在的值默认为空字符串，所以后一种写法可以在等号右边不写任何值。</p>\n<h2 id=\"输出变量-export-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#输出变量-export-命令\"><span>输出变量，export 命令</span></a></h2>\n<p>用户创建的变量仅可用于当前 Shell，子 Shell 默认读取不到父 Shell 定义的变量。为了把变量传递给子 Shell，需要使用 <code v-pre>export</code> 命令。这样输出的变量，对于子 Shell 来说就是环境变量。</p>\n<p><code v-pre>export</code> 命令用来向子 Shell 输出变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span></span></code></pre>\n</div><p>上面命令输出了变量 <code v-pre>NAME</code>。变量的赋值和输出也可以在一个步骤中完成。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> NAME</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n</div><p>上面命令执行后，当前 Shell 及随后新建的子 Shell，都可以读取变量 <code v-pre>$NAME</code>。</p>\n<p>子 Shell 如果修改继承的变量，不会影响父 Shell。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 输出变量 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 新建子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bash</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 修改继承的变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=baz</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 退出子 Shell</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> exit</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 读取 $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，子 Shell 修改了继承的变量 <code v-pre>$foo</code>，对父 Shell 没有影响。</p>\n<h2 id=\"特殊变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特殊变量\"><span>特殊变量</span></a></h2>\n<p>Bash 提供一些特殊变量。这些变量的值由 Shell 提供，用户不能进行赋值。</p>\n<p>(1) <code v-pre>$?</code></p>\n<p><code v-pre>$?</code> 为上一个命令的退出码，用来判断上一个命令是否执行成功。返回值是 <code v-pre>0</code>，表示上一个命令执行成功；如果是非零，上一个命令执行失败。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ls</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">ls:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> doesnotexist:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> No</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> such</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> or</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> directory</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>ls</code> 命令查看一个不存在的文件，导致报错。<code v-pre>$?</code> 为 1，表示上一个命令执行失败。</p>\n<p>(2) <code v-pre>$$</code></p>\n<p><code v-pre>$$</code> 为当前 Shell 的进程 ID。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $$</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">10662</span></span></code></pre>\n</div><p>这个特殊变量可以用来命名临时文件。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">LOGFILE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/tmp/output_log.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$$</span></span></code></pre>\n</div><p>(3) <code v-pre>$_</code></p>\n<p><code v-pre>$_</code> 为上一个命令的最后一个参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> dictionary</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> /usr/share/dict/words</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">dictionary</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $_</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">/usr/share/dict/words</span></span></code></pre>\n</div><p>(4) <code v-pre>$!</code></p>\n<p><code v-pre>$!</code> 为最近一个后台执行的异步命令的进程 ID。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> firefox</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x26;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[1] </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">11064</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>firefox</code> 是后台运行的命令，<code v-pre>$!</code> 返回该命令的进程 ID。</p>\n<p>(5) <code v-pre>$0</code></p>\n<p><code v-pre>$0</code> 为当前 Shell 的名称(在命令行直接执行时)或者脚本名(在脚本中执行时)。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\"> $0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>$0</code> 返回当前运行的是 Bash。</p>\n<p>(6) <code v-pre>$-</code></p>\n<p><code v-pre>$-</code> 为当前 Shell 的启动参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $-</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">himBHs</span></span></code></pre>\n</div><p>(7) <code v-pre>$@</code> 和 <code v-pre>$#</code></p>\n<p><code v-pre>$@</code> 和 <code v-pre>$#</code> 表示脚本的参数数量，参见脚本一章。</p>\n<h2 id=\"变量的默认值\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#变量的默认值\"><span>变量的默认值</span></a></h2>\n<p>Bash 提供四个特殊语法，跟变量的默认值有关，目的是保证变量不为空。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:-</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则返回 <code v-pre>word</code>。它的目的是返回一个默认值，比如 <code v-pre>${count:-0}</code> 表示变量 <code v-pre>count</code> 不存在时返回 <code v-pre>0</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则将它设为 <code v-pre>word</code>，并且返回 <code v-pre>word</code>。它的目的是设置变量的默认值，比如 <code v-pre>${count:=0}</code> 表示变量 <code v-pre>count</code> 不存在时返回 <code v-pre>0</code>，且将 <code v-pre>count</code> 设为 <code v-pre>0</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:+</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">word</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量名存在且不为空，则返回 <code v-pre>word</code>，否则返回空值。它的目的是测试变量是否存在，比如 <code v-pre>${count:+1}</code> 表示变量 <code v-pre>count</code> 存在时返回 <code v-pre>1</code>(表示 <code v-pre>true</code>)，否则返回空值。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">${</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">varname</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">message</span><span style=\"--shiki-light:#E45649;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面语法的含义是，如果变量 <code v-pre>varname</code> 存在且不为空，则返回它的值，否则打印出 <code v-pre>varname: message</code>，并中断脚本的执行。如果省略了 <code v-pre>message</code>，则输出默认的信息“parameter null or not set.”。它的目的是防止变量未定义，比如 <code v-pre>${count:?&quot;undefined!&quot;}</code> 表示变量 <code v-pre>count</code> 未定义时就中断执行，抛出错误，返回给定的报错信息 <code v-pre>undefined!</code>。</p>\n<p>上面四种语法如果用在脚本中，变量名的部分可以用到数字 <code v-pre>1</code> 到 <code v-pre>9</code>，表示脚本的参数。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">filename</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">${1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">:?</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename missing.\"</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">}</span></span></code></pre>\n</div><p>上面代码出现在脚本中，<code v-pre>1</code> 表示脚本的第一个参数。如果该参数不存在，就退出脚本并报错。</p>\n<h2 id=\"declare-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#declare-命令\"><span>declare 命令</span></a></h2>\n<p><code v-pre>declare</code> 命令可以声明一些特殊类型的变量，为变量设置一些限制，比如声明只读类型的变量和整数类型的变量。</p>\n<p>它的语法形式如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> OPTION</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> VARIABLE</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">value</span></span></code></pre>\n</div><p><code v-pre>declare</code> 命令的主要参数(OPTION)如下。</p>\n<ul>\n<li><code v-pre>-a</code>: 声明数组变量。</li>\n<li><code v-pre>-f</code>: 输出所有函数定义。</li>\n<li><code v-pre>-F</code>: 输出所有函数名。</li>\n<li><code v-pre>-i</code>: 声明整数变量。</li>\n<li><code v-pre>-l</code>: 声明变量为小写字母。</li>\n<li><code v-pre>-p</code>: 查看变量信息。</li>\n<li><code v-pre>-r</code>: 声明只读变量。</li>\n<li><code v-pre>-u</code>: 声明变量为大写字母。</li>\n<li><code v-pre>-x</code>: 该变量输出为环境变量。</li>\n</ul>\n<p><code v-pre>declare</code> 命令如果用在函数中，声明的变量只在函数内部有效，等同于 <code v-pre>local</code> 命令。</p>\n<p>不带任何参数时，<code v-pre>declare</code> 命令输出当前环境的所有变量，包括函数在内，等同于不带有任何参数的 <code v-pre>set</code> 命令。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span></span></code></pre>\n</div><p><strong>(1) <code v-pre>-i</code> 参数</strong></p>\n<p><code v-pre>-i</code> 参数声明整数变量以后，可以直接进行数学运算。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val1=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> val2=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> result=val1</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">*</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">val2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $result</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">60</span></span></code></pre>\n</div><p>上面例子中，如果变量 <code v-pre>result</code> 不声明为整数，<code v-pre>val1*val2</code> 会被当作字面量，不会进行整数运算。另外，<code v-pre>val1</code> 和 <code v-pre>val2</code> 其实不需要声明为整数，因为只要 <code v-pre>result</code> 声明为整数，它的赋值就会自动解释为整数运算。</p>\n<p>注意，一个变量声明为整数以后，依然可以被改写为字符串。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -i</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">12</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> var=foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $var</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">0</span></span></code></pre>\n</div><p>上面例子中，变量 <code v-pre>var</code> 声明为整数，覆盖以后，Bash 不会报错，但会赋以不确定的值，上面的例子中可能输出 0，也可能输出的是 3。</p>\n<p><strong>(2) <code v-pre>-x</code> 参数</strong></p>\n<p><code v-pre>-x</code> 参数等同于 <code v-pre>export</code> 命令，可以输出一个变量为子 Shell 的环境变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 等同于</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> export</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span></code></pre>\n</div><p><strong>(3) <code v-pre>-r</code> 参数</strong></p>\n<p><code v-pre>-r</code> 参数可以声明只读变量，无法改变变量值，也不能 <code v-pre>unset</code> 变量。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -r</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> unset</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面例子中，后两个赋值语句都会报错，命令执行失败。</p>\n<p><strong>(4) <code v-pre>-u</code> 参数</strong></p>\n<p><code v-pre>-u</code> 参数声明变量为大写字母，可以自动把变量值转成大写字母。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -u</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=upper</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">UPPER</span></span></code></pre>\n</div><p><strong>(5) <code v-pre>-l</code> 参数</strong></p>\n<p><code v-pre>-l</code> 参数声明变量为小写字母，可以自动把变量值转成小写字母。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -l</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar=LOWER</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">lower</span></span></code></pre>\n</div><p><strong>(6) <code v-pre>-p</code> 参数</strong></p>\n<p><code v-pre>-p</code> 参数输出变量信息。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=hello</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> --</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> foo</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"hello\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bar</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bar:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 未找到</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>declare -p</code> 可以输出已定义变量的值，对于未定义的变量，会提示找不到。</p>\n<p>如果不提供变量名，<code v-pre>declare -p</code> 输出所有变量的信息。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -p</span></span></code></pre>\n</div><p><strong>(7) <code v-pre>-f</code> 参数</strong></p>\n<p><code v-pre>-f</code> 参数输出当前环境的所有函数，包括它的定义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -f</span></span></code></pre>\n</div><p><strong>(8) <code v-pre>-F</code> 参数</strong></p>\n<p><code v-pre>-F</code> 参数输出当前环境的所有函数名，不包含函数定义。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">declare</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -F</span></span></code></pre>\n</div><h2 id=\"readonly-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#readonly-命令\"><span>readonly 命令</span></a></h2>\n<p><code v-pre>readonly</code> 命令等同于 <code v-pre>declare -r</code>，用来声明只读变量，不能改变变量值，也不能 <code v-pre>unset</code> 变量。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> readonly</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 只读变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> $?</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span></span></code></pre>\n</div><p>上面例子中，更改只读变量 <code v-pre>foo</code> 会报错，命令执行失败。</p>\n<p><code v-pre>readonly</code> 命令有三个参数。</p>\n<ul>\n<li><code v-pre>-f</code>: 声明的变量为函数名。</li>\n<li><code v-pre>-p</code>: 打印出所有的只读变量。</li>\n<li><code v-pre>-a</code>: 声明的变量为数组。</li>\n</ul>\n<h2 id=\"let-命令\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#let-命令\"><span>let 命令</span></a></h2>\n<p><code v-pre>let</code> 命令声明变量时，可以直接执行算术表达式。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> foo=1+2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $foo</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">3</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>let</code> 命令可以直接计算 <code v-pre>1 + 2</code>。</p>\n<p><code v-pre>let</code> 命令的参数表达式如果包含空格，就需要使用引号。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"foo = 1 + 2\"</span></span></code></pre>\n</div><p><code v-pre>let</code> 可以同时对多个变量赋值，赋值表达式之间使用空格分隔。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> let</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v1 = 1\"</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"v2 = v1++\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> echo</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $v1</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">,</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$v2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2,1</span></span></code></pre>\n</div><p>上面例子中，<code v-pre>let</code> 声明了两个变量 <code v-pre>v1</code> 和 <code v-pre>v2</code>，其中 <code v-pre>v2</code> 等于 <code v-pre>v1++</code>，表示先返回 <code v-pre>v1</code> 的值，然后 <code v-pre>v1</code> 自增。</p>\n<p>这种语法支持的运算符，参考《Bash 的算术运算》一章。</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\nBash 变量分成环境变量和自定义变量两类。\n\n<!-- more -->\n\n## 简介\n\n环境变量是 Bash 环境自带的变量，进入 Shell 时已经定义好了，可以直接使用。它们通常是系统定义好的，也可以由用户从父 Shell 传入子 Shell。\n\n`env` 命令或 `printenv` 命令，可以显示所有环境变量。\n\n```bash\n$ env\n# 或者\n$ printenv\n```\n\n下面是一些常见的环境变量。\n\n- `BASHPID`: Bash 进程的进程 ID。\n- `BASHOPTS`: 当前 Shell 的参数，可以用 `shopt` 命令修改。\n- `DISPLAY`: 图形环境的显示器名字，通常是 `:0`，表示 X Server 的第一个显示器。\n- `EDITOR`: 默认的文本编辑器。\n- `HOME`: 用户的主目录。\n- `HOST`: 当前主机的名称。\n- `IFS`: 词与词之间的分隔符，默认为空格。\n- `LANG`: 字符集以及语言编码，比如 `zh_CN.UTF-8`。\n- `PATH`: 由冒号分开的目录列表，当输入可执行程序名后，会搜索这个目录列表。\n- `PS1`: Shell 提示符。\n- `PS2`: 输入多行命令时，次要的 Shell 提示符。\n- `PWD`: 当前工作目录。\n- `RANDOM`: 返回一个 0 到 32767 之间的随机数。\n- `SHELL`: Shell 的名字。\n- `SHELLOPTS`: 启动当前 Shell 的 `set` 命令的参数，参见《set 命令》一章。\n- `TERM`: 终端类型名，即终端仿真器所用的协议。\n- `UID`: 当前用户的 ID 编号。\n- `USER`: 当前用户的用户名。\n\n很多环境变量很少发生变化，而且是只读的，可以视为常量。由于它们的变量名全部都是大写，所以传统上，如果用户要自己定义一个常量，也会使用全部大写的变量名。\n\n注意，Bash 变量名区分大小写，`HOME` 和 `home` 是两个不同的变量。\n\n查看单个环境变量的值，可以使用 `printenv` 命令或 `echo` 命令。\n\n```bash\n$ printenv PATH\n# 或者\n$ echo $PATH\n```\n\n注意，`printenv` 命令后面的变量名，不用加前缀 `$`。\n\n自定义变量是用户在当前 Shell 里面自己定义的变量，必须先定义后使用，而且仅在当前 Shell 可用。一旦退出当前 Shell，该变量就不存在了。\n\n`set` 命令可以显示所有变量(包括环境变量和自定义变量)，以及所有的 Bash 函数。\n\n```bash\nset\n```\n\n## 创建变量\n\n用户创建变量的时候，变量名必须遵守下面的规则。\n\n- 字母、数字和下划线字符组成。\n- 第一个字符必须是一个字母或一个下划线，不能是数字。\n- 不允许出现空格和标点符号。\n\n变量声明的语法如下。\n\n```bash\nvariable=value\n```\n\n上面命令中，等号左边是变量名，右边是变量。注意，等号两边不能有空格。\n\n如果变量的值包含空格，则必须将值放在引号中。\n\n```bash\nmyvar=\"hello world\"\n```\n\nBash 没有数据类型的概念，所有的变量值都是字符串。\n\n下面是一些自定义变量的例子。\n\n```bash\na=z                     # 变量 a 赋值为字符串 z\nb=\"a string\"            # 变量值包含空格，就必须放在引号里面\nc=\"a string and $b\"     # 变量值可以引用其他变量的值\nd=\"\\t\\ta string\\n\"      # 变量值可以使用转义字符\ne=$(ls -l foo.txt)      # 变量值可以是命令的执行结果\nf=$((5 * 7))            # 变量值可以是数学运算的结果\n```\n\n变量可以重复赋值，后面的赋值会覆盖前面的赋值。\n\n```bash\n$ foo=1\n$ foo=2\n$ echo $foo\n2\n```\n\n上面例子中，变量 `foo` 的第二次赋值会覆盖第一次赋值。\n\n## 读取变量\n\n读取变量的时候，直接在变量名前加上 `$` 就可以了。\n\n```bash\n$ foo=bar\n$ echo $foo\nbar\n```\n\n每当 Shell 看到以 `$` 开头的单词时，就会尝试读取这个变量名对应的值。\n\n如果变量不存在，Bash 不会报错，而会输出空字符。\n\n由于 `$` 在 Bash 中有特殊含义，把它当作美元符号使用时，一定要非常小心，\n\n```bash\n$ echo The total is $100.00\nThe total is 00.00\n```\n\n上面命令的原意是输入 `$100`，但是 Bash 将 `$1` 解释成了变量，该变量为空，因此输入就变成了 `00.00`。所以，如果要使用 `$` 的原义，需要在 `$` 前面放上反斜杠，进行转义。\n\n```bash\n$ echo The total is \\$100.00\nThe total is $100.00\n```\n\n读取变量的时候，变量名也可以使用花括号 `{}` 包围，比如 `$a` 也可以写成 `${a}`。这种写法可以用于变量名与其他字符连用的情况。\n\n```bash\n$ a=foo\n$ echo $a_file\n\n$ echo ${a}_file\nfoo_file\n```\n\n上面代码中，变量名 `a_file` 不会有任何输出，因为 Bash 将其整个解释为变量，而这个变量是不存在的。只有用花括号区分 `$a`，Bash 才能正确解读。\n\n事实上，读取变量的语法 `$foo`，可以看作是 `${foo}` 的简写形式。\n\n如果变量的值本身也是变量，可以使用 `${!varname}` 的语法，读取最终的值。\n\n```bash\n$ myvar=USER\n$ echo ${!myvar}\nruanyf\n```\n\n上面的例子中，变量 `myvar` 的值是 `USER`，`${!myvar}` 的写法将其展开成最终的值。\n\n## 删除变量\n\n`unset` 命令用来删除一个变量。\n\n```bash\nunset NAME\n```\n\n这个命令不是很有用。因为不存在的 Bash 变量一律等于空字符串，所以即使 `unset` 命令删除了变量，还是可以读取这个变量，值为空字符串。\n\n所以，删除一个变量，也可以将这个变量设成空字符串。\n\n```bash\nfoo=''\nfoo=\n```\n\n上面两种写法，都是删除了变量 `foo`。由于不存在的值默认为空字符串，所以后一种写法可以在等号右边不写任何值。\n\n## 输出变量，export 命令\n\n用户创建的变量仅可用于当前 Shell，子 Shell 默认读取不到父 Shell 定义的变量。为了把变量传递给子 Shell，需要使用 `export` 命令。这样输出的变量，对于子 Shell 来说就是环境变量。\n\n`export` 命令用来向子 Shell 输出变量。\n\n```bash\nNAME=foo\nexport NAME\n```\n\n上面命令输出了变量 `NAME`。变量的赋值和输出也可以在一个步骤中完成。\n\n```bash\nexport NAME=value\n```\n\n上面命令执行后，当前 Shell 及随后新建的子 Shell，都可以读取变量 `$NAME`。\n\n子 Shell 如果修改继承的变量，不会影响父 Shell。\n\n```bash\n# 输出变量 $foo\n$ export foo=bar\n\n# 新建子 Shell\n$ bash\n\n# 读取 $foo\n$ echo $foo\nbar\n\n# 修改继承的变量\n$ foo=baz\n\n# 退出子 Shell\n$ exit\n\n# 读取 $foo\n$ echo $foo\nbar\n```\n\n上面例子中，子 Shell 修改了继承的变量 `$foo`，对父 Shell 没有影响。\n\n## 特殊变量\n\nBash 提供一些特殊变量。这些变量的值由 Shell 提供，用户不能进行赋值。\n\n(1) `$?`\n\n`$?` 为上一个命令的退出码，用来判断上一个命令是否执行成功。返回值是 `0`，表示上一个命令执行成功；如果是非零，上一个命令执行失败。\n\n```bash\n$ ls doesnotexist\nls: doesnotexist: No such file or directory\n\n$ echo $?\n1\n```\n\n上面例子中，`ls` 命令查看一个不存在的文件，导致报错。`$?` 为 1，表示上一个命令执行失败。\n\n(2) `$$`\n\n`$$` 为当前 Shell 的进程 ID。\n\n```bash\n$ echo $$\n10662\n```\n\n这个特殊变量可以用来命名临时文件。\n\n```bash\nLOGFILE=/tmp/output_log.$$\n```\n\n(3) `$_`\n\n`$_` 为上一个命令的最后一个参数。\n\n```bash\n$ grep dictionary /usr/share/dict/words\ndictionary\n\n$ echo $_\n/usr/share/dict/words\n```\n\n(4) `$!`\n\n`$!` 为最近一个后台执行的异步命令的进程 ID。\n\n```bash\n$ firefox &\n[1] 11064\n\n$ echo $!\n11064\n```\n\n上面例子中，`firefox` 是后台运行的命令，`$!` 返回该命令的进程 ID。\n\n(5) `$0`\n\n`$0` 为当前 Shell 的名称(在命令行直接执行时)或者脚本名(在脚本中执行时)。\n\n```bash\n$ echo $0\nbash\n```\n\n上面例子中，`$0` 返回当前运行的是 Bash。\n\n(6) `$-`\n\n`$-` 为当前 Shell 的启动参数。\n\n```bash\n$ echo $-\nhimBHs\n```\n\n(7) `$@` 和 `$#`\n\n`$@` 和 `$#` 表示脚本的参数数量，参见脚本一章。\n\n## 变量的默认值\n\nBash 提供四个特殊语法，跟变量的默认值有关，目的是保证变量不为空。\n\n```bash\n${varname:-word}\n```\n\n上面语法的含义是，如果变量 `varname` 存在且不为空，则返回它的值，否则返回 `word`。它的目的是返回一个默认值，比如 `${count:-0}` 表示变量 `count` 不存在时返回 `0`。\n\n```bash\n${varname:=word}\n```\n\n上面语法的含义是，如果变量 `varname` 存在且不为空，则返回它的值，否则将它设为 `word`，并且返回 `word`。它的目的是设置变量的默认值，比如 `${count:=0}` 表示变量 `count` 不存在时返回 `0`，且将 `count` 设为 `0`。\n\n```bash\n${varname:+word}\n```\n\n上面语法的含义是，如果变量名存在且不为空，则返回 `word`，否则返回空值。它的目的是测试变量是否存在，比如 `${count:+1}` 表示变量 `count` 存在时返回 `1`(表示 `true`)，否则返回空值。\n\n```bash\n${varname:?message}\n```\n\n上面语法的含义是，如果变量 `varname` 存在且不为空，则返回它的值，否则打印出 `varname: message`，并中断脚本的执行。如果省略了 `message`，则输出默认的信息“parameter null or not set.”。它的目的是防止变量未定义，比如 `${count:?\"undefined!\"}` 表示变量 `count` 未定义时就中断执行，抛出错误，返回给定的报错信息 `undefined!`。\n\n上面四种语法如果用在脚本中，变量名的部分可以用到数字 `1` 到 `9`，表示脚本的参数。\n\n```bash\nfilename=${1:?\"filename missing.\"}\n```\n\n上面代码出现在脚本中，`1` 表示脚本的第一个参数。如果该参数不存在，就退出脚本并报错。\n\n## declare 命令\n\n`declare` 命令可以声明一些特殊类型的变量，为变量设置一些限制，比如声明只读类型的变量和整数类型的变量。\n\n它的语法形式如下。\n\n```bash\ndeclare OPTION VARIABLE=value\n```\n\n`declare` 命令的主要参数(OPTION)如下。\n\n- `-a`: 声明数组变量。\n- `-f`: 输出所有函数定义。\n- `-F`: 输出所有函数名。\n- `-i`: 声明整数变量。\n- `-l`: 声明变量为小写字母。\n- `-p`: 查看变量信息。\n- `-r`: 声明只读变量。\n- `-u`: 声明变量为大写字母。\n- `-x`: 该变量输出为环境变量。\n\n`declare` 命令如果用在函数中，声明的变量只在函数内部有效，等同于 `local` 命令。\n\n不带任何参数时，`declare` 命令输出当前环境的所有变量，包括函数在内，等同于不带有任何参数的 `set` 命令。\n\n```bash\ndeclare\n```\n\n**(1) `-i` 参数**\n\n`-i` 参数声明整数变量以后，可以直接进行数学运算。\n\n```bash\n$ declare -i val1=12 val2=5\n$ declare -i result\n$ result=val1*val2\n$ echo $result\n60\n```\n\n上面例子中，如果变量 `result` 不声明为整数，`val1*val2` 会被当作字面量，不会进行整数运算。另外，`val1` 和 `val2` 其实不需要声明为整数，因为只要 `result` 声明为整数，它的赋值就会自动解释为整数运算。\n\n注意，一个变量声明为整数以后，依然可以被改写为字符串。\n\n```bash\n$ declare -i var=12\n$ var=foo\n$ echo $var\n0\n```\n\n上面例子中，变量 `var` 声明为整数，覆盖以后，Bash 不会报错，但会赋以不确定的值，上面的例子中可能输出 0，也可能输出的是 3。\n\n**(2) `-x` 参数**\n\n`-x` 参数等同于 `export` 命令，可以输出一个变量为子 Shell 的环境变量。\n\n```bash\n$ declare -x foo\n# 等同于\n$ export foo\n```\n\n**(3) `-r` 参数**\n\n`-r` 参数可以声明只读变量，无法改变变量值，也不能 `unset` 变量。\n\n```bash\n$ declare -r bar=1\n\n$ bar=2\nbash: bar: 只读变量\n$ echo $?\n1\n\n$ unset bar\nbash: bar: 只读变量\n$ echo $?\n1\n```\n\n上面例子中，后两个赋值语句都会报错，命令执行失败。\n\n**(4) `-u` 参数**\n\n`-u` 参数声明变量为大写字母，可以自动把变量值转成大写字母。\n\n```bash\n$ declare -u foo\n$ foo=upper\n$ echo $foo\nUPPER\n```\n\n**(5) `-l` 参数**\n\n`-l` 参数声明变量为小写字母，可以自动把变量值转成小写字母。\n\n```bash\n$ declare -l bar\n$ bar=LOWER\n$ echo $bar\nlower\n```\n\n**(6) `-p` 参数**\n\n`-p` 参数输出变量信息。\n\n```bash\n$ foo=hello\n$ declare -p foo\ndeclare -- foo=\"hello\"\n$ declare -p bar\nbar: 未找到\n```\n\n上面例子中，`declare -p` 可以输出已定义变量的值，对于未定义的变量，会提示找不到。\n\n如果不提供变量名，`declare -p` 输出所有变量的信息。\n\n```bash\ndeclare -p\n```\n\n**(7) `-f` 参数**\n\n`-f` 参数输出当前环境的所有函数，包括它的定义。\n\n```bash\ndeclare -f\n```\n\n**(8) `-F` 参数**\n\n`-F` 参数输出当前环境的所有函数名，不包含函数定义。\n\n```bash\ndeclare -F\n```\n\n## readonly 命令\n\n`readonly` 命令等同于 `declare -r`，用来声明只读变量，不能改变变量值，也不能 `unset` 变量。\n\n```bash\n$ readonly foo=1\n$ foo=2\nbash: foo: 只读变量\n$ echo $?\n1\n```\n\n上面例子中，更改只读变量 `foo` 会报错，命令执行失败。\n\n`readonly` 命令有三个参数。\n\n- `-f`: 声明的变量为函数名。\n- `-p`: 打印出所有的只读变量。\n- `-a`: 声明的变量为数组。\n\n## let 命令\n\n`let` 命令声明变量时，可以直接执行算术表达式。\n\n```bash\n$ let foo=1+2\n$ echo $foo\n3\n```\n\n上面例子中，`let` 命令可以直接计算 `1 + 2`。\n\n`let` 命令的参数表达式如果包含空格，就需要使用引号。\n\n```bash\nlet \"foo = 1 + 2\"\n```\n\n`let` 可以同时对多个变量赋值，赋值表达式之间使用空格分隔。\n\n```bash\n$ let \"v1 = 1\" \"v2 = v1++\"\n$ echo $v1,$v2\n2,1\n```\n\n上面例子中，`let` 声明了两个变量 `v1` 和 `v2`，其中 `v2` 等于 `v1++`，表示先返回 `v1` 的值，然后 `v1` 自增。\n\n这种语法支持的运算符，参考《Bash 的算术运算》一章。\n","excerpt":"","title":"","headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"创建变量","slug":"创建变量","link":"#创建变量","children":[]},{"level":2,"title":"读取变量","slug":"读取变量","link":"#读取变量","children":[]},{"level":2,"title":"删除变量","slug":"删除变量","link":"#删除变量","children":[]},{"level":2,"title":"输出变量，export 命令","slug":"输出变量-export-命令","link":"#输出变量-export-命令","children":[]},{"level":2,"title":"特殊变量","slug":"特殊变量","link":"#特殊变量","children":[]},{"level":2,"title":"变量的默认值","slug":"变量的默认值","link":"#变量的默认值","children":[]},{"level":2,"title":"declare 命令","slug":"declare-命令","link":"#declare-命令","children":[]},{"level":2,"title":"readonly 命令","slug":"readonly-命令","link":"#readonly-命令","children":[]},{"level":2,"title":"let 命令","slug":"let-命令","link":"#let-命令","children":[]}]}}
