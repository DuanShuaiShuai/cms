{"content":"<p>宿主环境是微信客户端给小程序所提供的环境。小程序借助宿主环境提供的能力，可以完成许多普通网页无法完成的功能。</p>\n<!-- more -->\n<h2 id=\"渲染层和逻辑层\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#渲染层和逻辑层\"><span>渲染层和逻辑层</span></a></h2>\n<p>小程序的运行环境分成渲染层和逻辑层。</p>\n<ul>\n<li>WXML 模板和 WXSS 样式工作在渲染层；</li>\n<li>JS 脚本工作在逻辑层。</li>\n</ul>\n<p>小程序的渲染层和逻辑层分别由 2 个线程管理:</p>\n<ul>\n<li>渲染层的界面使用了 WebView 进行渲染；</li>\n<li>逻辑层采用 JsCore 线程运行 JS 脚本。</li>\n</ul>\n<p>一个小程序存在多个界面，所以渲染层存在多个 WebView 线程，这两个线程的通信会经由微信客户端(Native)做中转，逻辑层发送网络请求也经由 Native 转发，小程序的通信模型下图所示。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/4-1.ad156d1c.png\" alt=\"通信模型\" tabindex=\"0\" loading=\"lazy\"><figcaption>通信模型</figcaption></figure>\n<h2 id=\"程序与页面\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#程序与页面\"><span>程序与页面</span></a></h2>\n<p>微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。</p>\n<p>客户端通过 <code v-pre>app.json</code> 的 <code v-pre>pages</code> 字段获得当前小程序的所有页面路径:</p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"pages\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"pages/index/index\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"pages/logs/logs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>QuickStart 项目通过该配置定义了两个页面，分别位于 <code v-pre>pages/index/index</code> 和 <code v-pre>pages/logs/logs</code>。写在 <code v-pre>pages</code> 字段的第一个页面就是这个小程序的首页(打开小程序看到的第一个页面)。</p>\n</div>\n<p>于是微信客户端就把首页的代码装载进来，染出这个首页。</p>\n<p>小程序启动之后，在 <code v-pre>app.js</code> 定义的 <code v-pre>App</code> 实例的 <code v-pre>onLaunch</code> 回调会被执行:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">App</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLaunch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 小程序启动之后 触发</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>整个小程序只有一个 App 实例，是全部页面共享的，更多的事件回调参考文档 <RouteLink to=\"/code/mini-app/guide/service/app.html\">注册程序 App</RouteLink> 。</p>\n<p>接下来我们简单看看小程序的一个页面是怎么写的。</p>\n<p>您可以观察到 <code v-pre>pages/logs/logs</code> 下其实是包括了 4 种文件的，微信客户端会先根据 <code v-pre>logs.json</code> 配置生成一个界面，顶部的颜色和文字您都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 <code v-pre>logs.js</code>，您可以看到 <code v-pre>logs.js</code> 的大体内容就是:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 参与页面渲染的数据</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    logs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 页面渲染后 执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>Page 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 <code v-pre>data</code> 数据和对应的 wxml 一起渲染出最终的结构，于是就得到了您看到的小程序的样子。</p>\n<p>在渲染完界面之后，页面实例就会收到一个 <code v-pre>onLoad</code> 的回调，您可以在这个回调处理您的逻辑。</p>\n<p>有关于 Page 构造器更多详细的文档参考 <RouteLink to=\"/code/mini-app/guide/service/page.html\">注册页面 Page</RouteLink>。</p>\n<h2 id=\"组件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#组件\"><span>组件</span></a></h2>\n<p>小程序提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼合成自己的小程序。</p>\n<p>就像 HTML 的 <code v-pre>div</code>, <code v-pre>p</code> 等标签一样，在小程序里边，您只需要在 WXML 写上对应的组件标签名字就可以把该组件显示在界面上，例如，您需要在界面上显示地图，您只需要这样写即可:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>使用组件的时候，还可以通过属性传递值给组件，让组件可以以不同的状态去展现，例如，我们希望地图一开始的中心的经纬度是长春，那么您需要声明地图的 <code v-pre>longitude</code>(中心经度) 和 <code v-pre>latitude</code>(中心纬度)两个属性:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春经度\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春纬度\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>组件的内部行为也会通过事件的形式让开发者可以感知，例如用户点击了地图上的某个标记，您可以在 js 编写 markertap 函数来处理:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> bindmarkertap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"markertap\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春经度\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春纬度\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>当然您也可以通过 <code v-pre>style</code> 或者 <code v-pre>class</code> 来控制组件的外层样式，以便适应您的界面宽度高度等等。</p>\n<h2 id=\"api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#api\"><span>API</span></a></h2>\n<p>为了让开发者可以很方便的调起微信提供的能力，例如获取用户信息、微信支付等等，小程序提供了很多 API 给开发者去使用。</p>\n<p>要获取用户的地理位置时，只需要:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLocation</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  type</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"wgs84\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> } </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 获取经纬度</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>调用微信扫一扫能力，只需要:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">scanCode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>需要注意的是: 多数 API 的回调都是异步，您需要处理好代码逻辑的异步问题。</p>\n<p>更多的 API 能力见 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\" target=\"_blank\" rel=\"noopener noreferrer\">小程序的 API</a>。</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/mini-app/guide/env.md","filePathRelative":"code/mini-app/guide/env.md","frontmatter":{"date":"2020-10-09T00:00:00.000Z","title":"宿主环境","icon":"leaf","category":"小程序"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>宿主环境是微信客户端给小程序所提供的环境。小程序借助宿主环境提供的能力，可以完成许多普通网页无法完成的功能。</p>\n<!-- more -->\n<h2 id=\"渲染层和逻辑层\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#渲染层和逻辑层\"><span>渲染层和逻辑层</span></a></h2>\n<p>小程序的运行环境分成渲染层和逻辑层。</p>\n<ul>\n<li>WXML 模板和 WXSS 样式工作在渲染层；</li>\n<li>JS 脚本工作在逻辑层。</li>\n</ul>\n<p>小程序的渲染层和逻辑层分别由 2 个线程管理:</p>\n<ul>\n<li>渲染层的界面使用了 WebView 进行渲染；</li>\n<li>逻辑层采用 JsCore 线程运行 JS 脚本。</li>\n</ul>\n<p>一个小程序存在多个界面，所以渲染层存在多个 WebView 线程，这两个线程的通信会经由微信客户端(Native)做中转，逻辑层发送网络请求也经由 Native 转发，小程序的通信模型下图所示。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/4-1.ad156d1c.png\" alt=\"通信模型\" tabindex=\"0\" loading=\"lazy\"><figcaption>通信模型</figcaption></figure>\n<h2 id=\"程序与页面\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#程序与页面\"><span>程序与页面</span></a></h2>\n<p>微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。</p>\n<p>客户端通过 <code v-pre>app.json</code> 的 <code v-pre>pages</code> 字段获得当前小程序的所有页面路径:</p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"pages\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"pages/index/index\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"pages/logs/logs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>QuickStart 项目通过该配置定义了两个页面，分别位于 <code v-pre>pages/index/index</code> 和 <code v-pre>pages/logs/logs</code>。写在 <code v-pre>pages</code> 字段的第一个页面就是这个小程序的首页(打开小程序看到的第一个页面)。</p>\n</div>\n<p>于是微信客户端就把首页的代码装载进来，染出这个首页。</p>\n<p>小程序启动之后，在 <code v-pre>app.js</code> 定义的 <code v-pre>App</code> 实例的 <code v-pre>onLaunch</code> 回调会被执行:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">App</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLaunch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 小程序启动之后 触发</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>整个小程序只有一个 App 实例，是全部页面共享的，更多的事件回调参考文档 <RouteLink to=\"/code/mini-app/guide/service/app.html\">注册程序 App</RouteLink> 。</p>\n<p>接下来我们简单看看小程序的一个页面是怎么写的。</p>\n<p>您可以观察到 <code v-pre>pages/logs/logs</code> 下其实是包括了 4 种文件的，微信客户端会先根据 <code v-pre>logs.json</code> 配置生成一个界面，顶部的颜色和文字您都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 <code v-pre>logs.js</code>，您可以看到 <code v-pre>logs.js</code> 的大体内容就是:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 参与页面渲染的数据</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    logs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 页面渲染后 执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>Page 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 <code v-pre>data</code> 数据和对应的 wxml 一起渲染出最终的结构，于是就得到了您看到的小程序的样子。</p>\n<p>在渲染完界面之后，页面实例就会收到一个 <code v-pre>onLoad</code> 的回调，您可以在这个回调处理您的逻辑。</p>\n<p>有关于 Page 构造器更多详细的文档参考 <RouteLink to=\"/code/mini-app/guide/service/page.html\">注册页面 Page</RouteLink>。</p>\n<h2 id=\"组件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#组件\"><span>组件</span></a></h2>\n<p>小程序提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼合成自己的小程序。</p>\n<p>就像 HTML 的 <code v-pre>div</code>, <code v-pre>p</code> 等标签一样，在小程序里边，您只需要在 WXML 写上对应的组件标签名字就可以把该组件显示在界面上，例如，您需要在界面上显示地图，您只需要这样写即可:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>使用组件的时候，还可以通过属性传递值给组件，让组件可以以不同的状态去展现，例如，我们希望地图一开始的中心的经纬度是长春，那么您需要声明地图的 <code v-pre>longitude</code>(中心经度) 和 <code v-pre>latitude</code>(中心纬度)两个属性:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春经度\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春纬度\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>组件的内部行为也会通过事件的形式让开发者可以感知，例如用户点击了地图上的某个标记，您可以在 js 编写 markertap 函数来处理:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> bindmarkertap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"markertap\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春经度\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春纬度\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>当然您也可以通过 <code v-pre>style</code> 或者 <code v-pre>class</code> 来控制组件的外层样式，以便适应您的界面宽度高度等等。</p>\n<h2 id=\"api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#api\"><span>API</span></a></h2>\n<p>为了让开发者可以很方便的调起微信提供的能力，例如获取用户信息、微信支付等等，小程序提供了很多 API 给开发者去使用。</p>\n<p>要获取用户的地理位置时，只需要:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLocation</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  type</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"wgs84\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> } </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 获取经纬度</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>调用微信扫一扫能力，只需要:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">scanCode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>需要注意的是: 多数 API 的回调都是异步，您需要处理好代码逻辑的异步问题。</p>\n<p>更多的 API 能力见 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\" target=\"_blank\" rel=\"noopener noreferrer\">小程序的 API</a>。</p>\n</template>","contentStripped":"<p>宿主环境是微信客户端给小程序所提供的环境。小程序借助宿主环境提供的能力，可以完成许多普通网页无法完成的功能。</p>\n<!-- more -->\n<h2 id=\"渲染层和逻辑层\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#渲染层和逻辑层\"><span>渲染层和逻辑层</span></a></h2>\n<p>小程序的运行环境分成渲染层和逻辑层。</p>\n<ul>\n<li>WXML 模板和 WXSS 样式工作在渲染层；</li>\n<li>JS 脚本工作在逻辑层。</li>\n</ul>\n<p>小程序的渲染层和逻辑层分别由 2 个线程管理:</p>\n<ul>\n<li>渲染层的界面使用了 WebView 进行渲染；</li>\n<li>逻辑层采用 JsCore 线程运行 JS 脚本。</li>\n</ul>\n<p>一个小程序存在多个界面，所以渲染层存在多个 WebView 线程，这两个线程的通信会经由微信客户端(Native)做中转，逻辑层发送网络请求也经由 Native 转发，小程序的通信模型下图所示。</p>\n<figure><img src=\"https://res.wx.qq.com/wxdoc/dist/assets/img/4-1.ad156d1c.png\" alt=\"通信模型\" tabindex=\"0\" loading=\"lazy\"><figcaption>通信模型</figcaption></figure>\n<h2 id=\"程序与页面\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#程序与页面\"><span>程序与页面</span></a></h2>\n<p>微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。</p>\n<p>客户端通过 <code v-pre>app.json</code> 的 <code v-pre>pages</code> 字段获得当前小程序的所有页面路径:</p>\n<div class=\"language-json\" data-highlighter=\"shiki\" data-ext=\"json\" data-title=\"json\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  \"pages\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"pages/index/index\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"pages/logs/logs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><div class=\"hint-container tip\">\n<p class=\"hint-container-title\">提示</p>\n<p>QuickStart 项目通过该配置定义了两个页面，分别位于 <code v-pre>pages/index/index</code> 和 <code v-pre>pages/logs/logs</code>。写在 <code v-pre>pages</code> 字段的第一个页面就是这个小程序的首页(打开小程序看到的第一个页面)。</p>\n</div>\n<p>于是微信客户端就把首页的代码装载进来，染出这个首页。</p>\n<p>小程序启动之后，在 <code v-pre>app.js</code> 定义的 <code v-pre>App</code> 实例的 <code v-pre>onLaunch</code> 回调会被执行:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">App</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLaunch</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 小程序启动之后 触发</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>整个小程序只有一个 App 实例，是全部页面共享的，更多的事件回调参考文档 <RouteLink to=\"/code/mini-app/guide/service/app.html\">注册程序 App</RouteLink> 。</p>\n<p>接下来我们简单看看小程序的一个页面是怎么写的。</p>\n<p>您可以观察到 <code v-pre>pages/logs/logs</code> 下其实是包括了 4 种文件的，微信客户端会先根据 <code v-pre>logs.json</code> 配置生成一个界面，顶部的颜色和文字您都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 <code v-pre>logs.js</code>，您可以看到 <code v-pre>logs.js</code> 的大体内容就是:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Page</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  data</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 参与页面渲染的数据</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    logs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  onLoad</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">    // 页面渲染后 执行</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>Page 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 <code v-pre>data</code> 数据和对应的 wxml 一起渲染出最终的结构，于是就得到了您看到的小程序的样子。</p>\n<p>在渲染完界面之后，页面实例就会收到一个 <code v-pre>onLoad</code> 的回调，您可以在这个回调处理您的逻辑。</p>\n<p>有关于 Page 构造器更多详细的文档参考 <RouteLink to=\"/code/mini-app/guide/service/page.html\">注册页面 Page</RouteLink>。</p>\n<h2 id=\"组件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#组件\"><span>组件</span></a></h2>\n<p>小程序提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼合成自己的小程序。</p>\n<p>就像 HTML 的 <code v-pre>div</code>, <code v-pre>p</code> 等标签一样，在小程序里边，您只需要在 WXML 写上对应的组件标签名字就可以把该组件显示在界面上，例如，您需要在界面上显示地图，您只需要这样写即可:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>使用组件的时候，还可以通过属性传递值给组件，让组件可以以不同的状态去展现，例如，我们希望地图一开始的中心的经纬度是长春，那么您需要声明地图的 <code v-pre>longitude</code>(中心经度) 和 <code v-pre>latitude</code>(中心纬度)两个属性:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春经度\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春纬度\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>组件的内部行为也会通过事件的形式让开发者可以感知，例如用户点击了地图上的某个标记，您可以在 js 编写 markertap 函数来处理:</p>\n<div class=\"language-xml\" data-highlighter=\"shiki\" data-ext=\"xml\" data-title=\"xml\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">map</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> bindmarkertap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"markertap\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春经度\"</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"长春纬度\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /></span></span></code></pre>\n</div><p>当然您也可以通过 <code v-pre>style</code> 或者 <code v-pre>class</code> 来控制组件的外层样式，以便适应您的界面宽度高度等等。</p>\n<h2 id=\"api\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#api\"><span>API</span></a></h2>\n<p>为了让开发者可以很方便的调起微信提供的能力，例如获取用户信息、微信支付等等，小程序提供了很多 API 给开发者去使用。</p>\n<p>要获取用户的地理位置时，只需要:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">getLocation</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  type</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"wgs84\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    const</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> { </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#E5C07B\">longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> } </span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 获取经纬度</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">latitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">longitude</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>调用微信扫一扫能力，只需要:</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">wx</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">scanCode</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">({</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">  success</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">res</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>需要注意的是: 多数 API 的回调都是异步，您需要处理好代码逻辑的异步问题。</p>\n<p>更多的 API 能力见 <a href=\"https://developers.weixin.qq.com/miniprogram/dev/api/\" target=\"_blank\" rel=\"noopener noreferrer\">小程序的 API</a>。</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n宿主环境是微信客户端给小程序所提供的环境。小程序借助宿主环境提供的能力，可以完成许多普通网页无法完成的功能。\n\n<!-- more -->\n\n## 渲染层和逻辑层\n\n小程序的运行环境分成渲染层和逻辑层。\n\n- WXML 模板和 WXSS 样式工作在渲染层；\n- JS 脚本工作在逻辑层。\n\n小程序的渲染层和逻辑层分别由 2 个线程管理:\n\n- 渲染层的界面使用了 WebView 进行渲染；\n- 逻辑层采用 JsCore 线程运行 JS 脚本。\n\n一个小程序存在多个界面，所以渲染层存在多个 WebView 线程，这两个线程的通信会经由微信客户端(Native)做中转，逻辑层发送网络请求也经由 Native 转发，小程序的通信模型下图所示。\n\n![通信模型](https://res.wx.qq.com/wxdoc/dist/assets/img/4-1.ad156d1c.png)\n\n## 程序与页面\n\n微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。\n\n客户端通过 `app.json` 的 `pages` 字段获得当前小程序的所有页面路径:\n\n```json\n{\n  \"pages\": [\"pages/index/index\", \"pages/logs/logs\"]\n}\n```\n\n::: tip\n\nQuickStart 项目通过该配置定义了两个页面，分别位于 `pages/index/index` 和 `pages/logs/logs`。写在 `pages` 字段的第一个页面就是这个小程序的首页(打开小程序看到的第一个页面)。\n\n:::\n\n于是微信客户端就把首页的代码装载进来，染出这个首页。\n\n小程序启动之后，在 `app.js` 定义的 `App` 实例的 `onLaunch` 回调会被执行:\n\n```js\nApp({\n  onLaunch() {\n    // 小程序启动之后 触发\n  },\n});\n```\n\n整个小程序只有一个 App 实例，是全部页面共享的，更多的事件回调参考文档 [注册程序 App](service/app.md) 。\n\n接下来我们简单看看小程序的一个页面是怎么写的。\n\n您可以观察到 `pages/logs/logs` 下其实是包括了 4 种文件的，微信客户端会先根据 `logs.json` 配置生成一个界面，顶部的颜色和文字您都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 `logs.js`，您可以看到 `logs.js` 的大体内容就是:\n\n```js\nPage({\n  data: {\n    // 参与页面渲染的数据\n    logs: [],\n  },\n  onLoad() {\n    // 页面渲染后 执行\n  },\n});\n```\n\nPage 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 `data` 数据和对应的 wxml 一起渲染出最终的结构，于是就得到了您看到的小程序的样子。\n\n在渲染完界面之后，页面实例就会收到一个 `onLoad` 的回调，您可以在这个回调处理您的逻辑。\n\n有关于 Page 构造器更多详细的文档参考 [注册页面 Page](service/page.md)。\n\n## 组件\n\n小程序提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼合成自己的小程序。\n\n就像 HTML 的 `div`, `p` 等标签一样，在小程序里边，您只需要在 WXML 写上对应的组件标签名字就可以把该组件显示在界面上，例如，您需要在界面上显示地图，您只需要这样写即可:\n\n```xml\n<map />\n```\n\n使用组件的时候，还可以通过属性传递值给组件，让组件可以以不同的状态去展现，例如，我们希望地图一开始的中心的经纬度是长春，那么您需要声明地图的 `longitude`(中心经度) 和 `latitude`(中心纬度)两个属性:\n\n```xml\n<map longitude=\"长春经度\" latitude=\"长春纬度\" />\n```\n\n组件的内部行为也会通过事件的形式让开发者可以感知，例如用户点击了地图上的某个标记，您可以在 js 编写 markertap 函数来处理:\n\n```xml\n<map bindmarkertap=\"markertap\" longitude=\"长春经度\" latitude=\"长春纬度\" />\n```\n\n当然您也可以通过 `style` 或者 `class` 来控制组件的外层样式，以便适应您的界面宽度高度等等。\n\n## API\n\n为了让开发者可以很方便的调起微信提供的能力，例如获取用户信息、微信支付等等，小程序提供了很多 API 给开发者去使用。\n\n要获取用户的地理位置时，只需要:\n\n```js\nwx.getLocation({\n  type: \"wgs84\",\n  success: (res) => {\n    const { latitude, longitude } = res; // 获取经纬度\n    console.log(latitude, longitude);\n  },\n});\n```\n\n调用微信扫一扫能力，只需要:\n\n```js\nwx.scanCode({\n  success: (res) => {\n    console.log(res);\n  },\n});\n```\n\n需要注意的是: 多数 API 的回调都是异步，您需要处理好代码逻辑的异步问题。\n\n更多的 API 能力见 [小程序的 API](https://developers.weixin.qq.com/miniprogram/dev/api/)。\n","excerpt":"","title":"","headers":[{"level":2,"title":"渲染层和逻辑层","slug":"渲染层和逻辑层","link":"#渲染层和逻辑层","children":[]},{"level":2,"title":"程序与页面","slug":"程序与页面","link":"#程序与页面","children":[]},{"level":2,"title":"组件","slug":"组件","link":"#组件","children":[]},{"level":2,"title":"API","slug":"api","link":"#api","children":[]}],"links":[{"raw":"service/app.md","relative":"code/mini-app/guide/service/app.md","absolute":"/code/mini-app/guide/service/app.md"},{"raw":"service/page.md","relative":"code/mini-app/guide/service/page.md","absolute":"/code/mini-app/guide/service/page.md"}]}}
