{"content":"<h2 id=\"session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#session\"><span>Session</span></a></h2>\n<p>用户每次使用 Shell，都会开启一个与 Shell 的 Session(对话)。</p>\n<p>Session 有两种类型: 登录 Session 和非登录 Session，也可以叫做 login shell 和 non-login shell。</p>\n<h3 id=\"登录-session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#登录-session\"><span>登录 Session</span></a></h3>\n<p>登录 Session 是用户登录系统以后，系统为用户开启的原始 Session，通常需要用户输入用户名和密码进行登录。</p>\n<p>登录 Session 一般进行整个系统环境的初始化，启动的初始化脚本依次如下。</p>\n<ul>\n<li><code v-pre>/etc/profile</code>: 所有用户的全局配置脚本。</li>\n<li><code v-pre>/etc/profile.d</code> 目录里面所有 <code v-pre>.sh</code> 文件</li>\n<li><code v-pre>~/.bash_profile</code>: 用户的个人配置脚本。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code v-pre>~/.bash_login</code>: 如果 <code v-pre>~/.bash_profile</code> 没找到，则尝试执行这个脚本(C shell 的初始化脚本)。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code v-pre>~/.profile</code>: 如果<code v-pre>~/.bash_profile</code> 和 <code v-pre>~/.bash_login</code> 都没找到，则尝试读取这个脚本(Bourne shell 和 Korn shell 的初始化脚本)。</li>\n</ul>\n<p>Linux 发行版更新的时候，会更新 <code v-pre>/etc</code> 里面的文件，比如 <code v-pre>/etc/profile</code>，因此不要直接修改这个文件。如果想修改所有用户的登陆环境，就在 <code v-pre>/etc/profile.d</code> 目录里面新建 <code v-pre>.sh</code> 脚本。</p>\n<p>如果想修改您个人的登录环境，一般是写在 <code v-pre>~/.bash_profile</code> 里面。下面是一个典型的 <code v-pre>.bash_profile</code> 文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># .bash_profile</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">SHELL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">MANPATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/man:/usr/X11/man</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">EDITOR</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/bin/vi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\h:\\w\\$ '</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'> '</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ~/.bashrc ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/.bashrc</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> EDITOR</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，这个脚本定义了一些最基本的环境变量，然后执行了 <code v-pre>~/.bashrc</code>。</p>\n<p><code v-pre>bash</code> 命令的 <code v-pre>--login</code> 参数，会强制执行登录 Session 会执行的脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --login</span></span></code></pre>\n</div><p><code v-pre>bash</code> 命令的 <code v-pre>--noprofile</code> 参数，会跳过上面这些 Profile 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --noprofile</span></span></code></pre>\n</div><h3 id=\"非登录-session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#非登录-session\"><span>非登录 Session</span></a></h3>\n<p>非登录 Session 是用户进入系统以后，手动新建的 Session，这时不会进行环境初始化。比如，在命令行执行 <code v-pre>bash</code> 命令，就会新建一个非登录 Session。</p>\n<p>非登录 Session 的初始化脚本依次如下。</p>\n<ul>\n<li><code v-pre>/etc/bash.bashrc</code>: 对全体用户有效。</li>\n<li><code v-pre>~/.bashrc</code>: 仅对当前用户有效。</li>\n</ul>\n<p>对用户来说，<code v-pre>~/.bashrc</code> 通常是最重要的脚本。非登录 Session 默认会执行它，而登陆 Session 一般也会通过调用执行它。由于每次执行 Bash 脚本，都会新建一个非登录 Session，所以 <code v-pre>~/.bashrc</code> 也是每次执行脚本都会执行的。</p>\n<p><code v-pre>bash</code> 命令的 <code v-pre>--norc</code> 参数，可以禁止在非登录 Session 执行 <code v-pre>~/.bashrc</code> 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --norc</span></span></code></pre>\n</div><p><code v-pre>bash</code> 命令的 <code v-pre>--rcfile</code> 参数，指定另一个脚本代替 <code v-pre>.bashrc</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --rcfile</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> testrc</span></span></code></pre>\n</div><h3 id=\"bash-logout\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#bash-logout\"><span>.bash_logout</span></a></h3>\n<p><code v-pre>~/.bash_logout</code> 脚本在每次退出 Session 时执行，通常用来做一些清理工作和记录工作，比如删除临时文件，记录用户在本次 Session 花费的时间。</p>\n<p>如果没有退出时要执行的命令，这个文件也可以不存在。</p>\n<h2 id=\"启动选项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#启动选项\"><span>启动选项</span></a></h2>\n<p>为了方便 Debug，有时在启动 Bash 的时候，可以加上启动参数。</p>\n<ul>\n<li><code v-pre>-n</code>: 不运行脚本，只检查是否有语法错误。</li>\n<li><code v-pre>-v</code>: 输出每一行语句运行结果前，会先输出该行语句。</li>\n<li><code v-pre>-x</code>: 每一个命令处理完以后，先输出该命令，再进行下一个命令的处理。</li>\n</ul>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -v</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span></code></pre>\n</div><h2 id=\"键盘绑定\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#键盘绑定\"><span>键盘绑定</span></a></h2>\n<p>Bash 允许用户定义自己的快捷键。全局的键盘绑定文件默认为 <code v-pre>/etc/inputrc</code>，您可以在主目录创建自己的键盘绑定文件 <code v-pre>.inputrc</code> 文件。如果定义了这个文件，需要在其中加入下面这行，保证全局绑定不会被遗漏。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$include</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /etc/inputrc</span></span></code></pre>\n</div><p><code v-pre>.inputrc</code> 文件里面的快捷键，可以像这样定义，<code v-pre>&quot;\\C-t&quot;:&quot;pwd\\n&quot;</code> 表示将 <code v-pre>Ctrl + t</code> 绑定为运行 <code v-pre>pwd</code> 命令。</p>\n","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/linux/bash/startup.md","filePathRelative":"linux/bash/startup.md","frontmatter":{"date":"2020-05-04T00:00:00.000Z","title":"Bash 启动环境","icon":"leaf","author":"阮一峰","category":"Linux","tag":["Bash"],"copyright":"本教程采用<a href=\"https://creativecommons.org/licenses/by-sa/3.0/deed.zh\" rel=\"noopener noreferrer\" target=\"_blank\">知识共享 署名-相同方式共享 3.0协议</a>"},"sfcBlocks":{"template":{"type":"template","content":"<template><h2 id=\"session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#session\"><span>Session</span></a></h2>\n<p>用户每次使用 Shell，都会开启一个与 Shell 的 Session(对话)。</p>\n<p>Session 有两种类型: 登录 Session 和非登录 Session，也可以叫做 login shell 和 non-login shell。</p>\n<h3 id=\"登录-session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#登录-session\"><span>登录 Session</span></a></h3>\n<p>登录 Session 是用户登录系统以后，系统为用户开启的原始 Session，通常需要用户输入用户名和密码进行登录。</p>\n<p>登录 Session 一般进行整个系统环境的初始化，启动的初始化脚本依次如下。</p>\n<ul>\n<li><code v-pre>/etc/profile</code>: 所有用户的全局配置脚本。</li>\n<li><code v-pre>/etc/profile.d</code> 目录里面所有 <code v-pre>.sh</code> 文件</li>\n<li><code v-pre>~/.bash_profile</code>: 用户的个人配置脚本。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code v-pre>~/.bash_login</code>: 如果 <code v-pre>~/.bash_profile</code> 没找到，则尝试执行这个脚本(C shell 的初始化脚本)。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code v-pre>~/.profile</code>: 如果<code v-pre>~/.bash_profile</code> 和 <code v-pre>~/.bash_login</code> 都没找到，则尝试读取这个脚本(Bourne shell 和 Korn shell 的初始化脚本)。</li>\n</ul>\n<p>Linux 发行版更新的时候，会更新 <code v-pre>/etc</code> 里面的文件，比如 <code v-pre>/etc/profile</code>，因此不要直接修改这个文件。如果想修改所有用户的登陆环境，就在 <code v-pre>/etc/profile.d</code> 目录里面新建 <code v-pre>.sh</code> 脚本。</p>\n<p>如果想修改您个人的登录环境，一般是写在 <code v-pre>~/.bash_profile</code> 里面。下面是一个典型的 <code v-pre>.bash_profile</code> 文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># .bash_profile</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">SHELL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">MANPATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/man:/usr/X11/man</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">EDITOR</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/bin/vi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\h:\\w\\$ '</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'> '</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ~/.bashrc ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/.bashrc</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> EDITOR</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，这个脚本定义了一些最基本的环境变量，然后执行了 <code v-pre>~/.bashrc</code>。</p>\n<p><code v-pre>bash</code> 命令的 <code v-pre>--login</code> 参数，会强制执行登录 Session 会执行的脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --login</span></span></code></pre>\n</div><p><code v-pre>bash</code> 命令的 <code v-pre>--noprofile</code> 参数，会跳过上面这些 Profile 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --noprofile</span></span></code></pre>\n</div><h3 id=\"非登录-session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#非登录-session\"><span>非登录 Session</span></a></h3>\n<p>非登录 Session 是用户进入系统以后，手动新建的 Session，这时不会进行环境初始化。比如，在命令行执行 <code v-pre>bash</code> 命令，就会新建一个非登录 Session。</p>\n<p>非登录 Session 的初始化脚本依次如下。</p>\n<ul>\n<li><code v-pre>/etc/bash.bashrc</code>: 对全体用户有效。</li>\n<li><code v-pre>~/.bashrc</code>: 仅对当前用户有效。</li>\n</ul>\n<p>对用户来说，<code v-pre>~/.bashrc</code> 通常是最重要的脚本。非登录 Session 默认会执行它，而登陆 Session 一般也会通过调用执行它。由于每次执行 Bash 脚本，都会新建一个非登录 Session，所以 <code v-pre>~/.bashrc</code> 也是每次执行脚本都会执行的。</p>\n<p><code v-pre>bash</code> 命令的 <code v-pre>--norc</code> 参数，可以禁止在非登录 Session 执行 <code v-pre>~/.bashrc</code> 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --norc</span></span></code></pre>\n</div><p><code v-pre>bash</code> 命令的 <code v-pre>--rcfile</code> 参数，指定另一个脚本代替 <code v-pre>.bashrc</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --rcfile</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> testrc</span></span></code></pre>\n</div><h3 id=\"bash-logout\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#bash-logout\"><span>.bash_logout</span></a></h3>\n<p><code v-pre>~/.bash_logout</code> 脚本在每次退出 Session 时执行，通常用来做一些清理工作和记录工作，比如删除临时文件，记录用户在本次 Session 花费的时间。</p>\n<p>如果没有退出时要执行的命令，这个文件也可以不存在。</p>\n<h2 id=\"启动选项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#启动选项\"><span>启动选项</span></a></h2>\n<p>为了方便 Debug，有时在启动 Bash 的时候，可以加上启动参数。</p>\n<ul>\n<li><code v-pre>-n</code>: 不运行脚本，只检查是否有语法错误。</li>\n<li><code v-pre>-v</code>: 输出每一行语句运行结果前，会先输出该行语句。</li>\n<li><code v-pre>-x</code>: 每一个命令处理完以后，先输出该命令，再进行下一个命令的处理。</li>\n</ul>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -v</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span></code></pre>\n</div><h2 id=\"键盘绑定\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#键盘绑定\"><span>键盘绑定</span></a></h2>\n<p>Bash 允许用户定义自己的快捷键。全局的键盘绑定文件默认为 <code v-pre>/etc/inputrc</code>，您可以在主目录创建自己的键盘绑定文件 <code v-pre>.inputrc</code> 文件。如果定义了这个文件，需要在其中加入下面这行，保证全局绑定不会被遗漏。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$include</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /etc/inputrc</span></span></code></pre>\n</div><p><code v-pre>.inputrc</code> 文件里面的快捷键，可以像这样定义，<code v-pre>&quot;\\C-t&quot;:&quot;pwd\\n&quot;</code> 表示将 <code v-pre>Ctrl + t</code> 绑定为运行 <code v-pre>pwd</code> 命令。</p>\n</template>","contentStripped":"<h2 id=\"session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#session\"><span>Session</span></a></h2>\n<p>用户每次使用 Shell，都会开启一个与 Shell 的 Session(对话)。</p>\n<p>Session 有两种类型: 登录 Session 和非登录 Session，也可以叫做 login shell 和 non-login shell。</p>\n<h3 id=\"登录-session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#登录-session\"><span>登录 Session</span></a></h3>\n<p>登录 Session 是用户登录系统以后，系统为用户开启的原始 Session，通常需要用户输入用户名和密码进行登录。</p>\n<p>登录 Session 一般进行整个系统环境的初始化，启动的初始化脚本依次如下。</p>\n<ul>\n<li><code v-pre>/etc/profile</code>: 所有用户的全局配置脚本。</li>\n<li><code v-pre>/etc/profile.d</code> 目录里面所有 <code v-pre>.sh</code> 文件</li>\n<li><code v-pre>~/.bash_profile</code>: 用户的个人配置脚本。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code v-pre>~/.bash_login</code>: 如果 <code v-pre>~/.bash_profile</code> 没找到，则尝试执行这个脚本(C shell 的初始化脚本)。如果该脚本存在，则执行完就不再往下执行。</li>\n<li><code v-pre>~/.profile</code>: 如果<code v-pre>~/.bash_profile</code> 和 <code v-pre>~/.bash_login</code> 都没找到，则尝试读取这个脚本(Bourne shell 和 Korn shell 的初始化脚本)。</li>\n</ul>\n<p>Linux 发行版更新的时候，会更新 <code v-pre>/etc</code> 里面的文件，比如 <code v-pre>/etc/profile</code>，因此不要直接修改这个文件。如果想修改所有用户的登陆环境，就在 <code v-pre>/etc/profile.d</code> 目录里面新建 <code v-pre>.sh</code> 脚本。</p>\n<p>如果想修改您个人的登录环境，一般是写在 <code v-pre>~/.bash_profile</code> 里面。下面是一个典型的 <code v-pre>.bash_profile</code> 文件。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># .bash_profile</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">SHELL</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">MANPATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/man:/usr/X11/man</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">EDITOR</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/usr/bin/vi</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'\\h:\\w\\$ '</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PS2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'> '</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">-f</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> ~/.bashrc ]; </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">then</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ~/.bashrc</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">fi</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> EDITOR</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>可以看到，这个脚本定义了一些最基本的环境变量，然后执行了 <code v-pre>~/.bashrc</code>。</p>\n<p><code v-pre>bash</code> 命令的 <code v-pre>--login</code> 参数，会强制执行登录 Session 会执行的脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --login</span></span></code></pre>\n</div><p><code v-pre>bash</code> 命令的 <code v-pre>--noprofile</code> 参数，会跳过上面这些 Profile 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --noprofile</span></span></code></pre>\n</div><h3 id=\"非登录-session\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#非登录-session\"><span>非登录 Session</span></a></h3>\n<p>非登录 Session 是用户进入系统以后，手动新建的 Session，这时不会进行环境初始化。比如，在命令行执行 <code v-pre>bash</code> 命令，就会新建一个非登录 Session。</p>\n<p>非登录 Session 的初始化脚本依次如下。</p>\n<ul>\n<li><code v-pre>/etc/bash.bashrc</code>: 对全体用户有效。</li>\n<li><code v-pre>~/.bashrc</code>: 仅对当前用户有效。</li>\n</ul>\n<p>对用户来说，<code v-pre>~/.bashrc</code> 通常是最重要的脚本。非登录 Session 默认会执行它，而登陆 Session 一般也会通过调用执行它。由于每次执行 Bash 脚本，都会新建一个非登录 Session，所以 <code v-pre>~/.bashrc</code> 也是每次执行脚本都会执行的。</p>\n<p><code v-pre>bash</code> 命令的 <code v-pre>--norc</code> 参数，可以禁止在非登录 Session 执行 <code v-pre>~/.bashrc</code> 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --norc</span></span></code></pre>\n</div><p><code v-pre>bash</code> 命令的 <code v-pre>--rcfile</code> 参数，指定另一个脚本代替 <code v-pre>.bashrc</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --rcfile</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> testrc</span></span></code></pre>\n</div><h3 id=\"bash-logout\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#bash-logout\"><span>.bash_logout</span></a></h3>\n<p><code v-pre>~/.bash_logout</code> 脚本在每次退出 Session 时执行，通常用来做一些清理工作和记录工作，比如删除临时文件，记录用户在本次 Session 花费的时间。</p>\n<p>如果没有退出时要执行的命令，这个文件也可以不存在。</p>\n<h2 id=\"启动选项\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#启动选项\"><span>启动选项</span></a></h2>\n<p>为了方便 Debug，有时在启动 Bash 的时候，可以加上启动参数。</p>\n<ul>\n<li><code v-pre>-n</code>: 不运行脚本，只检查是否有语法错误。</li>\n<li><code v-pre>-v</code>: 输出每一行语句运行结果前，会先输出该行语句。</li>\n<li><code v-pre>-x</code>: 每一个命令处理完以后，先输出该命令，再进行下一个命令的处理。</li>\n</ul>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -n</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -v</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">bash</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -x</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> scriptname</span></span></code></pre>\n</div><h2 id=\"键盘绑定\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#键盘绑定\"><span>键盘绑定</span></a></h2>\n<p>Bash 允许用户定义自己的快捷键。全局的键盘绑定文件默认为 <code v-pre>/etc/inputrc</code>，您可以在主目录创建自己的键盘绑定文件 <code v-pre>.inputrc</code> 文件。如果定义了这个文件，需要在其中加入下面这行，保证全局绑定不会被遗漏。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$include</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> /etc/inputrc</span></span></code></pre>\n</div><p><code v-pre>.inputrc</code> 文件里面的快捷键，可以像这样定义，<code v-pre>&quot;\\C-t&quot;:&quot;pwd\\n&quot;</code> 表示将 <code v-pre>Ctrl + t</code> 绑定为运行 <code v-pre>pwd</code> 命令。</p>\n","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n## Session\n\n用户每次使用 Shell，都会开启一个与 Shell 的 Session(对话)。\n\nSession 有两种类型: 登录 Session 和非登录 Session，也可以叫做 login shell 和 non-login shell。\n\n### 登录 Session\n\n登录 Session 是用户登录系统以后，系统为用户开启的原始 Session，通常需要用户输入用户名和密码进行登录。\n\n登录 Session 一般进行整个系统环境的初始化，启动的初始化脚本依次如下。\n\n- `/etc/profile`: 所有用户的全局配置脚本。\n- `/etc/profile.d` 目录里面所有 `.sh` 文件\n- `~/.bash_profile`: 用户的个人配置脚本。如果该脚本存在，则执行完就不再往下执行。\n- `~/.bash_login`: 如果 `~/.bash_profile` 没找到，则尝试执行这个脚本(C shell 的初始化脚本)。如果该脚本存在，则执行完就不再往下执行。\n- `~/.profile`: 如果`~/.bash_profile` 和 `~/.bash_login` 都没找到，则尝试读取这个脚本(Bourne shell 和 Korn shell 的初始化脚本)。\n\nLinux 发行版更新的时候，会更新 `/etc` 里面的文件，比如 `/etc/profile`，因此不要直接修改这个文件。如果想修改所有用户的登陆环境，就在 `/etc/profile.d` 目录里面新建 `.sh` 脚本。\n\n如果想修改您个人的登录环境，一般是写在 `~/.bash_profile` 里面。下面是一个典型的 `.bash_profile` 文件。\n\n```bash\n# .bash_profile\nPATH=/sbin:/usr/sbin:/bin:/usr/bin:/usr/local/bin\nPATH=$PATH:$HOME/bin\n\nSHELL=/bin/bash\nMANPATH=/usr/man:/usr/X11/man\nEDITOR=/usr/bin/vi\nPS1='\\h:\\w\\$ '\nPS2='> '\n\nif [ -f ~/.bashrc ]; then\n. ~/.bashrc\nfi\n\nexport PATH\nexport EDITOR\n```\n\n可以看到，这个脚本定义了一些最基本的环境变量，然后执行了 `~/.bashrc`。\n\n`bash` 命令的 `--login` 参数，会强制执行登录 Session 会执行的脚本。\n\n```bash\nbash --login\n```\n\n`bash` 命令的 `--noprofile` 参数，会跳过上面这些 Profile 脚本。\n\n```bash\nbash --noprofile\n```\n\n### 非登录 Session\n\n非登录 Session 是用户进入系统以后，手动新建的 Session，这时不会进行环境初始化。比如，在命令行执行 `bash` 命令，就会新建一个非登录 Session。\n\n非登录 Session 的初始化脚本依次如下。\n\n- `/etc/bash.bashrc`: 对全体用户有效。\n- `~/.bashrc`: 仅对当前用户有效。\n\n对用户来说，`~/.bashrc` 通常是最重要的脚本。非登录 Session 默认会执行它，而登陆 Session 一般也会通过调用执行它。由于每次执行 Bash 脚本，都会新建一个非登录 Session，所以 `~/.bashrc` 也是每次执行脚本都会执行的。\n\n`bash` 命令的 `--norc` 参数，可以禁止在非登录 Session 执行 `~/.bashrc` 脚本。\n\n```bash\nbash --norc\n```\n\n`bash` 命令的 `--rcfile` 参数，指定另一个脚本代替 `.bashrc`。\n\n```bash\nbash --rcfile testrc\n```\n\n### .bash_logout\n\n`~/.bash_logout` 脚本在每次退出 Session 时执行，通常用来做一些清理工作和记录工作，比如删除临时文件，记录用户在本次 Session 花费的时间。\n\n如果没有退出时要执行的命令，这个文件也可以不存在。\n\n## 启动选项\n\n为了方便 Debug，有时在启动 Bash 的时候，可以加上启动参数。\n\n- `-n`: 不运行脚本，只检查是否有语法错误。\n- `-v`: 输出每一行语句运行结果前，会先输出该行语句。\n- `-x`: 每一个命令处理完以后，先输出该命令，再进行下一个命令的处理。\n\n```bash\nbash -n scriptname\nbash -v scriptname\nbash -x scriptname\n```\n\n## 键盘绑定\n\nBash 允许用户定义自己的快捷键。全局的键盘绑定文件默认为 `/etc/inputrc`，您可以在主目录创建自己的键盘绑定文件 `.inputrc` 文件。如果定义了这个文件，需要在其中加入下面这行，保证全局绑定不会被遗漏。\n\n```bash\n$include /etc/inputrc\n```\n\n`.inputrc` 文件里面的快捷键，可以像这样定义，`\"\\C-t\":\"pwd\\n\"` 表示将 `Ctrl + t` 绑定为运行 `pwd` 命令。\n","excerpt":"","title":"","headers":[{"level":2,"title":"Session","slug":"session","link":"#session","children":[{"level":3,"title":"登录 Session","slug":"登录-session","link":"#登录-session","children":[]},{"level":3,"title":"非登录 Session","slug":"非登录-session","link":"#非登录-session","children":[]},{"level":3,"title":".bash_logout","slug":"bash-logout","link":"#bash-logout","children":[]}]},{"level":2,"title":"启动选项","slug":"启动选项","link":"#启动选项","children":[]},{"level":2,"title":"键盘绑定","slug":"键盘绑定","link":"#键盘绑定","children":[]}]}}
