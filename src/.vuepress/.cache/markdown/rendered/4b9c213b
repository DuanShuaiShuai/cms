{"content":"<p>ECMAScript 6.0(以下简称 ES6)是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</p>\n<!-- more -->\n<h2 id=\"ecmascript-和-javascript-的关系\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ecmascript-和-javascript-的关系\"><span>ECMAScript 和 JavaScript 的关系</span></a></h2>\n<p>一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系?</p>\n<p>要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件(ECMA-262)的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。</p>\n<p>该标准从一开始就是针对 JavaScript 语言制定的，但是之所以不叫 JavaScript，有两个原因。一是商标，Java 是 Sun 公司的商标，根据授权协议，只有 Netscape 公司可以合法地使用 JavaScript 这个名字，且 JavaScript 本身也已经被 Netscape 公司注册为商标。二是想体现这门语言的制定者是 ECMA，不是 Netscape，这样有利于保证这门语言的开放性和中立性。</p>\n<p>因此，ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现(另外的 ECMAScript 方言还有 Jscript 和 ActionScript)。日常场合，这两个词是可以互换的。</p>\n<h2 id=\"es6-与-ecmascript-2015-的关系\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#es6-与-ecmascript-2015-的关系\"><span>ES6 与 ECMAScript 2015 的关系</span></a></h2>\n<p>ECMAScript 2015(简称 ES2015)这个词，也是经常可以看到的。它与 ES6 是什么关系呢?</p>\n<p>2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。</p>\n<p>但是，因为这个版本引入的语法功能太多，而且制定过程当中，还有很多组织和个人不断提交新功能。事情很快就变得清楚了，不可能在一个版本里面包括所有将要引入的功能。常规的做法是先发布 6.0 版，过一段时间再发 6.1 版，然后是 6.2 版、6.3 版等等。</p>\n<p>但是，标准的制定者不想这样做。他们想让标准的升级成为常规流程: 任何人在任何时候，都可以向标准委员会提交新语法的提案，然后标准委员会每个月开一次会，评估这些提案是否可以接受，需要哪些改进。如果经过多次会议以后，一个提案足够成熟了，就可以正式进入标准了。这就是说，标准的版本升级成为了一个不断滚动的流程，每个月都会有变动。</p>\n<p>标准委员会最终决定，标准在每年的 6 月份正式发布一次，作为当年的正式版本。接下来的时间，就在这个版本的基础上做改动，直到下一年的 6 月份，草案就自然变成了新一年的版本。这样一来，就不需要以前的版本号了，只要用年份标记就可以了。</p>\n<p>ES6 的第一个版本，就这样在 2015 年 6 月发布了，正式名称就是《ECMAScript 2015 标准》(简称 ES2015)。2016 年 6 月，小幅修订的《ECMAScript 2016 标准》(简称 ES2016)如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小(只新增了数组实例的 <code v-pre>includes</code> 方法和指数运算符)，基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。</p>\n<p>因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 ES6 的地方，一般是指 ES2015 标准，但有时也是泛指“下一代 JavaScript 语言”。</p>\n<h2 id=\"语法提案的批准流程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#语法提案的批准流程\"><span>语法提案的批准流程</span></a></h2>\n<p>任何人都可以向标准委员会(又称 TC39 委员会)提案，要求修改语言标准。</p>\n<p>一种新的语法从提案到变成正式标准，需要经历五个阶段。每个阶段的变动都需要由 TC39 委员会批准。</p>\n<ul>\n<li>Stage 0 - Strawman(展示阶段)</li>\n<li>Stage 1 - Proposal(征求意见阶段)</li>\n<li>Stage 2 - Draft(草案阶段)</li>\n<li>Stage 3 - Candidate(候选人阶段)</li>\n<li>Stage 4 - Finished(定案阶段)</li>\n</ul>\n<p>一个提案只要能进入 Stage 2，就差不多肯定会包括在以后的正式标准里面。ECMAScript 当前的所有提案，可以在 TC39 的官方网站<a href=\"https://github.com/tc39/ecma262\" target=\"_blank\" rel=\"noopener noreferrer\">github.com/tc39/ecma262</a>查看。</p>\n<p>本书的写作目标之一，是跟踪 ECMAScript 语言的最新进展，介绍 5.1 版本以后所有的新语法。对于那些明确或很有希望，将要列入标准的新语法，都将予以介绍。</p>\n<h2 id=\"ecmascript-的历史\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ecmascript-的历史\"><span>ECMAScript 的历史</span></a></h2>\n<p>ES6 从开始制定到最后发布，整整用了 15 年。</p>\n<p>前面提到，ECMAScript 1.0 是 1997 年发布的，接下来的两年，连续发布了 ECMAScript 2.0(1998 年 6 月)和 ECMAScript 3.0(1999 年 12 月)。3.0 版是一个巨大的成功，在业界得到广泛支持，成为通行标准，奠定了 JavaScript 语言的基本语法，以后的版本完全继承。直到今天，初学者一开始学习 JavaScript，其实就是在学 3.0 版的语法。</p>\n<p>2000 年，ECMAScript 4.0 开始酝酿。这个版本最后没有通过，但是它的大部分内容被 ES6 继承了。因此，ES6 制定的起点其实是 2000 年。</p>\n<p>为什么 ES4 没有通过呢? 因为这个版本太激进了，对 ES3 做了彻底升级，导致标准委员会的一些成员不愿意接受。ECMA 的第 39 号技术专家委员会(Technical Committee 39，简称 TC39)负责制订 ECMAScript 标准，成员包括 Microsoft、Mozilla、Google 等大公司。</p>\n<p>2007 年 10 月，ECMAScript 4.0 版草案发布，本来预计次年 8 月发布正式版本。但是，各方对于是否通过这个标准，发生了严重分歧。以 Yahoo、Microsoft、Google 为首的大公司，反对 JavaScript 的大幅升级，主张小幅改动；以 JavaScript 创造者 Brendan Eich 为首的 Mozilla 公司，则坚持当前的草案。</p>\n<p>2008 年 7 月，由于对于下一个版本应该包括哪些功能，各方分歧太大，争论过于激烈，ECMA 开会决定，中止 ECMAScript 4.0 的开发，将其中涉及现有功能改善的一小部分，发布为 ECMAScript 3.1，而将其他激进的设想扩大范围，放入以后的版本，由于会议的气氛，该版本的项目代号起名为 Harmony(和谐)。会后不久，ECMAScript 3.1 就改名为 ECMAScript 5。</p>\n<p>2009 年 12 月，ECMAScript 5.0 版正式发布。Harmony 项目则一分为二，一些较为可行的设想定名为 JavaScript.next 继续开发，后来演变成 ECMAScript 6；一些不是很成熟的设想，则被视为 JavaScript.next.next，在更远的将来再考虑推出。TC39 委员会的总体考虑是，ES5 与 ES3 基本保持兼容，较大的语法修正和新功能加入，将由 JavaScript.next 完成。当时，JavaScript.next 指的是 ES6，第六版发布以后，就指 ES7。TC39 的判断是，ES5 会在 2013 年的年中成为 JavaScript 开发的主流标准，并在此后五年中一直保持这个位置。</p>\n<p>2011 年 6 月，ECMAScript 5.1 版发布，并且成为 ISO 国际标准(ISO/IEC 16262:2011)。</p>\n<p>2013 年 3 月，ECMAScript 6 草案冻结，不再添加新功能。新的功能设想将被放到 ECMAScript 7。</p>\n<p>2013 年 12 月，ECMAScript 6 草案发布。然后是 12 个月的讨论期，听取各方反馈。</p>\n<p>2015 年 6 月，ECMAScript 6 正式通过，成为国际标准。从 2000 年算起，这时已经过去了 15 年。</p>\n<h2 id=\"部署进度\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#部署进度\"><span>部署进度</span></a></h2>\n<p>各大浏览器的最新版本，对 ES6 的支持可以查看<a href=\"https://kangax.github.io/es5-compat-table/es6/\" target=\"_blank\" rel=\"noopener noreferrer\">kangax.github.io/es5-compat-table/es6/</a>。随着时间的推移，支持度已经越来越高了，超过 90%的 ES6 语法特性都实现了。</p>\n<p>Node.js 是 JavaScript 的服务器运行环境(runtime)。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node.js 已经实现的 ES6 特性。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">node</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --v8-options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> harmony</span></span></code></pre>\n</div><p>上面命令的输出结果，会因为版本的不同而有所不同。</p>\n<p>我写了一个工具 <a href=\"https://github.com/ruanyf/es-checker\" target=\"_blank\" rel=\"noopener noreferrer\">ES-Checker</a>，用来检查各种运行环境对 ES6 的支持情况。访问<a href=\"https://ruanyf.github.io/es-checker\" target=\"_blank\" rel=\"noopener noreferrer\">ruanyf.github.io/es-checker</a>，可以看到您的浏览器支持 ES6 的程度。运行下面的命令，可以查看您正在使用的 Node.js 环境对 ES6 的支持程度。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es-checker</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es-checker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=========================================</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Passes</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 24</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> feature</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Dectations</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Your</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> runtime</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> supports</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 57%</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> of</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ECMAScript</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=========================================</span></span></code></pre>\n</div><h2 id=\"babel-转码器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-转码器\"><span>Babel 转码器</span></a></h2>\n<p><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Babel</a> 是一个广泛使用的 ES6 转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行。这意味着，您可以用 ES6 的方式编写程序，又不用担心现有环境是否支持。下面是一个例子。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 转码前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">input</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">item</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> item</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 转码后</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">input</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">item</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> item</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>上面的原始代码用了箭头函数，Babel 将其转为普通函数，就能在不支持箭头函数的 JavaScript 环境执行了。</p>\n<h3 id=\"配置文件-babelrc\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#配置文件-babelrc\"><span>配置文件 <code v-pre>.babelrc</code></span></a></h3>\n<p>Babel 的配置文件是 <code v-pre>.babelrc</code>，存放在项目的根目录下。使用 Babel 的第一步，就是配置这个文件。</p>\n<p>该文件用来设置转码规则和插件，基本格式如下。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"presets\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"plugins\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: []</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p><code v-pre>presets</code> 字段设定转码规则，官方提供以下的规则集，您可以根据需要安装。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 最新转码规则</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-latest</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># react 转码规则</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-react</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 不同阶段语法提案的转码规则(共有4个阶段)，选装一个</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后，将这些规则加入 <code v-pre>.babelrc</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"presets\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"react\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"stage-2\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"plugins\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: []</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n</div><p>注意，以下所有 Babel 工具和模块的使用，都必须先写好 <code v-pre>.babelrc</code>。</p>\n<h3 id=\"命令行转码-babel-cli\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行转码-babel-cli\"><span>命令行转码 <code v-pre>babel-cli</code></span></a></h3>\n<p>Babel 提供 <code v-pre>babel-cli</code> 工具，用于命令行转码。</p>\n<p>它的安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --global</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>基本用法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 转码结果输出到标准输出</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 转码结果写入一个文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># --out-file 或 -o 参数指定输出文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out-file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> compiled.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> compiled.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 整个目录转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># --out-dir 或 -d 参数指定输出目录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out-dir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># -s 参数生成source map文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码是在全局环境下，进行 Babel 转码。这意味着，如果项目要运行，全局环境必须有 Babel，也就是说项目产生了对环境的依赖。另一方面，这样做也无法支持不同项目使用不同版本的 Babel。</p>\n<p>一个解决办法是将 <code v-pre>babel-cli</code> 安装在项目之中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 安装</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>然后，改写 <code v-pre>package.json</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"babel-cli\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"^6.0.0\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"build\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel src -d lib\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>转码的时候，就执行下面的命令。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">npm</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> build</span></span></code></pre>\n</div><h3 id=\"babel-node\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-node\"><span>babel-node</span></a></h3>\n<p><code v-pre>babel-cli</code> 工具自带一个 <code v-pre>babel-node</code> 命令，提供一个支持 ES6 的 REPL 环境。它支持 Node.js 的 REPL 环境的所有功能，而且可以直接运行 ES6 代码。</p>\n<p>它不用单独安装，而是随 <code v-pre>babel-cli</code> 一起安装。然后，执行 <code v-pre>babel-node</code> 就进入 REPL 环境。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-node</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> => </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">x</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p><code v-pre>babel-node</code> 命令可以直接运行 ES6 脚本。将上面的代码放入脚本文件 <code v-pre>es6.js</code>，然后直接运行。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-node</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es6.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p><code v-pre>babel-node</code> 也可以安装在项目中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>然后，改写 <code v-pre>package.json</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"script-name\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel-node script.js\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面代码中，使用 <code v-pre>babel-node</code> 替代 <code v-pre>node</code>，这样 <code v-pre>script.js</code> 本身就不用做任何转码处理。</p>\n<h3 id=\"babel-register\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-register\"><span>babel-register</span></a></h3>\n<p><code v-pre>babel-register</code> 模块改写 <code v-pre>require</code> 命令，为它加上一个钩子。此后，每当使用 <code v-pre>require</code> 加载 <code v-pre>.js</code>、<code v-pre>.jsx</code>、<code v-pre>.es</code> 和 <code v-pre>.es6</code> 后缀名的文件，就会先用 Babel 进行转码。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-register</span></span></code></pre>\n</div><p>使用时，必须首先加载 <code v-pre>babel-register</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"babel-register\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"./index.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>然后，就不需要手动对 <code v-pre>index.js</code> 转码了。</p>\n<p>需要注意的是，<code v-pre>babel-register</code> 只会对 <code v-pre>require</code> 命令加载的文件转码，而不会对当前文件转码。另外，由于它是实时转码，所以只适合在开发环境使用。</p>\n<h3 id=\"babel-core\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-core\"><span>babel-core</span></a></h3>\n<p>如果某些代码需要调用 Babel 的 API 进行转码，就要使用 <code v-pre>babel-core</code> 模块。</p>\n<p>安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-core</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save</span></span></code></pre>\n</div><p>然后，在项目中就可以调用 <code v-pre>babel-core</code>。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> babel</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-core\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 字符串转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transform</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"code();\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 文件转码(异步)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 文件转码(同步)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// Babel AST转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFromAst</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ast</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置对象 <code v-pre>options</code>，可以参看官方文档<a href=\"https://babeljs.io/docs/usage/options/\" target=\"_blank\" rel=\"noopener noreferrer\">https://babeljs.io/docs/usage/options/</a>。</p>\n<p>下面是一个例子。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> es6Code</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"let x = n => n + 1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> es5Code</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-core\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transform</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">es6Code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  presets</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}).</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// '\"use strict\";\\n\\nvar x = function x(n) {\\n  return n + 1;\\n};'</span></span></code></pre>\n</div><p>上面代码中，<code v-pre>transform</code> 方法的第一个参数是一个字符串，表示需要被转换的 ES6 代码，第二个参数是转换的配置对象。</p>\n<h3 id=\"babel-polyfill\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-polyfill\"><span>babel-polyfill</span></a></h3>\n<p>Babel 默认只转换新的 JavaScript 句法(syntax)，而不转换新的 API，比如 <code v-pre>Iterator</code>、<code v-pre>Generator</code>、<code v-pre>Set</code>、<code v-pre>Map</code>、<code v-pre>Proxy</code>、<code v-pre>Reflect</code>、<code v-pre>Symbol</code>、<code v-pre>Promise</code> 等全局对象，以及一些定义在全局对象上的方法(比如 <code v-pre>Object.assign</code>)都不会转码。</p>\n<p>举例来说，ES6 在 <code v-pre>Array</code> 对象上新增了 <code v-pre>Array.from</code> 方法。Babel 就不会转码这个方法。如果想让这个方法运行，必须使用 <code v-pre>babel-polyfill</code>，为当前环境提供一个垫片。</p>\n<p>安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-polyfill</span></span></code></pre>\n</div><p>然后，在脚本头部，加入如下一行代码。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel-polyfill\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-polyfill\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>Babel 默认不转码的 API 非常多，详细清单可以查看 <code v-pre>babel-plugin-transform-runtime</code> 模块的<a href=\"https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-runtime/src/definitions.js\" target=\"_blank\" rel=\"noopener noreferrer\">definitions.js</a>文件。</p>\n<h3 id=\"浏览器环境\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器环境\"><span>浏览器环境</span></a></h3>\n<p>Babel 也可以用于浏览器环境。但是，从 Babel 6.0 开始，不再直接提供浏览器版本，而是要用构建工具构建出来。如果您没有或不想使用构建工具，可以使用<a href=\"https://github.com/Daniel15/babel-standalone\" target=\"_blank\" rel=\"noopener noreferrer\">babel-standalone</a>模块提供的浏览器版本，将其插入网页。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.4.4/babel.min.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/babel\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Your ES6 code</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>注意，网页实时将 ES6 代码转为 ES5，对性能会有影响。生产环境需要加载已经转码完成的脚本。</p>\n<p>下面是如何将代码打包成浏览器可以使用的脚本，以 <code v-pre>Babel</code> 配合 <code v-pre>Browserify</code> 为例。首先，安装 <code v-pre>babelify</code> 模块。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babelify</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-latest</span></span></code></pre>\n</div><p>然后，再用命令行转换 ES6 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">browserify</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bundle.js</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  -t</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">babelify</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --presets</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">latest</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]</span></span></code></pre>\n</div><p>上面代码将 ES6 脚本 <code v-pre>script.js</code>，转为 <code v-pre>bundle.js</code>，浏览器直接加载后者就可以了。</p>\n<p>在 <code v-pre>package.json</code> 设置下面的代码，就不用每次命令行都输入参数了。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"browserify\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"transform\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babelify\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, { </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"presets\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] }]]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h3 id=\"在线转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#在线转换\"><span>在线转换</span></a></h3>\n<p>Babel 提供一个<a href=\"https://babeljs.io/repl/\" target=\"_blank\" rel=\"noopener noreferrer\">REPL 在线编译器</a>，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。</p>\n<h3 id=\"与其他工具的配合\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#与其他工具的配合\"><span>与其他工具的配合</span></a></h3>\n<p>许多工具需要 Babel 进行前置转码，这里举两个例子: ESLint 和 Mocha。</p>\n<p>ESLint 用于静态检查代码的语法和风格，安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> eslint</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-eslint</span></span></code></pre>\n</div><p>然后，在项目根目录下，新建一个配置文件 <code v-pre>.eslintrc</code>，在其中加入 <code v-pre>parser</code> 字段。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"parser\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-eslint\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"rules\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>再在 <code v-pre>package.json</code> 之中，加入相应的 <code v-pre>scripts</code> 脚本。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"my-module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"lint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"eslint my-files.js\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"babel-eslint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"...\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"eslint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Mocha 则是一个测试框架，如果需要执行使用 ES6 语法的测试脚本，可以修改 <code v-pre>package.json</code> 的 <code v-pre>scripts.test</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"test\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"mocha --ui qunit --compilers js:babel-core/register\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面命令中，<code v-pre>--compilers</code> 参数指定脚本的转码器，规定后缀名为 <code v-pre>js</code> 的文件，都需要使用 <code v-pre>babel-core/register</code> 先转码。</p>\n<h2 id=\"traceur-转码器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#traceur-转码器\"><span>Traceur 转码器</span></a></h2>\n<p>Google 公司的<a href=\"https://github.com/google/traceur-compiler\" target=\"_blank\" rel=\"noopener noreferrer\">Traceur</a>转码器，也可以将 ES6 代码转为 ES5 代码。</p>\n<h3 id=\"直接插入网页\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#直接插入网页\"><span>直接插入网页</span></a></h3>\n<p>Traceur 允许将 ES6 代码直接插入网页。首先，必须在网页头部加载 Traceur 库文件。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/traceur.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/src/bootstrap.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  import</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"./Greeter.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>上面代码中，一共有 4 个 <code v-pre>script</code> 标签。第一个是加载 Traceur 的库文件，第二个和第三个是将这个库文件用于浏览器环境，第四个则是加载用户脚本，这个脚本里面可以使用 ES6 代码。</p>\n<p>注意，第四个 <code v-pre>script</code> 标签的 <code v-pre>type</code> 属性的值是 <code v-pre>module</code>，而不是 <code v-pre>text/javascript</code>。这是 Traceur 编译器识别 ES6 代码的标志，编译器会自动将所有 <code v-pre>type=module</code> 的代码编译为 ES5，然后再交给浏览器执行。</p>\n<p>除了引用外部 ES6 脚本，也可以直接在网页中放置 ES6 代码。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  class Calc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    constructor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      console.log(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Calc constructor'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    add(a, b) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      return a + b;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  var c = new Calc();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  console.log(c.add(4,5));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">&#x3C;/script></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>正常情况下，上面代码会在控制台打印出 <code v-pre>9</code>。</p>\n<p>如果想对 Traceur 的行为有精确控制，可以采用下面参数配置的写法。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Create the System object</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  window.System = new traceur.runtime.BrowserTraceurLoader();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Set some experimental options</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  var metadata = </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    traceurOptions</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      experimental</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      properTailCalls</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      symbols</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      arrayComprehension</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      asyncFunctions</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      asyncGenerators</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> exponentiation</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      forOn</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      generatorComprehension</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">  }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Load your module</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  System.import('./myModule.js', </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).catch(function(ex) </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Import failed'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">ex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">stack</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">  }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，首先生成 Traceur 的全局对象 <code v-pre>window.System</code>，然后 <code v-pre>System.import</code> 方法可以用来加载 ES6。加载的时候，需要传入一个配置对象 <code v-pre>metadata</code>，该对象的 <code v-pre>traceurOptions</code> 属性可以配置支持 ES6 功能。如果设为 <code v-pre>experimental: true</code>，就表示除了 ES6 以外，还支持一些实验性的新功能。</p>\n<h3 id=\"es5-在线转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#es5-在线转换\"><span>ES5 在线转换</span></a></h3>\n<p>Traceur 也提供一个<a href=\"http://google.github.io/traceur-compiler/demo/repl.html\" target=\"_blank\" rel=\"noopener noreferrer\">在线编译器</a>，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。</p>\n<p>上面的例子转为 ES5 代码运行，就是下面这个样子。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/traceur.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/src/bootstrap.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$traceurRuntime.ModuleStore.getAnonymousModule(function() </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"use strict\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  var</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Calc constructor'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">$traceurRuntime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">createClass</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }}, {});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> c</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"命令行转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行转换\"><span>命令行转换</span></a></h3>\n<p>作为命令行工具使用时，Traceur 是一个 Node.js 的模块，首先需要用 npm 安装。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> traceur</span></span></code></pre>\n</div><p>安装成功后，就可以在命令行下使用 Traceur 了。</p>\n<p>Traceur 直接运行 ES6 脚本文件，会在标准输出显示运行结果，以前面的 <code v-pre>calc.js</code> 为例。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> traceur</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Calc</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> constructor</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">9</span></span></code></pre>\n</div><p>如果要将 ES6 脚本转为 ES5 保存，要采用下面的写法。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">traceur</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --script</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es6.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es5.js</span></span></code></pre>\n</div><p>上面代码的 <code v-pre>--script</code> 选项表示指定输入文件，<code v-pre>--out</code> 选项表示指定输出文件。</p>\n<p>为了防止有些特性编译不成功，最好加上 <code v-pre>--experimental</code> 选项。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">traceur</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --script</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es6.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es5.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --experimental</span></span></code></pre>\n</div><p>命令行下转换生成的文件，就可以直接放到浏览器中运行。</p>\n<h3 id=\"node-js-环境的用法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#node-js-环境的用法\"><span>Node.js 环境的用法</span></a></h3>\n<p>Traceur 的 Node.js 用法如下(假定已安装 <code v-pre>traceur</code> 模块)。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> traceur</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"traceur\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 将 ES6 脚本转为字符串</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> contents</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">readFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es6-file.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> result</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> traceur</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">compile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">contents</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  filename</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"es6-file.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  sourceMap</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 其他设置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  modules</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"commonjs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">throw</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// result 对象的 js 属性就是转换后的 ES5 代码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"out.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">js</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// sourceMap 属性对应 map 文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"out.js.map\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">sourceMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/code/language/js/es6/intro.md","filePathRelative":"code/language/js/es6/intro.md","frontmatter":{"title":"ES6 简介","icon":"info","author":"阮一峰","date":"2019-10-20T00:00:00.000Z","category":"JavaScript","copyright":"此部分博客采用 <a href=\"http://creativecommons.org/licenses/by-nc/4.0/\" rel=\"noopener noreferrer\" target=\"_blank\">“保持署名—非商用”创意共享4.0许可证</a>"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>ECMAScript 6.0(以下简称 ES6)是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</p>\n<!-- more -->\n<h2 id=\"ecmascript-和-javascript-的关系\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ecmascript-和-javascript-的关系\"><span>ECMAScript 和 JavaScript 的关系</span></a></h2>\n<p>一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系?</p>\n<p>要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件(ECMA-262)的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。</p>\n<p>该标准从一开始就是针对 JavaScript 语言制定的，但是之所以不叫 JavaScript，有两个原因。一是商标，Java 是 Sun 公司的商标，根据授权协议，只有 Netscape 公司可以合法地使用 JavaScript 这个名字，且 JavaScript 本身也已经被 Netscape 公司注册为商标。二是想体现这门语言的制定者是 ECMA，不是 Netscape，这样有利于保证这门语言的开放性和中立性。</p>\n<p>因此，ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现(另外的 ECMAScript 方言还有 Jscript 和 ActionScript)。日常场合，这两个词是可以互换的。</p>\n<h2 id=\"es6-与-ecmascript-2015-的关系\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#es6-与-ecmascript-2015-的关系\"><span>ES6 与 ECMAScript 2015 的关系</span></a></h2>\n<p>ECMAScript 2015(简称 ES2015)这个词，也是经常可以看到的。它与 ES6 是什么关系呢?</p>\n<p>2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。</p>\n<p>但是，因为这个版本引入的语法功能太多，而且制定过程当中，还有很多组织和个人不断提交新功能。事情很快就变得清楚了，不可能在一个版本里面包括所有将要引入的功能。常规的做法是先发布 6.0 版，过一段时间再发 6.1 版，然后是 6.2 版、6.3 版等等。</p>\n<p>但是，标准的制定者不想这样做。他们想让标准的升级成为常规流程: 任何人在任何时候，都可以向标准委员会提交新语法的提案，然后标准委员会每个月开一次会，评估这些提案是否可以接受，需要哪些改进。如果经过多次会议以后，一个提案足够成熟了，就可以正式进入标准了。这就是说，标准的版本升级成为了一个不断滚动的流程，每个月都会有变动。</p>\n<p>标准委员会最终决定，标准在每年的 6 月份正式发布一次，作为当年的正式版本。接下来的时间，就在这个版本的基础上做改动，直到下一年的 6 月份，草案就自然变成了新一年的版本。这样一来，就不需要以前的版本号了，只要用年份标记就可以了。</p>\n<p>ES6 的第一个版本，就这样在 2015 年 6 月发布了，正式名称就是《ECMAScript 2015 标准》(简称 ES2015)。2016 年 6 月，小幅修订的《ECMAScript 2016 标准》(简称 ES2016)如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小(只新增了数组实例的 <code v-pre>includes</code> 方法和指数运算符)，基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。</p>\n<p>因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 ES6 的地方，一般是指 ES2015 标准，但有时也是泛指“下一代 JavaScript 语言”。</p>\n<h2 id=\"语法提案的批准流程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#语法提案的批准流程\"><span>语法提案的批准流程</span></a></h2>\n<p>任何人都可以向标准委员会(又称 TC39 委员会)提案，要求修改语言标准。</p>\n<p>一种新的语法从提案到变成正式标准，需要经历五个阶段。每个阶段的变动都需要由 TC39 委员会批准。</p>\n<ul>\n<li>Stage 0 - Strawman(展示阶段)</li>\n<li>Stage 1 - Proposal(征求意见阶段)</li>\n<li>Stage 2 - Draft(草案阶段)</li>\n<li>Stage 3 - Candidate(候选人阶段)</li>\n<li>Stage 4 - Finished(定案阶段)</li>\n</ul>\n<p>一个提案只要能进入 Stage 2，就差不多肯定会包括在以后的正式标准里面。ECMAScript 当前的所有提案，可以在 TC39 的官方网站<a href=\"https://github.com/tc39/ecma262\" target=\"_blank\" rel=\"noopener noreferrer\">github.com/tc39/ecma262</a>查看。</p>\n<p>本书的写作目标之一，是跟踪 ECMAScript 语言的最新进展，介绍 5.1 版本以后所有的新语法。对于那些明确或很有希望，将要列入标准的新语法，都将予以介绍。</p>\n<h2 id=\"ecmascript-的历史\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ecmascript-的历史\"><span>ECMAScript 的历史</span></a></h2>\n<p>ES6 从开始制定到最后发布，整整用了 15 年。</p>\n<p>前面提到，ECMAScript 1.0 是 1997 年发布的，接下来的两年，连续发布了 ECMAScript 2.0(1998 年 6 月)和 ECMAScript 3.0(1999 年 12 月)。3.0 版是一个巨大的成功，在业界得到广泛支持，成为通行标准，奠定了 JavaScript 语言的基本语法，以后的版本完全继承。直到今天，初学者一开始学习 JavaScript，其实就是在学 3.0 版的语法。</p>\n<p>2000 年，ECMAScript 4.0 开始酝酿。这个版本最后没有通过，但是它的大部分内容被 ES6 继承了。因此，ES6 制定的起点其实是 2000 年。</p>\n<p>为什么 ES4 没有通过呢? 因为这个版本太激进了，对 ES3 做了彻底升级，导致标准委员会的一些成员不愿意接受。ECMA 的第 39 号技术专家委员会(Technical Committee 39，简称 TC39)负责制订 ECMAScript 标准，成员包括 Microsoft、Mozilla、Google 等大公司。</p>\n<p>2007 年 10 月，ECMAScript 4.0 版草案发布，本来预计次年 8 月发布正式版本。但是，各方对于是否通过这个标准，发生了严重分歧。以 Yahoo、Microsoft、Google 为首的大公司，反对 JavaScript 的大幅升级，主张小幅改动；以 JavaScript 创造者 Brendan Eich 为首的 Mozilla 公司，则坚持当前的草案。</p>\n<p>2008 年 7 月，由于对于下一个版本应该包括哪些功能，各方分歧太大，争论过于激烈，ECMA 开会决定，中止 ECMAScript 4.0 的开发，将其中涉及现有功能改善的一小部分，发布为 ECMAScript 3.1，而将其他激进的设想扩大范围，放入以后的版本，由于会议的气氛，该版本的项目代号起名为 Harmony(和谐)。会后不久，ECMAScript 3.1 就改名为 ECMAScript 5。</p>\n<p>2009 年 12 月，ECMAScript 5.0 版正式发布。Harmony 项目则一分为二，一些较为可行的设想定名为 JavaScript.next 继续开发，后来演变成 ECMAScript 6；一些不是很成熟的设想，则被视为 JavaScript.next.next，在更远的将来再考虑推出。TC39 委员会的总体考虑是，ES5 与 ES3 基本保持兼容，较大的语法修正和新功能加入，将由 JavaScript.next 完成。当时，JavaScript.next 指的是 ES6，第六版发布以后，就指 ES7。TC39 的判断是，ES5 会在 2013 年的年中成为 JavaScript 开发的主流标准，并在此后五年中一直保持这个位置。</p>\n<p>2011 年 6 月，ECMAScript 5.1 版发布，并且成为 ISO 国际标准(ISO/IEC 16262:2011)。</p>\n<p>2013 年 3 月，ECMAScript 6 草案冻结，不再添加新功能。新的功能设想将被放到 ECMAScript 7。</p>\n<p>2013 年 12 月，ECMAScript 6 草案发布。然后是 12 个月的讨论期，听取各方反馈。</p>\n<p>2015 年 6 月，ECMAScript 6 正式通过，成为国际标准。从 2000 年算起，这时已经过去了 15 年。</p>\n<h2 id=\"部署进度\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#部署进度\"><span>部署进度</span></a></h2>\n<p>各大浏览器的最新版本，对 ES6 的支持可以查看<a href=\"https://kangax.github.io/es5-compat-table/es6/\" target=\"_blank\" rel=\"noopener noreferrer\">kangax.github.io/es5-compat-table/es6/</a>。随着时间的推移，支持度已经越来越高了，超过 90%的 ES6 语法特性都实现了。</p>\n<p>Node.js 是 JavaScript 的服务器运行环境(runtime)。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node.js 已经实现的 ES6 特性。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">node</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --v8-options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> harmony</span></span></code></pre>\n</div><p>上面命令的输出结果，会因为版本的不同而有所不同。</p>\n<p>我写了一个工具 <a href=\"https://github.com/ruanyf/es-checker\" target=\"_blank\" rel=\"noopener noreferrer\">ES-Checker</a>，用来检查各种运行环境对 ES6 的支持情况。访问<a href=\"https://ruanyf.github.io/es-checker\" target=\"_blank\" rel=\"noopener noreferrer\">ruanyf.github.io/es-checker</a>，可以看到您的浏览器支持 ES6 的程度。运行下面的命令，可以查看您正在使用的 Node.js 环境对 ES6 的支持程度。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es-checker</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es-checker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=========================================</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Passes</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 24</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> feature</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Dectations</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Your</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> runtime</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> supports</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 57%</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> of</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ECMAScript</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=========================================</span></span></code></pre>\n</div><h2 id=\"babel-转码器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-转码器\"><span>Babel 转码器</span></a></h2>\n<p><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Babel</a> 是一个广泛使用的 ES6 转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行。这意味着，您可以用 ES6 的方式编写程序，又不用担心现有环境是否支持。下面是一个例子。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 转码前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">input</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">item</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> item</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 转码后</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">input</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">item</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> item</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>上面的原始代码用了箭头函数，Babel 将其转为普通函数，就能在不支持箭头函数的 JavaScript 环境执行了。</p>\n<h3 id=\"配置文件-babelrc\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#配置文件-babelrc\"><span>配置文件 <code v-pre>.babelrc</code></span></a></h3>\n<p>Babel 的配置文件是 <code v-pre>.babelrc</code>，存放在项目的根目录下。使用 Babel 的第一步，就是配置这个文件。</p>\n<p>该文件用来设置转码规则和插件，基本格式如下。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"presets\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"plugins\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: []</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p><code v-pre>presets</code> 字段设定转码规则，官方提供以下的规则集，您可以根据需要安装。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 最新转码规则</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-latest</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># react 转码规则</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-react</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 不同阶段语法提案的转码规则(共有4个阶段)，选装一个</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后，将这些规则加入 <code v-pre>.babelrc</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"presets\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"react\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"stage-2\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"plugins\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: []</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n</div><p>注意，以下所有 Babel 工具和模块的使用，都必须先写好 <code v-pre>.babelrc</code>。</p>\n<h3 id=\"命令行转码-babel-cli\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行转码-babel-cli\"><span>命令行转码 <code v-pre>babel-cli</code></span></a></h3>\n<p>Babel 提供 <code v-pre>babel-cli</code> 工具，用于命令行转码。</p>\n<p>它的安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --global</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>基本用法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 转码结果输出到标准输出</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 转码结果写入一个文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># --out-file 或 -o 参数指定输出文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out-file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> compiled.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> compiled.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 整个目录转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># --out-dir 或 -d 参数指定输出目录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out-dir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># -s 参数生成source map文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码是在全局环境下，进行 Babel 转码。这意味着，如果项目要运行，全局环境必须有 Babel，也就是说项目产生了对环境的依赖。另一方面，这样做也无法支持不同项目使用不同版本的 Babel。</p>\n<p>一个解决办法是将 <code v-pre>babel-cli</code> 安装在项目之中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 安装</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>然后，改写 <code v-pre>package.json</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"babel-cli\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"^6.0.0\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"build\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel src -d lib\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>转码的时候，就执行下面的命令。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">npm</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> build</span></span></code></pre>\n</div><h3 id=\"babel-node\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-node\"><span>babel-node</span></a></h3>\n<p><code v-pre>babel-cli</code> 工具自带一个 <code v-pre>babel-node</code> 命令，提供一个支持 ES6 的 REPL 环境。它支持 Node.js 的 REPL 环境的所有功能，而且可以直接运行 ES6 代码。</p>\n<p>它不用单独安装，而是随 <code v-pre>babel-cli</code> 一起安装。然后，执行 <code v-pre>babel-node</code> 就进入 REPL 环境。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-node</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> => </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">x</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p><code v-pre>babel-node</code> 命令可以直接运行 ES6 脚本。将上面的代码放入脚本文件 <code v-pre>es6.js</code>，然后直接运行。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-node</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es6.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p><code v-pre>babel-node</code> 也可以安装在项目中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>然后，改写 <code v-pre>package.json</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"script-name\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel-node script.js\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面代码中，使用 <code v-pre>babel-node</code> 替代 <code v-pre>node</code>，这样 <code v-pre>script.js</code> 本身就不用做任何转码处理。</p>\n<h3 id=\"babel-register\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-register\"><span>babel-register</span></a></h3>\n<p><code v-pre>babel-register</code> 模块改写 <code v-pre>require</code> 命令，为它加上一个钩子。此后，每当使用 <code v-pre>require</code> 加载 <code v-pre>.js</code>、<code v-pre>.jsx</code>、<code v-pre>.es</code> 和 <code v-pre>.es6</code> 后缀名的文件，就会先用 Babel 进行转码。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-register</span></span></code></pre>\n</div><p>使用时，必须首先加载 <code v-pre>babel-register</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"babel-register\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"./index.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>然后，就不需要手动对 <code v-pre>index.js</code> 转码了。</p>\n<p>需要注意的是，<code v-pre>babel-register</code> 只会对 <code v-pre>require</code> 命令加载的文件转码，而不会对当前文件转码。另外，由于它是实时转码，所以只适合在开发环境使用。</p>\n<h3 id=\"babel-core\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-core\"><span>babel-core</span></a></h3>\n<p>如果某些代码需要调用 Babel 的 API 进行转码，就要使用 <code v-pre>babel-core</code> 模块。</p>\n<p>安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-core</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save</span></span></code></pre>\n</div><p>然后，在项目中就可以调用 <code v-pre>babel-core</code>。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> babel</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-core\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 字符串转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transform</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"code();\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 文件转码(异步)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 文件转码(同步)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// Babel AST转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFromAst</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ast</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置对象 <code v-pre>options</code>，可以参看官方文档<a href=\"https://babeljs.io/docs/usage/options/\" target=\"_blank\" rel=\"noopener noreferrer\">https://babeljs.io/docs/usage/options/</a>。</p>\n<p>下面是一个例子。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> es6Code</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"let x = n => n + 1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> es5Code</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-core\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transform</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">es6Code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  presets</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}).</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// '\"use strict\";\\n\\nvar x = function x(n) {\\n  return n + 1;\\n};'</span></span></code></pre>\n</div><p>上面代码中，<code v-pre>transform</code> 方法的第一个参数是一个字符串，表示需要被转换的 ES6 代码，第二个参数是转换的配置对象。</p>\n<h3 id=\"babel-polyfill\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-polyfill\"><span>babel-polyfill</span></a></h3>\n<p>Babel 默认只转换新的 JavaScript 句法(syntax)，而不转换新的 API，比如 <code v-pre>Iterator</code>、<code v-pre>Generator</code>、<code v-pre>Set</code>、<code v-pre>Map</code>、<code v-pre>Proxy</code>、<code v-pre>Reflect</code>、<code v-pre>Symbol</code>、<code v-pre>Promise</code> 等全局对象，以及一些定义在全局对象上的方法(比如 <code v-pre>Object.assign</code>)都不会转码。</p>\n<p>举例来说，ES6 在 <code v-pre>Array</code> 对象上新增了 <code v-pre>Array.from</code> 方法。Babel 就不会转码这个方法。如果想让这个方法运行，必须使用 <code v-pre>babel-polyfill</code>，为当前环境提供一个垫片。</p>\n<p>安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-polyfill</span></span></code></pre>\n</div><p>然后，在脚本头部，加入如下一行代码。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel-polyfill\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-polyfill\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>Babel 默认不转码的 API 非常多，详细清单可以查看 <code v-pre>babel-plugin-transform-runtime</code> 模块的<a href=\"https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-runtime/src/definitions.js\" target=\"_blank\" rel=\"noopener noreferrer\">definitions.js</a>文件。</p>\n<h3 id=\"浏览器环境\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器环境\"><span>浏览器环境</span></a></h3>\n<p>Babel 也可以用于浏览器环境。但是，从 Babel 6.0 开始，不再直接提供浏览器版本，而是要用构建工具构建出来。如果您没有或不想使用构建工具，可以使用<a href=\"https://github.com/Daniel15/babel-standalone\" target=\"_blank\" rel=\"noopener noreferrer\">babel-standalone</a>模块提供的浏览器版本，将其插入网页。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.4.4/babel.min.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/babel\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Your ES6 code</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>注意，网页实时将 ES6 代码转为 ES5，对性能会有影响。生产环境需要加载已经转码完成的脚本。</p>\n<p>下面是如何将代码打包成浏览器可以使用的脚本，以 <code v-pre>Babel</code> 配合 <code v-pre>Browserify</code> 为例。首先，安装 <code v-pre>babelify</code> 模块。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babelify</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-latest</span></span></code></pre>\n</div><p>然后，再用命令行转换 ES6 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">browserify</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bundle.js</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  -t</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">babelify</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --presets</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">latest</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]</span></span></code></pre>\n</div><p>上面代码将 ES6 脚本 <code v-pre>script.js</code>，转为 <code v-pre>bundle.js</code>，浏览器直接加载后者就可以了。</p>\n<p>在 <code v-pre>package.json</code> 设置下面的代码，就不用每次命令行都输入参数了。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"browserify\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"transform\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babelify\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, { </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"presets\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] }]]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h3 id=\"在线转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#在线转换\"><span>在线转换</span></a></h3>\n<p>Babel 提供一个<a href=\"https://babeljs.io/repl/\" target=\"_blank\" rel=\"noopener noreferrer\">REPL 在线编译器</a>，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。</p>\n<h3 id=\"与其他工具的配合\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#与其他工具的配合\"><span>与其他工具的配合</span></a></h3>\n<p>许多工具需要 Babel 进行前置转码，这里举两个例子: ESLint 和 Mocha。</p>\n<p>ESLint 用于静态检查代码的语法和风格，安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> eslint</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-eslint</span></span></code></pre>\n</div><p>然后，在项目根目录下，新建一个配置文件 <code v-pre>.eslintrc</code>，在其中加入 <code v-pre>parser</code> 字段。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"parser\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-eslint\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"rules\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>再在 <code v-pre>package.json</code> 之中，加入相应的 <code v-pre>scripts</code> 脚本。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"my-module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"lint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"eslint my-files.js\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"babel-eslint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"...\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"eslint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Mocha 则是一个测试框架，如果需要执行使用 ES6 语法的测试脚本，可以修改 <code v-pre>package.json</code> 的 <code v-pre>scripts.test</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"test\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"mocha --ui qunit --compilers js:babel-core/register\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面命令中，<code v-pre>--compilers</code> 参数指定脚本的转码器，规定后缀名为 <code v-pre>js</code> 的文件，都需要使用 <code v-pre>babel-core/register</code> 先转码。</p>\n<h2 id=\"traceur-转码器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#traceur-转码器\"><span>Traceur 转码器</span></a></h2>\n<p>Google 公司的<a href=\"https://github.com/google/traceur-compiler\" target=\"_blank\" rel=\"noopener noreferrer\">Traceur</a>转码器，也可以将 ES6 代码转为 ES5 代码。</p>\n<h3 id=\"直接插入网页\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#直接插入网页\"><span>直接插入网页</span></a></h3>\n<p>Traceur 允许将 ES6 代码直接插入网页。首先，必须在网页头部加载 Traceur 库文件。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/traceur.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/src/bootstrap.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  import</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"./Greeter.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>上面代码中，一共有 4 个 <code v-pre>script</code> 标签。第一个是加载 Traceur 的库文件，第二个和第三个是将这个库文件用于浏览器环境，第四个则是加载用户脚本，这个脚本里面可以使用 ES6 代码。</p>\n<p>注意，第四个 <code v-pre>script</code> 标签的 <code v-pre>type</code> 属性的值是 <code v-pre>module</code>，而不是 <code v-pre>text/javascript</code>。这是 Traceur 编译器识别 ES6 代码的标志，编译器会自动将所有 <code v-pre>type=module</code> 的代码编译为 ES5，然后再交给浏览器执行。</p>\n<p>除了引用外部 ES6 脚本，也可以直接在网页中放置 ES6 代码。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  class Calc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    constructor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      console.log(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Calc constructor'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    add(a, b) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      return a + b;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  var c = new Calc();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  console.log(c.add(4,5));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">&#x3C;/script></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>正常情况下，上面代码会在控制台打印出 <code v-pre>9</code>。</p>\n<p>如果想对 Traceur 的行为有精确控制，可以采用下面参数配置的写法。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Create the System object</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  window.System = new traceur.runtime.BrowserTraceurLoader();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Set some experimental options</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  var metadata = </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    traceurOptions</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      experimental</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      properTailCalls</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      symbols</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      arrayComprehension</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      asyncFunctions</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      asyncGenerators</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> exponentiation</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      forOn</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      generatorComprehension</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">  }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Load your module</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  System.import('./myModule.js', </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).catch(function(ex) </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Import failed'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">ex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">stack</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">  }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，首先生成 Traceur 的全局对象 <code v-pre>window.System</code>，然后 <code v-pre>System.import</code> 方法可以用来加载 ES6。加载的时候，需要传入一个配置对象 <code v-pre>metadata</code>，该对象的 <code v-pre>traceurOptions</code> 属性可以配置支持 ES6 功能。如果设为 <code v-pre>experimental: true</code>，就表示除了 ES6 以外，还支持一些实验性的新功能。</p>\n<h3 id=\"es5-在线转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#es5-在线转换\"><span>ES5 在线转换</span></a></h3>\n<p>Traceur 也提供一个<a href=\"http://google.github.io/traceur-compiler/demo/repl.html\" target=\"_blank\" rel=\"noopener noreferrer\">在线编译器</a>，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。</p>\n<p>上面的例子转为 ES5 代码运行，就是下面这个样子。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/traceur.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/src/bootstrap.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$traceurRuntime.ModuleStore.getAnonymousModule(function() </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"use strict\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  var</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Calc constructor'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">$traceurRuntime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">createClass</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }}, {});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> c</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"命令行转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行转换\"><span>命令行转换</span></a></h3>\n<p>作为命令行工具使用时，Traceur 是一个 Node.js 的模块，首先需要用 npm 安装。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> traceur</span></span></code></pre>\n</div><p>安装成功后，就可以在命令行下使用 Traceur 了。</p>\n<p>Traceur 直接运行 ES6 脚本文件，会在标准输出显示运行结果，以前面的 <code v-pre>calc.js</code> 为例。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> traceur</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Calc</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> constructor</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">9</span></span></code></pre>\n</div><p>如果要将 ES6 脚本转为 ES5 保存，要采用下面的写法。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">traceur</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --script</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es6.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es5.js</span></span></code></pre>\n</div><p>上面代码的 <code v-pre>--script</code> 选项表示指定输入文件，<code v-pre>--out</code> 选项表示指定输出文件。</p>\n<p>为了防止有些特性编译不成功，最好加上 <code v-pre>--experimental</code> 选项。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">traceur</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --script</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es6.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es5.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --experimental</span></span></code></pre>\n</div><p>命令行下转换生成的文件，就可以直接放到浏览器中运行。</p>\n<h3 id=\"node-js-环境的用法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#node-js-环境的用法\"><span>Node.js 环境的用法</span></a></h3>\n<p>Traceur 的 Node.js 用法如下(假定已安装 <code v-pre>traceur</code> 模块)。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> traceur</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"traceur\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 将 ES6 脚本转为字符串</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> contents</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">readFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es6-file.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> result</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> traceur</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">compile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">contents</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  filename</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"es6-file.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  sourceMap</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 其他设置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  modules</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"commonjs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">throw</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// result 对象的 js 属性就是转换后的 ES5 代码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"out.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">js</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// sourceMap 属性对应 map 文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"out.js.map\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">sourceMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<p>ECMAScript 6.0(以下简称 ES6)是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</p>\n<!-- more -->\n<h2 id=\"ecmascript-和-javascript-的关系\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ecmascript-和-javascript-的关系\"><span>ECMAScript 和 JavaScript 的关系</span></a></h2>\n<p>一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系?</p>\n<p>要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件(ECMA-262)的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。</p>\n<p>该标准从一开始就是针对 JavaScript 语言制定的，但是之所以不叫 JavaScript，有两个原因。一是商标，Java 是 Sun 公司的商标，根据授权协议，只有 Netscape 公司可以合法地使用 JavaScript 这个名字，且 JavaScript 本身也已经被 Netscape 公司注册为商标。二是想体现这门语言的制定者是 ECMA，不是 Netscape，这样有利于保证这门语言的开放性和中立性。</p>\n<p>因此，ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现(另外的 ECMAScript 方言还有 Jscript 和 ActionScript)。日常场合，这两个词是可以互换的。</p>\n<h2 id=\"es6-与-ecmascript-2015-的关系\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#es6-与-ecmascript-2015-的关系\"><span>ES6 与 ECMAScript 2015 的关系</span></a></h2>\n<p>ECMAScript 2015(简称 ES2015)这个词，也是经常可以看到的。它与 ES6 是什么关系呢?</p>\n<p>2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。</p>\n<p>但是，因为这个版本引入的语法功能太多，而且制定过程当中，还有很多组织和个人不断提交新功能。事情很快就变得清楚了，不可能在一个版本里面包括所有将要引入的功能。常规的做法是先发布 6.0 版，过一段时间再发 6.1 版，然后是 6.2 版、6.3 版等等。</p>\n<p>但是，标准的制定者不想这样做。他们想让标准的升级成为常规流程: 任何人在任何时候，都可以向标准委员会提交新语法的提案，然后标准委员会每个月开一次会，评估这些提案是否可以接受，需要哪些改进。如果经过多次会议以后，一个提案足够成熟了，就可以正式进入标准了。这就是说，标准的版本升级成为了一个不断滚动的流程，每个月都会有变动。</p>\n<p>标准委员会最终决定，标准在每年的 6 月份正式发布一次，作为当年的正式版本。接下来的时间，就在这个版本的基础上做改动，直到下一年的 6 月份，草案就自然变成了新一年的版本。这样一来，就不需要以前的版本号了，只要用年份标记就可以了。</p>\n<p>ES6 的第一个版本，就这样在 2015 年 6 月发布了，正式名称就是《ECMAScript 2015 标准》(简称 ES2015)。2016 年 6 月，小幅修订的《ECMAScript 2016 标准》(简称 ES2016)如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小(只新增了数组实例的 <code v-pre>includes</code> 方法和指数运算符)，基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。</p>\n<p>因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 ES6 的地方，一般是指 ES2015 标准，但有时也是泛指“下一代 JavaScript 语言”。</p>\n<h2 id=\"语法提案的批准流程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#语法提案的批准流程\"><span>语法提案的批准流程</span></a></h2>\n<p>任何人都可以向标准委员会(又称 TC39 委员会)提案，要求修改语言标准。</p>\n<p>一种新的语法从提案到变成正式标准，需要经历五个阶段。每个阶段的变动都需要由 TC39 委员会批准。</p>\n<ul>\n<li>Stage 0 - Strawman(展示阶段)</li>\n<li>Stage 1 - Proposal(征求意见阶段)</li>\n<li>Stage 2 - Draft(草案阶段)</li>\n<li>Stage 3 - Candidate(候选人阶段)</li>\n<li>Stage 4 - Finished(定案阶段)</li>\n</ul>\n<p>一个提案只要能进入 Stage 2，就差不多肯定会包括在以后的正式标准里面。ECMAScript 当前的所有提案，可以在 TC39 的官方网站<a href=\"https://github.com/tc39/ecma262\" target=\"_blank\" rel=\"noopener noreferrer\">github.com/tc39/ecma262</a>查看。</p>\n<p>本书的写作目标之一，是跟踪 ECMAScript 语言的最新进展，介绍 5.1 版本以后所有的新语法。对于那些明确或很有希望，将要列入标准的新语法，都将予以介绍。</p>\n<h2 id=\"ecmascript-的历史\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ecmascript-的历史\"><span>ECMAScript 的历史</span></a></h2>\n<p>ES6 从开始制定到最后发布，整整用了 15 年。</p>\n<p>前面提到，ECMAScript 1.0 是 1997 年发布的，接下来的两年，连续发布了 ECMAScript 2.0(1998 年 6 月)和 ECMAScript 3.0(1999 年 12 月)。3.0 版是一个巨大的成功，在业界得到广泛支持，成为通行标准，奠定了 JavaScript 语言的基本语法，以后的版本完全继承。直到今天，初学者一开始学习 JavaScript，其实就是在学 3.0 版的语法。</p>\n<p>2000 年，ECMAScript 4.0 开始酝酿。这个版本最后没有通过，但是它的大部分内容被 ES6 继承了。因此，ES6 制定的起点其实是 2000 年。</p>\n<p>为什么 ES4 没有通过呢? 因为这个版本太激进了，对 ES3 做了彻底升级，导致标准委员会的一些成员不愿意接受。ECMA 的第 39 号技术专家委员会(Technical Committee 39，简称 TC39)负责制订 ECMAScript 标准，成员包括 Microsoft、Mozilla、Google 等大公司。</p>\n<p>2007 年 10 月，ECMAScript 4.0 版草案发布，本来预计次年 8 月发布正式版本。但是，各方对于是否通过这个标准，发生了严重分歧。以 Yahoo、Microsoft、Google 为首的大公司，反对 JavaScript 的大幅升级，主张小幅改动；以 JavaScript 创造者 Brendan Eich 为首的 Mozilla 公司，则坚持当前的草案。</p>\n<p>2008 年 7 月，由于对于下一个版本应该包括哪些功能，各方分歧太大，争论过于激烈，ECMA 开会决定，中止 ECMAScript 4.0 的开发，将其中涉及现有功能改善的一小部分，发布为 ECMAScript 3.1，而将其他激进的设想扩大范围，放入以后的版本，由于会议的气氛，该版本的项目代号起名为 Harmony(和谐)。会后不久，ECMAScript 3.1 就改名为 ECMAScript 5。</p>\n<p>2009 年 12 月，ECMAScript 5.0 版正式发布。Harmony 项目则一分为二，一些较为可行的设想定名为 JavaScript.next 继续开发，后来演变成 ECMAScript 6；一些不是很成熟的设想，则被视为 JavaScript.next.next，在更远的将来再考虑推出。TC39 委员会的总体考虑是，ES5 与 ES3 基本保持兼容，较大的语法修正和新功能加入，将由 JavaScript.next 完成。当时，JavaScript.next 指的是 ES6，第六版发布以后，就指 ES7。TC39 的判断是，ES5 会在 2013 年的年中成为 JavaScript 开发的主流标准，并在此后五年中一直保持这个位置。</p>\n<p>2011 年 6 月，ECMAScript 5.1 版发布，并且成为 ISO 国际标准(ISO/IEC 16262:2011)。</p>\n<p>2013 年 3 月，ECMAScript 6 草案冻结，不再添加新功能。新的功能设想将被放到 ECMAScript 7。</p>\n<p>2013 年 12 月，ECMAScript 6 草案发布。然后是 12 个月的讨论期，听取各方反馈。</p>\n<p>2015 年 6 月，ECMAScript 6 正式通过，成为国际标准。从 2000 年算起，这时已经过去了 15 年。</p>\n<h2 id=\"部署进度\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#部署进度\"><span>部署进度</span></a></h2>\n<p>各大浏览器的最新版本，对 ES6 的支持可以查看<a href=\"https://kangax.github.io/es5-compat-table/es6/\" target=\"_blank\" rel=\"noopener noreferrer\">kangax.github.io/es5-compat-table/es6/</a>。随着时间的推移，支持度已经越来越高了，超过 90%的 ES6 语法特性都实现了。</p>\n<p>Node.js 是 JavaScript 的服务器运行环境(runtime)。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node.js 已经实现的 ES6 特性。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">node</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --v8-options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> | </span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">grep</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> harmony</span></span></code></pre>\n</div><p>上面命令的输出结果，会因为版本的不同而有所不同。</p>\n<p>我写了一个工具 <a href=\"https://github.com/ruanyf/es-checker\" target=\"_blank\" rel=\"noopener noreferrer\">ES-Checker</a>，用来检查各种运行环境对 ES6 的支持情况。访问<a href=\"https://ruanyf.github.io/es-checker\" target=\"_blank\" rel=\"noopener noreferrer\">ruanyf.github.io/es-checker</a>，可以看到您的浏览器支持 ES6 的程度。运行下面的命令，可以查看您正在使用的 Node.js 环境对 ES6 的支持程度。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es-checker</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es-checker</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=========================================</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Passes</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 24</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> feature</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Dectations</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Your</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> runtime</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> supports</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> 57%</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> of</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ECMAScript</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 6</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">=========================================</span></span></code></pre>\n</div><h2 id=\"babel-转码器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-转码器\"><span>Babel 转码器</span></a></h2>\n<p><a href=\"https://babeljs.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Babel</a> 是一个广泛使用的 ES6 转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行。这意味着，您可以用 ES6 的方式编写程序，又不用担心现有环境是否支持。下面是一个例子。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 转码前</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">input</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">((</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">item</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">=></span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> item</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 转码后</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">input</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">map</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">item</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> item</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span></code></pre>\n</div><p>上面的原始代码用了箭头函数，Babel 将其转为普通函数，就能在不支持箭头函数的 JavaScript 环境执行了。</p>\n<h3 id=\"配置文件-babelrc\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#配置文件-babelrc\"><span>配置文件 <code v-pre>.babelrc</code></span></a></h3>\n<p>Babel 的配置文件是 <code v-pre>.babelrc</code>，存放在项目的根目录下。使用 Babel 的第一步，就是配置这个文件。</p>\n<p>该文件用来设置转码规则和插件，基本格式如下。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"presets\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"plugins\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: []</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p><code v-pre>presets</code> 字段设定转码规则，官方提供以下的规则集，您可以根据需要安装。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 最新转码规则</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-latest</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># react 转码规则</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-react</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 不同阶段语法提案的转码规则(共有4个阶段)，选装一个</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-0</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-stage-3</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后，将这些规则加入 <code v-pre>.babelrc</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"presets\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"react\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"stage-2\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    ],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"plugins\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: []</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n</div><p>注意，以下所有 Babel 工具和模块的使用，都必须先写好 <code v-pre>.babelrc</code>。</p>\n<h3 id=\"命令行转码-babel-cli\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行转码-babel-cli\"><span>命令行转码 <code v-pre>babel-cli</code></span></a></h3>\n<p>Babel 提供 <code v-pre>babel-cli</code> 工具，用于命令行转码。</p>\n<p>它的安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --global</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>基本用法如下。</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 转码结果输出到标准输出</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 转码结果写入一个文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># --out-file 或 -o 参数指定输出文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out-file</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> compiled.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> example.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> compiled.js</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 整个目录转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># --out-dir 或 -d 参数指定输出目录</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out-dir</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># -s 参数生成source map文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> src</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -d</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> lib</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -s</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码是在全局环境下，进行 Babel 转码。这意味着，如果项目要运行，全局环境必须有 Babel，也就是说项目产生了对环境的依赖。另一方面，这样做也无法支持不同项目使用不同版本的 Babel。</p>\n<p>一个解决办法是将 <code v-pre>babel-cli</code> 安装在项目之中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># 安装</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>然后，改写 <code v-pre>package.json</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"babel-cli\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"^6.0.0\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"build\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel src -d lib\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>转码的时候，就执行下面的命令。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">npm</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> run</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> build</span></span></code></pre>\n</div><h3 id=\"babel-node\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-node\"><span>babel-node</span></a></h3>\n<p><code v-pre>babel-cli</code> 工具自带一个 <code v-pre>babel-node</code> 命令，提供一个支持 ES6 的 REPL 环境。它支持 Node.js 的 REPL 环境的所有功能，而且可以直接运行 ES6 代码。</p>\n<p>它不用单独安装，而是随 <code v-pre>babel-cli</code> 一起安装。然后，执行 <code v-pre>babel-node</code> 就进入 REPL 环境。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-node</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">> (</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">x</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> => </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">x</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\"> *</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">1</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p><code v-pre>babel-node</code> 命令可以直接运行 ES6 脚本。将上面的代码放入脚本文件 <code v-pre>es6.js</code>，然后直接运行。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-node</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> es6.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">2</span></span></code></pre>\n</div><p><code v-pre>babel-node</code> 也可以安装在项目中。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-cli</span></span></code></pre>\n</div><p>然后，改写 <code v-pre>package.json</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"script-name\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel-node script.js\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面代码中，使用 <code v-pre>babel-node</code> 替代 <code v-pre>node</code>，这样 <code v-pre>script.js</code> 本身就不用做任何转码处理。</p>\n<h3 id=\"babel-register\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-register\"><span>babel-register</span></a></h3>\n<p><code v-pre>babel-register</code> 模块改写 <code v-pre>require</code> 命令，为它加上一个钩子。此后，每当使用 <code v-pre>require</code> 加载 <code v-pre>.js</code>、<code v-pre>.jsx</code>、<code v-pre>.es</code> 和 <code v-pre>.es6</code> 后缀名的文件，就会先用 Babel 进行转码。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-register</span></span></code></pre>\n</div><p>使用时，必须首先加载 <code v-pre>babel-register</code>。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"babel-register\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require(</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">\"./index.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>然后，就不需要手动对 <code v-pre>index.js</code> 转码了。</p>\n<p>需要注意的是，<code v-pre>babel-register</code> 只会对 <code v-pre>require</code> 命令加载的文件转码，而不会对当前文件转码。另外，由于它是实时转码，所以只适合在开发环境使用。</p>\n<h3 id=\"babel-core\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-core\"><span>babel-core</span></a></h3>\n<p>如果某些代码需要调用 Babel 的 API 进行转码，就要使用 <code v-pre>babel-core</code> 模块。</p>\n<p>安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-core</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save</span></span></code></pre>\n</div><p>然后，在项目中就可以调用 <code v-pre>babel-core</code>。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> babel</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-core\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 字符串转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transform</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"code();\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 文件转码(异步)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">err</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">; </span><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 文件转码(同步)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"filename.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// Babel AST转码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">babel</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transformFromAst</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">ast</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">options</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// => { code, map, ast }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>配置对象 <code v-pre>options</code>，可以参看官方文档<a href=\"https://babeljs.io/docs/usage/options/\" target=\"_blank\" rel=\"noopener noreferrer\">https://babeljs.io/docs/usage/options/</a>。</p>\n<p>下面是一个例子。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> es6Code</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"let x = n => n + 1\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> es5Code</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-core\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">transform</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">es6Code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  presets</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}).</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">code</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// '\"use strict\";\\n\\nvar x = function x(n) {\\n  return n + 1;\\n};'</span></span></code></pre>\n</div><p>上面代码中，<code v-pre>transform</code> 方法的第一个参数是一个字符串，表示需要被转换的 ES6 代码，第二个参数是转换的配置对象。</p>\n<h3 id=\"babel-polyfill\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#babel-polyfill\"><span>babel-polyfill</span></a></h3>\n<p>Babel 默认只转换新的 JavaScript 句法(syntax)，而不转换新的 API，比如 <code v-pre>Iterator</code>、<code v-pre>Generator</code>、<code v-pre>Set</code>、<code v-pre>Map</code>、<code v-pre>Proxy</code>、<code v-pre>Reflect</code>、<code v-pre>Symbol</code>、<code v-pre>Promise</code> 等全局对象，以及一些定义在全局对象上的方法(比如 <code v-pre>Object.assign</code>)都不会转码。</p>\n<p>举例来说，ES6 在 <code v-pre>Array</code> 对象上新增了 <code v-pre>Array.from</code> 方法。Babel 就不会转码这个方法。如果想让这个方法运行，必须使用 <code v-pre>babel-polyfill</code>，为当前环境提供一个垫片。</p>\n<p>安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-polyfill</span></span></code></pre>\n</div><p>然后，在脚本头部，加入如下一行代码。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">import</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"babel-polyfill\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 或者</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-polyfill\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n</div><p>Babel 默认不转码的 API 非常多，详细清单可以查看 <code v-pre>babel-plugin-transform-runtime</code> 模块的<a href=\"https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-runtime/src/definitions.js\" target=\"_blank\" rel=\"noopener noreferrer\">definitions.js</a>文件。</p>\n<h3 id=\"浏览器环境\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#浏览器环境\"><span>浏览器环境</span></a></h3>\n<p>Babel 也可以用于浏览器环境。但是，从 Babel 6.0 开始，不再直接提供浏览器版本，而是要用构建工具构建出来。如果您没有或不想使用构建工具，可以使用<a href=\"https://github.com/Daniel15/babel-standalone\" target=\"_blank\" rel=\"noopener noreferrer\">babel-standalone</a>模块提供的浏览器版本，将其插入网页。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.4.4/babel.min.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"text/babel\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // Your ES6 code</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>注意，网页实时将 ES6 代码转为 ES5，对性能会有影响。生产环境需要加载已经转码完成的脚本。</p>\n<p>下面是如何将代码打包成浏览器可以使用的脚本，以 <code v-pre>Babel</code> 配合 <code v-pre>Browserify</code> 为例。首先，安装 <code v-pre>babelify</code> 模块。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babelify</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-preset-latest</span></span></code></pre>\n</div><p>然后，再用命令行转换 ES6 脚本。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">browserify</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -o</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> bundle.js</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> \\</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">  -t</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">babelify</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --presets</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [ </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">latest</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> ]</span></span></code></pre>\n</div><p>上面代码将 ES6 脚本 <code v-pre>script.js</code>，转为 <code v-pre>bundle.js</code>，浏览器直接加载后者就可以了。</p>\n<p>在 <code v-pre>package.json</code> 设置下面的代码，就不用每次命令行都输入参数了。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"browserify\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"transform\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [[</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babelify\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, { </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"presets\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> [</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"latest\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">] }]]</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><h3 id=\"在线转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#在线转换\"><span>在线转换</span></a></h3>\n<p>Babel 提供一个<a href=\"https://babeljs.io/repl/\" target=\"_blank\" rel=\"noopener noreferrer\">REPL 在线编译器</a>，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。</p>\n<h3 id=\"与其他工具的配合\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#与其他工具的配合\"><span>与其他工具的配合</span></a></h3>\n<p>许多工具需要 Babel 进行前置转码，这里举两个例子: ESLint 和 Mocha。</p>\n<p>ESLint 用于静态检查代码的语法和风格，安装命令如下。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --save-dev</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> eslint</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> babel-eslint</span></span></code></pre>\n</div><p>然后，在项目根目录下，新建一个配置文件 <code v-pre>.eslintrc</code>，在其中加入 <code v-pre>parser</code> 字段。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"parser\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"babel-eslint\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"rules\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">    ...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>再在 <code v-pre>package.json</code> 之中，加入相应的 <code v-pre>scripts</code> 脚本。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"name\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"my-module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"lint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"eslint my-files.js\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    },</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">    \"devDependencies\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"babel-eslint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"...\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">      \"eslint\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>Mocha 则是一个测试框架，如果需要执行使用 ES6 语法的测试脚本，可以修改 <code v-pre>package.json</code> 的 <code v-pre>scripts.test</code>。</p>\n<div class=\"language-js\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"scripts\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"test\"</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"mocha --ui qunit --compilers js:babel-core/register\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">}</span></span></code></pre>\n</div><p>上面命令中，<code v-pre>--compilers</code> 参数指定脚本的转码器，规定后缀名为 <code v-pre>js</code> 的文件，都需要使用 <code v-pre>babel-core/register</code> 先转码。</p>\n<h2 id=\"traceur-转码器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#traceur-转码器\"><span>Traceur 转码器</span></a></h2>\n<p>Google 公司的<a href=\"https://github.com/google/traceur-compiler\" target=\"_blank\" rel=\"noopener noreferrer\">Traceur</a>转码器，也可以将 ES6 代码转为 ES5 代码。</p>\n<h3 id=\"直接插入网页\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#直接插入网页\"><span>直接插入网页</span></a></h3>\n<p>Traceur 允许将 ES6 代码直接插入网页。首先，必须在网页头部加载 Traceur 库文件。</p>\n<div class=\"language-html\" data-highlighter=\"shiki\" data-ext=\"html\" data-title=\"html\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/traceur.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/src/bootstrap.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">  import</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"./Greeter.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n</div><p>上面代码中，一共有 4 个 <code v-pre>script</code> 标签。第一个是加载 Traceur 的库文件，第二个和第三个是将这个库文件用于浏览器环境，第四个则是加载用户脚本，这个脚本里面可以使用 ES6 代码。</p>\n<p>注意，第四个 <code v-pre>script</code> 标签的 <code v-pre>type</code> 属性的值是 <code v-pre>module</code>，而不是 <code v-pre>text/javascript</code>。这是 Traceur 编译器识别 ES6 代码的标志，编译器会自动将所有 <code v-pre>type=module</code> 的代码编译为 ES5，然后再交给浏览器执行。</p>\n<p>除了引用外部 ES6 脚本，也可以直接在网页中放置 ES6 代码。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> type</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"module\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  class Calc </span><span style=\"--shiki-light:#383A42;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">    constructor</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">      console.log(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Calc constructor'</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    add(a, b) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      return a + b;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  var c = new Calc();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  console.log(c.add(4,5));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">&#x3C;/script></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>正常情况下，上面代码会在控制台打印出 <code v-pre>9</code>。</p>\n<p>如果想对 Traceur 的行为有精确控制，可以采用下面参数配置的写法。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Create the System object</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  window.System = new traceur.runtime.BrowserTraceurLoader();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Set some experimental options</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  var metadata = </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">    traceurOptions</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      experimental</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      properTailCalls</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      symbols</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      arrayComprehension</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      asyncFunctions</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      asyncGenerators</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> exponentiation</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      forOn</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">      generatorComprehension</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">    }</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">  }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  // Load your module</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  System.import('./myModule.js', </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">: </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">metadata</span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).catch(function(ex) </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Import failed'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">ex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">stack</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> ||</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> ex</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">  }</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>上面代码中，首先生成 Traceur 的全局对象 <code v-pre>window.System</code>，然后 <code v-pre>System.import</code> 方法可以用来加载 ES6。加载的时候，需要传入一个配置对象 <code v-pre>metadata</code>，该对象的 <code v-pre>traceurOptions</code> 属性可以配置支持 ES6 功能。如果设为 <code v-pre>experimental: true</code>，就表示除了 ES6 以外，还支持一些实验性的新功能。</p>\n<h3 id=\"es5-在线转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#es5-在线转换\"><span>ES5 在线转换</span></a></h3>\n<p>Traceur 也提供一个<a href=\"http://google.github.io/traceur-compiler/demo/repl.html\" target=\"_blank\" rel=\"noopener noreferrer\">在线编译器</a>，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。</p>\n<p>上面的例子转为 ES5 代码运行，就是下面这个样子。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/traceur.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic\"> src</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"https://google.github.io/traceur-compiler/src/bootstrap.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">>&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">$traceurRuntime.ModuleStore.getAnonymousModule(function() </span><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">{</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">  \"use strict\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  var</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">    console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">'Calc constructor'</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  };</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">$traceurRuntime</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">createClass</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">)(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> function</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">a</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\">b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">    return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> a</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> +</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> b</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">  }}, {});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> c</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\"> new</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> Calc</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">  console</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">log</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">c</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">add</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">4</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">5</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">));</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">  return</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> {};</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#CA1243;--shiki-dark:#C678DD\">}</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">&#x3C;/</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">script</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">></span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h3 id=\"命令行转换\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令行转换\"><span>命令行转换</span></a></h3>\n<p>作为命令行工具使用时，Traceur 是一个 Node.js 的模块，首先需要用 npm 安装。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">npm</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> install</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> -g</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> traceur</span></span></code></pre>\n</div><p>安装成功后，就可以在命令行下使用 Traceur 了。</p>\n<p>Traceur 直接运行 ES6 脚本文件，会在标准输出显示运行结果，以前面的 <code v-pre>calc.js</code> 为例。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> traceur</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.js</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Calc</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> constructor</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">9</span></span></code></pre>\n</div><p>如果要将 ES6 脚本转为 ES5 保存，要采用下面的写法。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">traceur</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --script</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es6.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es5.js</span></span></code></pre>\n</div><p>上面代码的 <code v-pre>--script</code> 选项表示指定输入文件，<code v-pre>--out</code> 选项表示指定输出文件。</p>\n<p>为了防止有些特性编译不成功，最好加上 <code v-pre>--experimental</code> 选项。</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">traceur</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --script</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es6.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --out</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> calc.es5.js</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> --experimental</span></span></code></pre>\n</div><p>命令行下转换生成的文件，就可以直接放到浏览器中运行。</p>\n<h3 id=\"node-js-环境的用法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#node-js-环境的用法\"><span>Node.js 环境的用法</span></a></h3>\n<p>Traceur 的 Node.js 用法如下(假定已安装 <code v-pre>traceur</code> 模块)。</p>\n<div class=\"language-js line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"js\" data-title=\"js\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> traceur</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"traceur\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> fs</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\"> require</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"fs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// 将 ES6 脚本转为字符串</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> contents</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">readFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"es6-file.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">).</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">toString</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">();</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">var</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\"> result</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\"> =</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> traceur</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">compile</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E06C75\">contents</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, {</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  filename</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"es6-file.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  sourceMap</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> true</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">  // 其他设置</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">  modules</span><span style=\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\">:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"commonjs\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">});</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">if</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">throw</span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\"> result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">error</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// result 对象的 js 属性就是转换后的 ES5 代码</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"out.js\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">js</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">// sourceMap 属性对应 map 文件</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">fs</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">writeFileSync</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">(</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">\"out.js.map\"</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">, </span><span style=\"--shiki-light:#383A42;--shiki-dark:#E5C07B\">result</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">.</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">sourceMap</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">);</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\nECMAScript 6.0(以下简称 ES6)是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。\n\n<!-- more -->\n\n## ECMAScript 和 JavaScript 的关系\n\n一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系?\n\n要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件(ECMA-262)的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。\n\n该标准从一开始就是针对 JavaScript 语言制定的，但是之所以不叫 JavaScript，有两个原因。一是商标，Java 是 Sun 公司的商标，根据授权协议，只有 Netscape 公司可以合法地使用 JavaScript 这个名字，且 JavaScript 本身也已经被 Netscape 公司注册为商标。二是想体现这门语言的制定者是 ECMA，不是 Netscape，这样有利于保证这门语言的开放性和中立性。\n\n因此，ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现(另外的 ECMAScript 方言还有 Jscript 和 ActionScript)。日常场合，这两个词是可以互换的。\n\n## ES6 与 ECMAScript 2015 的关系\n\nECMAScript 2015(简称 ES2015)这个词，也是经常可以看到的。它与 ES6 是什么关系呢?\n\n2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。\n\n但是，因为这个版本引入的语法功能太多，而且制定过程当中，还有很多组织和个人不断提交新功能。事情很快就变得清楚了，不可能在一个版本里面包括所有将要引入的功能。常规的做法是先发布 6.0 版，过一段时间再发 6.1 版，然后是 6.2 版、6.3 版等等。\n\n但是，标准的制定者不想这样做。他们想让标准的升级成为常规流程: 任何人在任何时候，都可以向标准委员会提交新语法的提案，然后标准委员会每个月开一次会，评估这些提案是否可以接受，需要哪些改进。如果经过多次会议以后，一个提案足够成熟了，就可以正式进入标准了。这就是说，标准的版本升级成为了一个不断滚动的流程，每个月都会有变动。\n\n标准委员会最终决定，标准在每年的 6 月份正式发布一次，作为当年的正式版本。接下来的时间，就在这个版本的基础上做改动，直到下一年的 6 月份，草案就自然变成了新一年的版本。这样一来，就不需要以前的版本号了，只要用年份标记就可以了。\n\nES6 的第一个版本，就这样在 2015 年 6 月发布了，正式名称就是《ECMAScript 2015 标准》(简称 ES2015)。2016 年 6 月，小幅修订的《ECMAScript 2016 标准》(简称 ES2016)如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小(只新增了数组实例的 `includes` 方法和指数运算符)，基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。\n\n因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 ES6 的地方，一般是指 ES2015 标准，但有时也是泛指“下一代 JavaScript 语言”。\n\n## 语法提案的批准流程\n\n任何人都可以向标准委员会(又称 TC39 委员会)提案，要求修改语言标准。\n\n一种新的语法从提案到变成正式标准，需要经历五个阶段。每个阶段的变动都需要由 TC39 委员会批准。\n\n- Stage 0 - Strawman(展示阶段)\n- Stage 1 - Proposal(征求意见阶段)\n- Stage 2 - Draft(草案阶段)\n- Stage 3 - Candidate(候选人阶段)\n- Stage 4 - Finished(定案阶段)\n\n一个提案只要能进入 Stage 2，就差不多肯定会包括在以后的正式标准里面。ECMAScript 当前的所有提案，可以在 TC39 的官方网站[github.com/tc39/ecma262](https://github.com/tc39/ecma262)查看。\n\n本书的写作目标之一，是跟踪 ECMAScript 语言的最新进展，介绍 5.1 版本以后所有的新语法。对于那些明确或很有希望，将要列入标准的新语法，都将予以介绍。\n\n## ECMAScript 的历史\n\nES6 从开始制定到最后发布，整整用了 15 年。\n\n前面提到，ECMAScript 1.0 是 1997 年发布的，接下来的两年，连续发布了 ECMAScript 2.0(1998 年 6 月)和 ECMAScript 3.0(1999 年 12 月)。3.0 版是一个巨大的成功，在业界得到广泛支持，成为通行标准，奠定了 JavaScript 语言的基本语法，以后的版本完全继承。直到今天，初学者一开始学习 JavaScript，其实就是在学 3.0 版的语法。\n\n2000 年，ECMAScript 4.0 开始酝酿。这个版本最后没有通过，但是它的大部分内容被 ES6 继承了。因此，ES6 制定的起点其实是 2000 年。\n\n为什么 ES4 没有通过呢? 因为这个版本太激进了，对 ES3 做了彻底升级，导致标准委员会的一些成员不愿意接受。ECMA 的第 39 号技术专家委员会(Technical Committee 39，简称 TC39)负责制订 ECMAScript 标准，成员包括 Microsoft、Mozilla、Google 等大公司。\n\n2007 年 10 月，ECMAScript 4.0 版草案发布，本来预计次年 8 月发布正式版本。但是，各方对于是否通过这个标准，发生了严重分歧。以 Yahoo、Microsoft、Google 为首的大公司，反对 JavaScript 的大幅升级，主张小幅改动；以 JavaScript 创造者 Brendan Eich 为首的 Mozilla 公司，则坚持当前的草案。\n\n2008 年 7 月，由于对于下一个版本应该包括哪些功能，各方分歧太大，争论过于激烈，ECMA 开会决定，中止 ECMAScript 4.0 的开发，将其中涉及现有功能改善的一小部分，发布为 ECMAScript 3.1，而将其他激进的设想扩大范围，放入以后的版本，由于会议的气氛，该版本的项目代号起名为 Harmony(和谐)。会后不久，ECMAScript 3.1 就改名为 ECMAScript 5。\n\n2009 年 12 月，ECMAScript 5.0 版正式发布。Harmony 项目则一分为二，一些较为可行的设想定名为 JavaScript.next 继续开发，后来演变成 ECMAScript 6；一些不是很成熟的设想，则被视为 JavaScript.next.next，在更远的将来再考虑推出。TC39 委员会的总体考虑是，ES5 与 ES3 基本保持兼容，较大的语法修正和新功能加入，将由 JavaScript.next 完成。当时，JavaScript.next 指的是 ES6，第六版发布以后，就指 ES7。TC39 的判断是，ES5 会在 2013 年的年中成为 JavaScript 开发的主流标准，并在此后五年中一直保持这个位置。\n\n2011 年 6 月，ECMAScript 5.1 版发布，并且成为 ISO 国际标准(ISO/IEC 16262:2011)。\n\n2013 年 3 月，ECMAScript 6 草案冻结，不再添加新功能。新的功能设想将被放到 ECMAScript 7。\n\n2013 年 12 月，ECMAScript 6 草案发布。然后是 12 个月的讨论期，听取各方反馈。\n\n2015 年 6 月，ECMAScript 6 正式通过，成为国际标准。从 2000 年算起，这时已经过去了 15 年。\n\n## 部署进度\n\n各大浏览器的最新版本，对 ES6 的支持可以查看[kangax.github.io/es5-compat-table/es6/](https://kangax.github.io/es5-compat-table/es6/)。随着时间的推移，支持度已经越来越高了，超过 90%的 ES6 语法特性都实现了。\n\nNode.js 是 JavaScript 的服务器运行环境(runtime)。它对 ES6 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 Node.js 已经实现的 ES6 特性。\n\n```bash\nnode --v8-options | grep harmony\n```\n\n上面命令的输出结果，会因为版本的不同而有所不同。\n\n我写了一个工具 [ES-Checker](https://github.com/ruanyf/es-checker)，用来检查各种运行环境对 ES6 的支持情况。访问[ruanyf.github.io/es-checker](https://ruanyf.github.io/es-checker)，可以看到您的浏览器支持 ES6 的程度。运行下面的命令，可以查看您正在使用的 Node.js 环境对 ES6 的支持程度。\n\n```bash\n$ npm install -g es-checker\n$ es-checker\n\n=========================================\nPasses 24 feature Dectations\nYour runtime supports 57% of ECMAScript 6\n=========================================\n```\n\n## Babel 转码器\n\n[Babel](https://babeljs.io/) 是一个广泛使用的 ES6 转码器，可以将 ES6 代码转为 ES5 代码，从而在现有环境执行。这意味着，您可以用 ES6 的方式编写程序，又不用担心现有环境是否支持。下面是一个例子。\n\n```js\n// 转码前\ninput.map((item) => item + 1);\n\n// 转码后\ninput.map(function (item) {\n  return item + 1;\n});\n```\n\n上面的原始代码用了箭头函数，Babel 将其转为普通函数，就能在不支持箭头函数的 JavaScript 环境执行了。\n\n### 配置文件 `.babelrc`\n\nBabel 的配置文件是 `.babelrc`，存放在项目的根目录下。使用 Babel 的第一步，就是配置这个文件。\n\n该文件用来设置转码规则和插件，基本格式如下。\n\n```js\n{\n  \"presets\": [],\n  \"plugins\": []\n}\n```\n\n`presets` 字段设定转码规则，官方提供以下的规则集，您可以根据需要安装。\n\n```bash\n# 最新转码规则\n$ npm install --save-dev babel-preset-latest\n\n# react 转码规则\n$ npm install --save-dev babel-preset-react\n\n# 不同阶段语法提案的转码规则(共有4个阶段)，选装一个\n$ npm install --save-dev babel-preset-stage-0\n$ npm install --save-dev babel-preset-stage-1\n$ npm install --save-dev babel-preset-stage-2\n$ npm install --save-dev babel-preset-stage-3\n```\n\n然后，将这些规则加入 `.babelrc`。\n\n```js\n  {\n    \"presets\": [\n      \"latest\",\n      \"react\",\n      \"stage-2\"\n    ],\n    \"plugins\": []\n  }\n```\n\n注意，以下所有 Babel 工具和模块的使用，都必须先写好 `.babelrc`。\n\n### 命令行转码 `babel-cli`\n\nBabel 提供 `babel-cli` 工具，用于命令行转码。\n\n它的安装命令如下。\n\n```bash\nnpm install --global babel-cli\n```\n\n基本用法如下。\n\n```bash\n# 转码结果输出到标准输出\n$ babel example.js\n\n# 转码结果写入一个文件\n# --out-file 或 -o 参数指定输出文件\n$ babel example.js --out-file compiled.js\n# 或者\n$ babel example.js -o compiled.js\n\n# 整个目录转码\n# --out-dir 或 -d 参数指定输出目录\n$ babel src --out-dir lib\n# 或者\n$ babel src -d lib\n\n# -s 参数生成source map文件\n$ babel src -d lib -s\n```\n\n上面代码是在全局环境下，进行 Babel 转码。这意味着，如果项目要运行，全局环境必须有 Babel，也就是说项目产生了对环境的依赖。另一方面，这样做也无法支持不同项目使用不同版本的 Babel。\n\n一个解决办法是将 `babel-cli` 安装在项目之中。\n\n```bash\n# 安装\n$ npm install --save-dev babel-cli\n```\n\n然后，改写 `package.json`。\n\n```js\n{\n  // ...\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.0.0\"\n  },\n  \"scripts\": {\n    \"build\": \"babel src -d lib\"\n  },\n}\n```\n\n转码的时候，就执行下面的命令。\n\n```js\nnpm run build\n```\n\n### babel-node\n\n`babel-cli` 工具自带一个 `babel-node` 命令，提供一个支持 ES6 的 REPL 环境。它支持 Node.js 的 REPL 环境的所有功能，而且可以直接运行 ES6 代码。\n\n它不用单独安装，而是随 `babel-cli` 一起安装。然后，执行 `babel-node` 就进入 REPL 环境。\n\n```bash\n$ babel-node\n> (x => x * 2)(1)\n2\n```\n\n`babel-node` 命令可以直接运行 ES6 脚本。将上面的代码放入脚本文件 `es6.js`，然后直接运行。\n\n```bash\n$ babel-node es6.js\n2\n```\n\n`babel-node` 也可以安装在项目中。\n\n```bash\nnpm install --save-dev babel-cli\n```\n\n然后，改写 `package.json`。\n\n```js\n{\n  \"scripts\": {\n    \"script-name\": \"babel-node script.js\"\n  }\n}\n```\n\n上面代码中，使用 `babel-node` 替代 `node`，这样 `script.js` 本身就不用做任何转码处理。\n\n### babel-register\n\n`babel-register` 模块改写 `require` 命令，为它加上一个钩子。此后，每当使用 `require` 加载 `.js`、`.jsx`、`.es` 和 `.es6` 后缀名的文件，就会先用 Babel 进行转码。\n\n```bash\nnpm install --save-dev babel-register\n```\n\n使用时，必须首先加载 `babel-register`。\n\n```bash\nrequire(\"babel-register\");\nrequire(\"./index.js\");\n```\n\n然后，就不需要手动对 `index.js` 转码了。\n\n需要注意的是，`babel-register` 只会对 `require` 命令加载的文件转码，而不会对当前文件转码。另外，由于它是实时转码，所以只适合在开发环境使用。\n\n### babel-core\n\n如果某些代码需要调用 Babel 的 API 进行转码，就要使用 `babel-core` 模块。\n\n安装命令如下。\n\n```bash\nnpm install babel-core --save\n```\n\n然后，在项目中就可以调用 `babel-core`。\n\n```js\nvar babel = require(\"babel-core\");\n\n// 字符串转码\nbabel.transform(\"code();\", options);\n// => { code, map, ast }\n\n// 文件转码(异步)\nbabel.transformFile(\"filename.js\", options, function (err, result) {\n  result; // => { code, map, ast }\n});\n\n// 文件转码(同步)\nbabel.transformFileSync(\"filename.js\", options);\n// => { code, map, ast }\n\n// Babel AST转码\nbabel.transformFromAst(ast, code, options);\n// => { code, map, ast }\n```\n\n配置对象 `options`，可以参看官方文档[https://babeljs.io/docs/usage/options/](https://babeljs.io/docs/usage/options/)。\n\n下面是一个例子。\n\n```js\nvar es6Code = \"let x = n => n + 1\";\nvar es5Code = require(\"babel-core\").transform(es6Code, {\n  presets: [\"latest\"],\n}).code;\n// '\"use strict\";\\n\\nvar x = function x(n) {\\n  return n + 1;\\n};'\n```\n\n上面代码中，`transform` 方法的第一个参数是一个字符串，表示需要被转换的 ES6 代码，第二个参数是转换的配置对象。\n\n### babel-polyfill\n\nBabel 默认只转换新的 JavaScript 句法(syntax)，而不转换新的 API，比如 `Iterator`、`Generator`、`Set`、`Map`、`Proxy`、`Reflect`、`Symbol`、`Promise` 等全局对象，以及一些定义在全局对象上的方法(比如 `Object.assign`)都不会转码。\n\n举例来说，ES6 在 `Array` 对象上新增了 `Array.from` 方法。Babel 就不会转码这个方法。如果想让这个方法运行，必须使用 `babel-polyfill`，为当前环境提供一个垫片。\n\n安装命令如下。\n\n```bash\nnpm install --save babel-polyfill\n```\n\n然后，在脚本头部，加入如下一行代码。\n\n```js\nimport \"babel-polyfill\";\n// 或者\nrequire(\"babel-polyfill\");\n```\n\nBabel 默认不转码的 API 非常多，详细清单可以查看 `babel-plugin-transform-runtime` 模块的[definitions.js](https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-runtime/src/definitions.js)文件。\n\n### 浏览器环境\n\nBabel 也可以用于浏览器环境。但是，从 Babel 6.0 开始，不再直接提供浏览器版本，而是要用构建工具构建出来。如果您没有或不想使用构建工具，可以使用[babel-standalone](https://github.com/Daniel15/babel-standalone)模块提供的浏览器版本，将其插入网页。\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.4.4/babel.min.js\"></script>\n<script type=\"text/babel\">\n  // Your ES6 code\n</script>\n```\n\n注意，网页实时将 ES6 代码转为 ES5，对性能会有影响。生产环境需要加载已经转码完成的脚本。\n\n下面是如何将代码打包成浏览器可以使用的脚本，以 `Babel` 配合 `Browserify` 为例。首先，安装 `babelify` 模块。\n\n```bash\nnpm install --save-dev babelify babel-preset-latest\n```\n\n然后，再用命令行转换 ES6 脚本。\n\n```bash\nbrowserify script.js -o bundle.js \\\n  -t [ babelify --presets [ latest ] ]\n```\n\n上面代码将 ES6 脚本 `script.js`，转为 `bundle.js`，浏览器直接加载后者就可以了。\n\n在 `package.json` 设置下面的代码，就不用每次命令行都输入参数了。\n\n```js\n{\n  \"browserify\": {\n    \"transform\": [[\"babelify\", { \"presets\": [\"latest\"] }]]\n  }\n}\n```\n\n### 在线转换\n\nBabel 提供一个[REPL 在线编译器](https://babeljs.io/repl/)，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。\n\n### 与其他工具的配合\n\n许多工具需要 Babel 进行前置转码，这里举两个例子: ESLint 和 Mocha。\n\nESLint 用于静态检查代码的语法和风格，安装命令如下。\n\n```bash\nnpm install --save-dev eslint babel-eslint\n```\n\n然后，在项目根目录下，新建一个配置文件 `.eslintrc`，在其中加入 `parser` 字段。\n\n```js\n{\n  \"parser\": \"babel-eslint\",\n  \"rules\": {\n    ...\n  }\n}\n```\n\n再在 `package.json` 之中，加入相应的 `scripts` 脚本。\n\n```js\n  {\n    \"name\": \"my-module\",\n    \"scripts\": {\n      \"lint\": \"eslint my-files.js\"\n    },\n    \"devDependencies\": {\n      \"babel-eslint\": \"...\",\n      \"eslint\": \"...\"\n    }\n  }\n```\n\nMocha 则是一个测试框架，如果需要执行使用 ES6 语法的测试脚本，可以修改 `package.json` 的 `scripts.test`。\n\n```js\n\"scripts\": {\n  \"test\": \"mocha --ui qunit --compilers js:babel-core/register\"\n}\n```\n\n上面命令中，`--compilers` 参数指定脚本的转码器，规定后缀名为 `js` 的文件，都需要使用 `babel-core/register` 先转码。\n\n## Traceur 转码器\n\nGoogle 公司的[Traceur](https://github.com/google/traceur-compiler)转码器，也可以将 ES6 代码转为 ES5 代码。\n\n### 直接插入网页\n\nTraceur 允许将 ES6 代码直接插入网页。首先，必须在网页头部加载 Traceur 库文件。\n\n```html\n<script src=\"https://google.github.io/traceur-compiler/bin/traceur.js\"></script>\n<script src=\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"></script>\n<script src=\"https://google.github.io/traceur-compiler/src/bootstrap.js\"></script>\n<script type=\"module\">\n  import \"./Greeter.js\";\n</script>\n```\n\n上面代码中，一共有 4 个 `script` 标签。第一个是加载 Traceur 的库文件，第二个和第三个是将这个库文件用于浏览器环境，第四个则是加载用户脚本，这个脚本里面可以使用 ES6 代码。\n\n注意，第四个 `script` 标签的 `type` 属性的值是 `module`，而不是 `text/javascript`。这是 Traceur 编译器识别 ES6 代码的标志，编译器会自动将所有 `type=module` 的代码编译为 ES5，然后再交给浏览器执行。\n\n除了引用外部 ES6 脚本，也可以直接在网页中放置 ES6 代码。\n\n```js\n<script type=\"module\">\n  class Calc {\n    constructor() {\n      console.log('Calc constructor');\n    }\n    add(a, b) {\n      return a + b;\n    }\n  }\n\n  var c = new Calc();\n  console.log(c.add(4,5));\n</script>\n```\n\n正常情况下，上面代码会在控制台打印出 `9`。\n\n如果想对 Traceur 的行为有精确控制，可以采用下面参数配置的写法。\n\n```js\n<script>\n  // Create the System object\n  window.System = new traceur.runtime.BrowserTraceurLoader();\n  // Set some experimental options\n  var metadata = {\n    traceurOptions: {\n      experimental: true,\n      properTailCalls: true,\n      symbols: true,\n      arrayComprehension: true,\n      asyncFunctions: true,\n      asyncGenerators: exponentiation,\n      forOn: true,\n      generatorComprehension: true\n    }\n  };\n  // Load your module\n  System.import('./myModule.js', {metadata: metadata}).catch(function(ex) {\n    console.error('Import failed', ex.stack || ex);\n  });\n</script>\n```\n\n上面代码中，首先生成 Traceur 的全局对象 `window.System`，然后 `System.import` 方法可以用来加载 ES6。加载的时候，需要传入一个配置对象 `metadata`，该对象的 `traceurOptions` 属性可以配置支持 ES6 功能。如果设为 `experimental: true`，就表示除了 ES6 以外，还支持一些实验性的新功能。\n\n### ES5 在线转换\n\nTraceur 也提供一个[在线编译器](http://google.github.io/traceur-compiler/demo/repl.html)，可以在线将 ES6 代码转为 ES5 代码。转换后的代码，可以直接作为 ES5 代码插入网页运行。\n\n上面的例子转为 ES5 代码运行，就是下面这个样子。\n\n```js\n<script src=\"https://google.github.io/traceur-compiler/bin/traceur.js\"></script>\n<script src=\"https://google.github.io/traceur-compiler/bin/BrowserSystem.js\"></script>\n<script src=\"https://google.github.io/traceur-compiler/src/bootstrap.js\"></script>\n<script>\n$traceurRuntime.ModuleStore.getAnonymousModule(function() {\n  \"use strict\";\n\n  var Calc = function Calc() {\n    console.log('Calc constructor');\n  };\n\n  ($traceurRuntime.createClass)(Calc, {add: function(a, b) {\n    return a + b;\n  }}, {});\n\n  var c = new Calc();\n  console.log(c.add(4, 5));\n  return {};\n});\n</script>\n```\n\n### 命令行转换\n\n作为命令行工具使用时，Traceur 是一个 Node.js 的模块，首先需要用 npm 安装。\n\n```bash\nnpm install -g traceur\n```\n\n安装成功后，就可以在命令行下使用 Traceur 了。\n\nTraceur 直接运行 ES6 脚本文件，会在标准输出显示运行结果，以前面的 `calc.js` 为例。\n\n```bash\n$ traceur calc.js\nCalc constructor\n9\n```\n\n如果要将 ES6 脚本转为 ES5 保存，要采用下面的写法。\n\n```bash\ntraceur --script calc.es6.js --out calc.es5.js\n```\n\n上面代码的 `--script` 选项表示指定输入文件，`--out` 选项表示指定输出文件。\n\n为了防止有些特性编译不成功，最好加上 `--experimental` 选项。\n\n```bash\ntraceur --script calc.es6.js --out calc.es5.js --experimental\n```\n\n命令行下转换生成的文件，就可以直接放到浏览器中运行。\n\n### Node.js 环境的用法\n\nTraceur 的 Node.js 用法如下(假定已安装 `traceur` 模块)。\n\n```js\nvar traceur = require(\"traceur\");\nvar fs = require(\"fs\");\n\n// 将 ES6 脚本转为字符串\nvar contents = fs.readFileSync(\"es6-file.js\").toString();\n\nvar result = traceur.compile(contents, {\n  filename: \"es6-file.js\",\n  sourceMap: true,\n  // 其他设置\n  modules: \"commonjs\",\n});\n\nif (result.error) throw result.error;\n\n// result 对象的 js 属性就是转换后的 ES5 代码\nfs.writeFileSync(\"out.js\", result.js);\n// sourceMap 属性对应 map 文件\nfs.writeFileSync(\"out.js.map\", result.sourceMap);\n```\n","excerpt":"","title":"","headers":[{"level":2,"title":"ECMAScript 和 JavaScript 的关系","slug":"ecmascript-和-javascript-的关系","link":"#ecmascript-和-javascript-的关系","children":[]},{"level":2,"title":"ES6 与 ECMAScript 2015 的关系","slug":"es6-与-ecmascript-2015-的关系","link":"#es6-与-ecmascript-2015-的关系","children":[]},{"level":2,"title":"语法提案的批准流程","slug":"语法提案的批准流程","link":"#语法提案的批准流程","children":[]},{"level":2,"title":"ECMAScript 的历史","slug":"ecmascript-的历史","link":"#ecmascript-的历史","children":[]},{"level":2,"title":"部署进度","slug":"部署进度","link":"#部署进度","children":[]},{"level":2,"title":"Babel 转码器","slug":"babel-转码器","link":"#babel-转码器","children":[{"level":3,"title":"配置文件 .babelrc","slug":"配置文件-babelrc","link":"#配置文件-babelrc","children":[]},{"level":3,"title":"命令行转码 babel-cli","slug":"命令行转码-babel-cli","link":"#命令行转码-babel-cli","children":[]},{"level":3,"title":"babel-node","slug":"babel-node","link":"#babel-node","children":[]},{"level":3,"title":"babel-register","slug":"babel-register","link":"#babel-register","children":[]},{"level":3,"title":"babel-core","slug":"babel-core","link":"#babel-core","children":[]},{"level":3,"title":"babel-polyfill","slug":"babel-polyfill","link":"#babel-polyfill","children":[]},{"level":3,"title":"浏览器环境","slug":"浏览器环境","link":"#浏览器环境","children":[]},{"level":3,"title":"在线转换","slug":"在线转换","link":"#在线转换","children":[]},{"level":3,"title":"与其他工具的配合","slug":"与其他工具的配合","link":"#与其他工具的配合","children":[]}]},{"level":2,"title":"Traceur 转码器","slug":"traceur-转码器","link":"#traceur-转码器","children":[{"level":3,"title":"直接插入网页","slug":"直接插入网页","link":"#直接插入网页","children":[]},{"level":3,"title":"ES5 在线转换","slug":"es5-在线转换","link":"#es5-在线转换","children":[]},{"level":3,"title":"命令行转换","slug":"命令行转换","link":"#命令行转换","children":[]},{"level":3,"title":"Node.js 环境的用法","slug":"node-js-环境的用法","link":"#node-js-环境的用法","children":[]}]}]}}
