{"content":"<h1 id=\"环境变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#环境变量\"><span>环境变量</span></a></h1>\n<h2 id=\"变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#变量\"><span>变量</span></a></h2>\n<p>变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值。在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录 (HOME)、邮件存放位置 (MAIL)等。\n值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。</p>\n<p>我们可以使用 env 命令来查看到 Linux 系统中所有的环境变量，执行命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# env</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">ORBIT_SOCKETDIR=/tmp/orbit-root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">HOSTNAME=livecd.centos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">GIO_LAUNCHED_DESKTOP_FILE_PID=2065</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">TERM=xterm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">SHELL=/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">......</span></span></code></pre>\n</div><p>Linux 系统能够正常运行并且为用户提供服务，需要数百个环境变量来协同工作，但是，我们没有必要逐一学习每个变量。常见变量见下表:</p>\n<table>\n<thead>\n<tr>\n<th>环境变量名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HOME</td>\n<td>用户的主目录(也称家目录)</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>用户使用的 Shell 解释器名称</td>\n</tr>\n<tr>\n<td>PATH</td>\n<td>定义命令行解释器搜索用户执行命令的路径</td>\n</tr>\n<tr>\n<td>EDITOR</td>\n<td>用户默认的文本解释器</td>\n</tr>\n<tr>\n<td>RANDOM</td>\n<td>生成一个随机数字</td>\n</tr>\n<tr>\n<td>LANG</td>\n<td>系统语言、语系名称</td>\n</tr>\n<tr>\n<td>HISTSIZE</td>\n<td>输出的历史命令记录条数</td>\n</tr>\n<tr>\n<td>HISTFILESIZE</td>\n<td>保存的历史命令记录条数</td>\n</tr>\n<tr>\n<td>PS1</td>\n<td>Bash 解释器的提示符</td>\n</tr>\n<tr>\n<td>MAIL</td>\n<td>邮件保存路径</td>\n</tr>\n</tbody>\n</table>\n<p>Linux 作为一个多用户多任务的操作系统，能够为每个用户提供独立的、合适的工作运行环境，因此，一个相同的环境变量会因为用户身份的不同而具有不同的值。</p>\n<p>例如，使用下述命令来查看 <code v-pre>HOME</code> 变量在不同用户身份下都有哪些值:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# su - user1  &#x3C;--切换到 user1 用户身份</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/user1</span></span></code></pre>\n</div><p>这里的 <code v-pre>su</code> 命令可以临时切换用户身份，此命令的具体用法会在后续章节做详细介绍。</p>\n<p>其实，环境变量是由固定的变量名与用户或系统设置的变量值两部分组成的，我们完全可以自行创建环境变量来满足工作需求。例如，设置一个名称为 <code v-pre>WORKDIR</code> 的环境变量，方便用户更轻松地进入一个层次较深的目录，执行命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mkdir /home/work1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">WORKDIR</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/home/work1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/work1</span></span></code></pre>\n</div><p>但是，这样的环境变量不具有全局性，作用范围也有限，默认情况下不能被其他用户使用。如果工作需要，可以使用 <code v-pre>export</code> 命令将其提升为全局环境变量，这样其他用户就可以使用它了:</p>\n<div class=\"language-shellsession line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# su user1  &#x3C;-- 切换到 user1，发现无法使用 WORKDIR 自定义变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ exit &#x3C;--退出user1身份</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# su user1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost work1]$ pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/work1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"path\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#path\"><span>path</span></a></h2>\n<p>在讲解 PATH 环境变量之前，首先介绍一下 <code v-pre>which</code> 命令，它用于查找某个命令所在的绝对路径。例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which rm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/bin/rm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which rmdir</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/bin/rmdir</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">alias ls='ls --color=auto'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        /bin/ls</span></span></code></pre>\n</div><p>注意，<code v-pre>ls</code> 是一个相对特殊的命令，它使用 alias 命令做了别名，也就是说，我们常用的 <code v-pre>ls</code> 实际上执行的是 <code v-pre>ls --color=auto</code>。</p>\n<p>通过使用 <code v-pre>which</code> 命令，可以查找各个外部命令(和 Shell 内置命令相对)所在的绝对路径。学到这里，读者是否有这样一个疑问，为什么前面在使用 <code v-pre>rm</code>、<code v-pre>rmdir</code>、<code v-pre>ls</code> 等命令时，无论当前位于哪个目录，都可以直接使用，而无需指明命令的执行文件所在的位置 (绝对路径) 呢? 其实，这是 PATH 环境变量在起作用。</p>\n<p>首先，执行如下命令:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin</span></span></code></pre>\n</div><p>这里的 <code v-pre>echo</code> 命令用来输出 PATH 环境变量的值(这里的 <code v-pre>$</code> 是 PATH 的前缀符号)，PATH 环境变量的内容是由一堆目录组成的，各目录之间用冒号 <code v-pre>:</code> 隔开。当执行某个命令时，Linux 会依照 PATH 中包含的目录依次搜寻该命令的可执行文件，一旦找到，即正常执行；反之，则提示无法找到该命令。\n如果在 PATH 包含的目录中，有多个目录都包含某命令的可执行文件，那么会执行先搜索到的可执行文件。</p>\n<p>从执行结果中可以看到，<code v-pre>/bin</code> 目录已经包含在 PATH 环境变量中，因此在使用类似 <code v-pre>rm</code>、<code v-pre>rmdir</code>、<code v-pre>ls</code> 等命令时，即便直接使用其命令名，Linux 也可以找到该命令。</p>\n<p>为了印证以上观点，下面举个反例，如果我们将 <code v-pre>ls</code> 命令移动到 <code v-pre>/root</code> 目录下，由于 PATH 环境变量中没有包含此目录，所有当直接使用 <code v-pre>ls</code> 命令名执行时，Linux 将无法找到此命令的可执行文件，并提示 <code v-pre>No such file or directory</code>，示例命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mv /bin/ls /root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">bash: /bin/ls: No such file or directory</span></span></code></pre>\n</div><p>此时，如果仍想使用 <code v-pre>ls</code> 命令，有 2 种方法，一种是直接将 <code v-pre>/root</code> 添加到 PATH 环境变量中，例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/usr/local/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin:/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Desktop    Downloads    Music    post-install     Public    Videos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Documents  ls           Pictures post-install.org Templates</span></span></code></pre>\n</div><p>注意，这种方式只是临时有效，一旦退出下次再登陆的时候，<code v-pre>$PATH</code> 就恢复成了默认值。</p>\n<p>另一种方法是以绝对路径的方式使用此命令，例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# /root/ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Desktop    Downloads    Music    post-install     Public    Videos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Documents  ls           Pictures post-install.org Templates</span></span></code></pre>\n</div><p>为了不影响系统的正常使用，强烈建议大家将移动后的 <code v-pre>ls</code> 文件还原，命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mv /root/ls /bin</span></span></code></pre>\n</div>","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/linux/command/path.md","filePathRelative":"linux/command/path.md","frontmatter":{"icon":"shell","date":"2019-11-20T00:00:00.000Z","category":"Linux"},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"环境变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#环境变量\"><span>环境变量</span></a></h1>\n<h2 id=\"变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#变量\"><span>变量</span></a></h2>\n<p>变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值。在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录 (HOME)、邮件存放位置 (MAIL)等。\n值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。</p>\n<p>我们可以使用 env 命令来查看到 Linux 系统中所有的环境变量，执行命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# env</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">ORBIT_SOCKETDIR=/tmp/orbit-root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">HOSTNAME=livecd.centos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">GIO_LAUNCHED_DESKTOP_FILE_PID=2065</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">TERM=xterm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">SHELL=/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">......</span></span></code></pre>\n</div><p>Linux 系统能够正常运行并且为用户提供服务，需要数百个环境变量来协同工作，但是，我们没有必要逐一学习每个变量。常见变量见下表:</p>\n<table>\n<thead>\n<tr>\n<th>环境变量名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HOME</td>\n<td>用户的主目录(也称家目录)</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>用户使用的 Shell 解释器名称</td>\n</tr>\n<tr>\n<td>PATH</td>\n<td>定义命令行解释器搜索用户执行命令的路径</td>\n</tr>\n<tr>\n<td>EDITOR</td>\n<td>用户默认的文本解释器</td>\n</tr>\n<tr>\n<td>RANDOM</td>\n<td>生成一个随机数字</td>\n</tr>\n<tr>\n<td>LANG</td>\n<td>系统语言、语系名称</td>\n</tr>\n<tr>\n<td>HISTSIZE</td>\n<td>输出的历史命令记录条数</td>\n</tr>\n<tr>\n<td>HISTFILESIZE</td>\n<td>保存的历史命令记录条数</td>\n</tr>\n<tr>\n<td>PS1</td>\n<td>Bash 解释器的提示符</td>\n</tr>\n<tr>\n<td>MAIL</td>\n<td>邮件保存路径</td>\n</tr>\n</tbody>\n</table>\n<p>Linux 作为一个多用户多任务的操作系统，能够为每个用户提供独立的、合适的工作运行环境，因此，一个相同的环境变量会因为用户身份的不同而具有不同的值。</p>\n<p>例如，使用下述命令来查看 <code v-pre>HOME</code> 变量在不同用户身份下都有哪些值:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# su - user1  &#x3C;--切换到 user1 用户身份</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/user1</span></span></code></pre>\n</div><p>这里的 <code v-pre>su</code> 命令可以临时切换用户身份，此命令的具体用法会在后续章节做详细介绍。</p>\n<p>其实，环境变量是由固定的变量名与用户或系统设置的变量值两部分组成的，我们完全可以自行创建环境变量来满足工作需求。例如，设置一个名称为 <code v-pre>WORKDIR</code> 的环境变量，方便用户更轻松地进入一个层次较深的目录，执行命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mkdir /home/work1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">WORKDIR</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/home/work1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/work1</span></span></code></pre>\n</div><p>但是，这样的环境变量不具有全局性，作用范围也有限，默认情况下不能被其他用户使用。如果工作需要，可以使用 <code v-pre>export</code> 命令将其提升为全局环境变量，这样其他用户就可以使用它了:</p>\n<div class=\"language-shellsession line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# su user1  &#x3C;-- 切换到 user1，发现无法使用 WORKDIR 自定义变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ exit &#x3C;--退出user1身份</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# su user1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost work1]$ pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/work1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"path\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#path\"><span>path</span></a></h2>\n<p>在讲解 PATH 环境变量之前，首先介绍一下 <code v-pre>which</code> 命令，它用于查找某个命令所在的绝对路径。例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which rm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/bin/rm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which rmdir</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/bin/rmdir</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">alias ls='ls --color=auto'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        /bin/ls</span></span></code></pre>\n</div><p>注意，<code v-pre>ls</code> 是一个相对特殊的命令，它使用 alias 命令做了别名，也就是说，我们常用的 <code v-pre>ls</code> 实际上执行的是 <code v-pre>ls --color=auto</code>。</p>\n<p>通过使用 <code v-pre>which</code> 命令，可以查找各个外部命令(和 Shell 内置命令相对)所在的绝对路径。学到这里，读者是否有这样一个疑问，为什么前面在使用 <code v-pre>rm</code>、<code v-pre>rmdir</code>、<code v-pre>ls</code> 等命令时，无论当前位于哪个目录，都可以直接使用，而无需指明命令的执行文件所在的位置 (绝对路径) 呢? 其实，这是 PATH 环境变量在起作用。</p>\n<p>首先，执行如下命令:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin</span></span></code></pre>\n</div><p>这里的 <code v-pre>echo</code> 命令用来输出 PATH 环境变量的值(这里的 <code v-pre>$</code> 是 PATH 的前缀符号)，PATH 环境变量的内容是由一堆目录组成的，各目录之间用冒号 <code v-pre>:</code> 隔开。当执行某个命令时，Linux 会依照 PATH 中包含的目录依次搜寻该命令的可执行文件，一旦找到，即正常执行；反之，则提示无法找到该命令。\n如果在 PATH 包含的目录中，有多个目录都包含某命令的可执行文件，那么会执行先搜索到的可执行文件。</p>\n<p>从执行结果中可以看到，<code v-pre>/bin</code> 目录已经包含在 PATH 环境变量中，因此在使用类似 <code v-pre>rm</code>、<code v-pre>rmdir</code>、<code v-pre>ls</code> 等命令时，即便直接使用其命令名，Linux 也可以找到该命令。</p>\n<p>为了印证以上观点，下面举个反例，如果我们将 <code v-pre>ls</code> 命令移动到 <code v-pre>/root</code> 目录下，由于 PATH 环境变量中没有包含此目录，所有当直接使用 <code v-pre>ls</code> 命令名执行时，Linux 将无法找到此命令的可执行文件，并提示 <code v-pre>No such file or directory</code>，示例命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mv /bin/ls /root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">bash: /bin/ls: No such file or directory</span></span></code></pre>\n</div><p>此时，如果仍想使用 <code v-pre>ls</code> 命令，有 2 种方法，一种是直接将 <code v-pre>/root</code> 添加到 PATH 环境变量中，例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/usr/local/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin:/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Desktop    Downloads    Music    post-install     Public    Videos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Documents  ls           Pictures post-install.org Templates</span></span></code></pre>\n</div><p>注意，这种方式只是临时有效，一旦退出下次再登陆的时候，<code v-pre>$PATH</code> 就恢复成了默认值。</p>\n<p>另一种方法是以绝对路径的方式使用此命令，例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# /root/ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Desktop    Downloads    Music    post-install     Public    Videos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Documents  ls           Pictures post-install.org Templates</span></span></code></pre>\n</div><p>为了不影响系统的正常使用，强烈建议大家将移动后的 <code v-pre>ls</code> 文件还原，命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mv /root/ls /bin</span></span></code></pre>\n</div></template>","contentStripped":"<h1 id=\"环境变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#环境变量\"><span>环境变量</span></a></h1>\n<h2 id=\"变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#变量\"><span>变量</span></a></h2>\n<p>变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值。在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录 (HOME)、邮件存放位置 (MAIL)等。\n值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。</p>\n<p>我们可以使用 env 命令来查看到 Linux 系统中所有的环境变量，执行命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# env</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">ORBIT_SOCKETDIR=/tmp/orbit-root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">HOSTNAME=livecd.centos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">GIO_LAUNCHED_DESKTOP_FILE_PID=2065</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">TERM=xterm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">SHELL=/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">......</span></span></code></pre>\n</div><p>Linux 系统能够正常运行并且为用户提供服务，需要数百个环境变量来协同工作，但是，我们没有必要逐一学习每个变量。常见变量见下表:</p>\n<table>\n<thead>\n<tr>\n<th>环境变量名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HOME</td>\n<td>用户的主目录(也称家目录)</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>用户使用的 Shell 解释器名称</td>\n</tr>\n<tr>\n<td>PATH</td>\n<td>定义命令行解释器搜索用户执行命令的路径</td>\n</tr>\n<tr>\n<td>EDITOR</td>\n<td>用户默认的文本解释器</td>\n</tr>\n<tr>\n<td>RANDOM</td>\n<td>生成一个随机数字</td>\n</tr>\n<tr>\n<td>LANG</td>\n<td>系统语言、语系名称</td>\n</tr>\n<tr>\n<td>HISTSIZE</td>\n<td>输出的历史命令记录条数</td>\n</tr>\n<tr>\n<td>HISTFILESIZE</td>\n<td>保存的历史命令记录条数</td>\n</tr>\n<tr>\n<td>PS1</td>\n<td>Bash 解释器的提示符</td>\n</tr>\n<tr>\n<td>MAIL</td>\n<td>邮件保存路径</td>\n</tr>\n</tbody>\n</table>\n<p>Linux 作为一个多用户多任务的操作系统，能够为每个用户提供独立的、合适的工作运行环境，因此，一个相同的环境变量会因为用户身份的不同而具有不同的值。</p>\n<p>例如，使用下述命令来查看 <code v-pre>HOME</code> 变量在不同用户身份下都有哪些值:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# su - user1  &#x3C;--切换到 user1 用户身份</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$HOME</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/user1</span></span></code></pre>\n</div><p>这里的 <code v-pre>su</code> 命令可以临时切换用户身份，此命令的具体用法会在后续章节做详细介绍。</p>\n<p>其实，环境变量是由固定的变量名与用户或系统设置的变量值两部分组成的，我们完全可以自行创建环境变量来满足工作需求。例如，设置一个名称为 <code v-pre>WORKDIR</code> 的环境变量，方便用户更轻松地进入一个层次较深的目录，执行命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mkdir /home/work1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">WORKDIR</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">/home/work1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/work1</span></span></code></pre>\n</div><p>但是，这样的环境变量不具有全局性，作用范围也有限，默认情况下不能被其他用户使用。如果工作需要，可以使用 <code v-pre>export</code> 命令将其提升为全局环境变量，这样其他用户就可以使用它了:</p>\n<div class=\"language-shellsession line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# su user1  &#x3C;-- 切换到 user1，发现无法使用 WORKDIR 自定义变量</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ exit &#x3C;--退出user1身份</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# </span><span style=\"--shiki-light:#A626A4;--shiki-dark:#C678DD\">export</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost work1]# su user1</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost ~]$ cd </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$WORKDIR</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[user1@localhost work1]$ pwd</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/home/work1</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><h2 id=\"path\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#path\"><span>path</span></a></h2>\n<p>在讲解 PATH 环境变量之前，首先介绍一下 <code v-pre>which</code> 命令，它用于查找某个命令所在的绝对路径。例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which rm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/bin/rm</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which rmdir</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/bin/rmdir</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# which ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">alias ls='ls --color=auto'</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">        /bin/ls</span></span></code></pre>\n</div><p>注意，<code v-pre>ls</code> 是一个相对特殊的命令，它使用 alias 命令做了别名，也就是说，我们常用的 <code v-pre>ls</code> 实际上执行的是 <code v-pre>ls --color=auto</code>。</p>\n<p>通过使用 <code v-pre>which</code> 命令，可以查找各个外部命令(和 Shell 内置命令相对)所在的绝对路径。学到这里，读者是否有这样一个疑问，为什么前面在使用 <code v-pre>rm</code>、<code v-pre>rmdir</code>、<code v-pre>ls</code> 等命令时，无论当前位于哪个目录，都可以直接使用，而无需指明命令的执行文件所在的位置 (绝对路径) 呢? 其实，这是 PATH 环境变量在起作用。</p>\n<p>首先，执行如下命令:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin</span></span></code></pre>\n</div><p>这里的 <code v-pre>echo</code> 命令用来输出 PATH 环境变量的值(这里的 <code v-pre>$</code> 是 PATH 的前缀符号)，PATH 环境变量的内容是由一堆目录组成的，各目录之间用冒号 <code v-pre>:</code> 隔开。当执行某个命令时，Linux 会依照 PATH 中包含的目录依次搜寻该命令的可执行文件，一旦找到，即正常执行；反之，则提示无法找到该命令。\n如果在 PATH 包含的目录中，有多个目录都包含某命令的可执行文件，那么会执行先搜索到的可执行文件。</p>\n<p>从执行结果中可以看到，<code v-pre>/bin</code> 目录已经包含在 PATH 环境变量中，因此在使用类似 <code v-pre>rm</code>、<code v-pre>rmdir</code>、<code v-pre>ls</code> 等命令时，即便直接使用其命令名，Linux 也可以找到该命令。</p>\n<p>为了印证以上观点，下面举个反例，如果我们将 <code v-pre>ls</code> 命令移动到 <code v-pre>/root</code> 目录下，由于 PATH 环境变量中没有包含此目录，所有当直接使用 <code v-pre>ls</code> 命令名执行时，Linux 将无法找到此命令的可执行文件，并提示 <code v-pre>No such file or directory</code>，示例命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mv /bin/ls /root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">bash: /bin/ls: No such file or directory</span></span></code></pre>\n</div><p>此时，如果仍想使用 <code v-pre>ls</code> 命令，有 2 种方法，一种是直接将 <code v-pre>/root</code> 添加到 PATH 环境变量中，例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">PATH</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">:/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# echo </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$PATH</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">/usr/local/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin:/root</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Desktop    Downloads    Music    post-install     Public    Videos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Documents  ls           Pictures post-install.org Templates</span></span></code></pre>\n</div><p>注意，这种方式只是临时有效，一旦退出下次再登陆的时候，<code v-pre>$PATH</code> 就恢复成了默认值。</p>\n<p>另一种方法是以绝对路径的方式使用此命令，例如:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# /root/ls</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Desktop    Downloads    Music    post-install     Public    Videos</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">Documents  ls           Pictures post-install.org Templates</span></span></code></pre>\n</div><p>为了不影响系统的正常使用，强烈建议大家将移动后的 <code v-pre>ls</code> 文件还原，命令如下:</p>\n<div class=\"language-shellsession\" data-highlighter=\"shiki\" data-ext=\"shellsession\" data-title=\"shellsession\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">[root@localhost ~]# mv /root/ls /bin</span></span></code></pre>\n</div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n# 环境变量\n\n## 变量\n\n变量是计算机系统用于保存可变值的数据类型，我们可以直接通过变量名称来提取到对应的变量值。在 Linux 系统中，环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录 (HOME)、邮件存放位置 (MAIL)等。\n值得一提的是，Linux 系统中环境变量的名称一般都是大写的，这是一种约定俗成的规范。\n\n我们可以使用 env 命令来查看到 Linux 系统中所有的环境变量，执行命令如下:\n\n```shellsession\n[root@localhost ~]# env\nORBIT_SOCKETDIR=/tmp/orbit-root\nHOSTNAME=livecd.centos\nGIO_LAUNCHED_DESKTOP_FILE_PID=2065\nTERM=xterm\nSHELL=/bin/bash\n......\n```\n\nLinux 系统能够正常运行并且为用户提供服务，需要数百个环境变量来协同工作，但是，我们没有必要逐一学习每个变量。常见变量见下表:\n\n| 环境变量名称 | 作用                                   |\n| ------------ | -------------------------------------- |\n| HOME         | 用户的主目录(也称家目录)               |\n| SHELL        | 用户使用的 Shell 解释器名称            |\n| PATH         | 定义命令行解释器搜索用户执行命令的路径 |\n| EDITOR       | 用户默认的文本解释器                   |\n| RANDOM       | 生成一个随机数字                       |\n| LANG         | 系统语言、语系名称                     |\n| HISTSIZE     | 输出的历史命令记录条数                 |\n| HISTFILESIZE | 保存的历史命令记录条数                 |\n| PS1          | Bash 解释器的提示符                    |\n| MAIL         | 邮件保存路径                           |\n\nLinux 作为一个多用户多任务的操作系统，能够为每个用户提供独立的、合适的工作运行环境，因此，一个相同的环境变量会因为用户身份的不同而具有不同的值。\n\n例如，使用下述命令来查看 `HOME` 变量在不同用户身份下都有哪些值:\n\n```shellsession\n[root@localhost ~]# echo $HOME\n/root\n[root@localhost ~]# su - user1  <--切换到 user1 用户身份\n[user1@localhost ~]$ echo $HOME\n/home/user1\n```\n\n这里的 `su` 命令可以临时切换用户身份，此命令的具体用法会在后续章节做详细介绍。\n\n其实，环境变量是由固定的变量名与用户或系统设置的变量值两部分组成的，我们完全可以自行创建环境变量来满足工作需求。例如，设置一个名称为 `WORKDIR` 的环境变量，方便用户更轻松地进入一个层次较深的目录，执行命令如下:\n\n```shellsession\n[root@localhost ~]# mkdir /home/work1\n[root@localhost ~]# WORKDIR=/home/work1\n[root@localhost ~]# cd $WORKDIR\n[root@localhost work1]# pwd\n/home/work1\n```\n\n但是，这样的环境变量不具有全局性，作用范围也有限，默认情况下不能被其他用户使用。如果工作需要，可以使用 `export` 命令将其提升为全局环境变量，这样其他用户就可以使用它了:\n\n```shellsession\n[root@localhost work1]# su user1  <-- 切换到 user1，发现无法使用 WORKDIR 自定义变量\n[user1@localhost ~]$ cd $WORKDIR\n[user1@localhost ~]$ echo $WORKDIR\n\n[user1@localhost ~]$ exit <--退出user1身份\n[root@localhost work1]# export WORKDIR\n[root@localhost work1]# su user1\n[user1@localhost ~]$ cd $WORKDIR\n[user1@localhost work1]$ pwd\n/home/work1\n```\n\n## path\n\n在讲解 PATH 环境变量之前，首先介绍一下 `which` 命令，它用于查找某个命令所在的绝对路径。例如:\n\n```shellsession\n[root@localhost ~]# which rm\n/bin/rm\n[root@localhost ~]# which rmdir\n/bin/rmdir\n[root@localhost ~]# which ls\nalias ls='ls --color=auto'\n        /bin/ls\n```\n\n注意，`ls` 是一个相对特殊的命令，它使用 alias 命令做了别名，也就是说，我们常用的 `ls` 实际上执行的是 `ls --color=auto`。\n\n通过使用 `which` 命令，可以查找各个外部命令(和 Shell 内置命令相对)所在的绝对路径。学到这里，读者是否有这样一个疑问，为什么前面在使用 `rm`、`rmdir`、`ls` 等命令时，无论当前位于哪个目录，都可以直接使用，而无需指明命令的执行文件所在的位置 (绝对路径) 呢? 其实，这是 PATH 环境变量在起作用。\n\n首先，执行如下命令:\n\n```shellsession\n[root@localhost ~]# echo $PATH\n/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin\n```\n\n这里的 `echo` 命令用来输出 PATH 环境变量的值(这里的 `$` 是 PATH 的前缀符号)，PATH 环境变量的内容是由一堆目录组成的，各目录之间用冒号 `:` 隔开。当执行某个命令时，Linux 会依照 PATH 中包含的目录依次搜寻该命令的可执行文件，一旦找到，即正常执行；反之，则提示无法找到该命令。\n如果在 PATH 包含的目录中，有多个目录都包含某命令的可执行文件，那么会执行先搜索到的可执行文件。\n\n从执行结果中可以看到，`/bin` 目录已经包含在 PATH 环境变量中，因此在使用类似 `rm`、`rmdir`、`ls` 等命令时，即便直接使用其命令名，Linux 也可以找到该命令。\n\n为了印证以上观点，下面举个反例，如果我们将 `ls` 命令移动到 `/root` 目录下，由于 PATH 环境变量中没有包含此目录，所有当直接使用 `ls` 命令名执行时，Linux 将无法找到此命令的可执行文件，并提示 `No such file or directory`，示例命令如下:\n\n```shellsession\n[root@localhost ~]# mv /bin/ls /root\n[root@localhost ~]# ls\nbash: /bin/ls: No such file or directory\n```\n\n此时，如果仍想使用 `ls` 命令，有 2 种方法，一种是直接将 `/root` 添加到 PATH 环境变量中，例如:\n\n```shellsession\n[root@localhost ~]# PATH=$PATH:/root\n[root@localhost ~]# echo $PATH\n/usr/local/sbin:/usr/sbin:/usr/local/bin:/usr/bin:/bin:/root/bin:/root\n[root@localhost ~]# ls\nDesktop    Downloads    Music    post-install     Public    Videos\nDocuments  ls           Pictures post-install.org Templates\n```\n\n注意，这种方式只是临时有效，一旦退出下次再登陆的时候，`$PATH` 就恢复成了默认值。\n\n另一种方法是以绝对路径的方式使用此命令，例如:\n\n```shellsession\n[root@localhost ~]# /root/ls\nDesktop    Downloads    Music    post-install     Public    Videos\nDocuments  ls           Pictures post-install.org Templates\n```\n\n为了不影响系统的正常使用，强烈建议大家将移动后的 `ls` 文件还原，命令如下:\n\n```shellsession\n[root@localhost ~]# mv /root/ls /bin\n```\n","excerpt":"","title":"环境变量","headers":[{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[]},{"level":2,"title":"path","slug":"path","link":"#path","children":[]}]}}
