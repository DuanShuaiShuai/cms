{"content":"<h1 id=\"异步任务\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步任务\"><span>异步任务</span></a></h1>\n<p>Bash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办?</p>\n<p>bash 有一个内置命令，能帮助管理诸如此类的异步执行的任务。wait 命令导致一个父脚本暂停运行，直到一个 特定的进程(例如，子脚本)运行结束。</p>\n<p>首先我们将演示一下 wait 命令的用法。为此，我们需要两个脚本，一个父脚本:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># async-parent : Asynchronous execution demo (parent)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: starting...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: launching child script...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">async-child</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x26;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pid</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: child (PID= </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$pid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">) launched.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: continuing...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: pausing to wait for child to finish...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">wait</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $pid</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: child is finished. Continuing...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: parent is done. Exiting.\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>和一个子脚本:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># async-child : Asynchronous execution demo (child)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Child: child is running...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Child: child is done. Exiting.\"</span></span></code></pre>\n</div><p>在这个例子中，我们看到该子脚本是非常简单的。真正的操作通过父脚本完成。在父脚本中，子脚本被启动， 并被放置到后台运行。子脚本的进程 ID 记录在 pid 变量中，这个变量的值是 $! shell 参数的值，它总是 包含放到后台执行的最后一个任务的进程 ID 号。</p>\n<p>父脚本继续，然后执行一个以子进程 PID 为参数的 wait 命令。这就导致父脚本暂停运行，直到子脚本退出， 意味着父脚本结束。</p>\n<p>当执行后，父子脚本产生如下输出:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> async-parent</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> starting...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> launching</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (PID= </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">6741</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) launched.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> continuing...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Child:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> running...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pausing</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wait</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> for</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> finish...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Child:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Exiting.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> finished.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Continuing...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> parent</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Exiting.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"/Users/carson/Desktop/Mister-Hope.github.io-main/src/linux/bash/archives/async.md","filePathRelative":"linux/bash/archives/async.md","frontmatter":{"date":"2020-06-04T00:00:00.000Z"},"sfcBlocks":{"template":{"type":"template","content":"<template><h1 id=\"异步任务\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步任务\"><span>异步任务</span></a></h1>\n<p>Bash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办?</p>\n<p>bash 有一个内置命令，能帮助管理诸如此类的异步执行的任务。wait 命令导致一个父脚本暂停运行，直到一个 特定的进程(例如，子脚本)运行结束。</p>\n<p>首先我们将演示一下 wait 命令的用法。为此，我们需要两个脚本，一个父脚本:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># async-parent : Asynchronous execution demo (parent)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: starting...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: launching child script...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">async-child</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x26;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pid</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: child (PID= </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$pid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">) launched.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: continuing...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: pausing to wait for child to finish...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">wait</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $pid</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: child is finished. Continuing...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: parent is done. Exiting.\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>和一个子脚本:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># async-child : Asynchronous execution demo (child)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Child: child is running...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Child: child is done. Exiting.\"</span></span></code></pre>\n</div><p>在这个例子中，我们看到该子脚本是非常简单的。真正的操作通过父脚本完成。在父脚本中，子脚本被启动， 并被放置到后台运行。子脚本的进程 ID 记录在 pid 变量中，这个变量的值是 $! shell 参数的值，它总是 包含放到后台执行的最后一个任务的进程 ID 号。</p>\n<p>父脚本继续，然后执行一个以子进程 PID 为参数的 wait 命令。这就导致父脚本暂停运行，直到子脚本退出， 意味着父脚本结束。</p>\n<p>当执行后，父子脚本产生如下输出:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> async-parent</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> starting...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> launching</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (PID= </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">6741</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) launched.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> continuing...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Child:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> running...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pausing</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wait</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> for</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> finish...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Child:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Exiting.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> finished.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Continuing...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> parent</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Exiting.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<h1 id=\"异步任务\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异步任务\"><span>异步任务</span></a></h1>\n<p>Bash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办?</p>\n<p>bash 有一个内置命令，能帮助管理诸如此类的异步执行的任务。wait 命令导致一个父脚本暂停运行，直到一个 特定的进程(例如，子脚本)运行结束。</p>\n<p>首先我们将演示一下 wait 命令的用法。为此，我们需要两个脚本，一个父脚本:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># async-parent : Asynchronous execution demo (parent)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: starting...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: launching child script...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">async-child</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> &#x26;</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">pid</span><span style=\"--shiki-light:#383A42;--shiki-dark:#56B6C2\">=</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E5C07B\">$!</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: child (PID= </span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\">$pid</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\">) launched.\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: continuing...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: pausing to wait for child to finish...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">wait</span><span style=\"--shiki-light:#E45649;--shiki-dark:#E06C75\"> $pid</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: child is finished. Continuing...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Parent: parent is done. Exiting.\"</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>和一个子脚本:</p>\n<div class=\"language-bash\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\">#!/bin/bash</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\"># async-child : Asynchronous execution demo (child)</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Child: child is running...\"</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">sleep</span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\"> 5</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\">echo</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> \"Child: child is done. Exiting.\"</span></span></code></pre>\n</div><p>在这个例子中，我们看到该子脚本是非常简单的。真正的操作通过父脚本完成。在父脚本中，子脚本被启动， 并被放置到后台运行。子脚本的进程 ID 记录在 pid 变量中，这个变量的值是 $! shell 参数的值，它总是 包含放到后台执行的最后一个任务的进程 ID 号。</p>\n<p>父脚本继续，然后执行一个以子进程 PID 为参数的 wait 命令。这就导致父脚本暂停运行，直到子脚本退出， 意味着父脚本结束。</p>\n<p>当执行后，父子脚本产生如下输出:</p>\n<div class=\"language-bash line-numbers-mode\" data-highlighter=\"shiki\" data-ext=\"bash\" data-title=\"bash\" style=\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\"><pre v-pre class=\"shiki shiki-themes one-light one-dark-pro vp-code\"><code><span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">$</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> async-parent</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> starting...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> launching</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> script...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\"> (PID= </span><span style=\"--shiki-light:#986801;--shiki-dark:#D19A66\">6741</span><span style=\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\">) launched.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> continuing...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Child:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> running...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> pausing</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> wait</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> for</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> to</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> finish...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Child:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Exiting.</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> child</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> finished.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Continuing...</span></span>\n<span class=\"line\"><span style=\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\">Parent:</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> parent</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> is</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> done.</span><span style=\"--shiki-light:#50A14F;--shiki-dark:#98C379\"> Exiting.</span></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"\n# 异步任务\n\nBash 脚本有时候需要同时执行多个任务。通常这涉及到启动一个脚本，依次，启动一个或多个子脚本来执行额外的任务，而父脚本继续运行。然而，当一系列脚本 以这种方式运行时，要保持父子脚本之间协调工作，会有一些问题。也就是说，若父脚本或子脚本依赖于另一方，并且 一个脚本必须等待另一个脚本结束任务之后，才能完成它自己的任务，这应该怎么办?\n\nbash 有一个内置命令，能帮助管理诸如此类的异步执行的任务。wait 命令导致一个父脚本暂停运行，直到一个 特定的进程(例如，子脚本)运行结束。\n\n首先我们将演示一下 wait 命令的用法。为此，我们需要两个脚本，一个父脚本:\n\n```bash\n#!/bin/bash\n# async-parent : Asynchronous execution demo (parent)\necho \"Parent: starting...\"\necho \"Parent: launching child script...\"\nasync-child &\npid=$!\necho \"Parent: child (PID= $pid) launched.\"\necho \"Parent: continuing...\"\nsleep 2\necho \"Parent: pausing to wait for child to finish...\"\nwait $pid\necho \"Parent: child is finished. Continuing...\"\necho \"Parent: parent is done. Exiting.\"\n```\n\n和一个子脚本:\n\n```bash\n#!/bin/bash\n# async-child : Asynchronous execution demo (child)\necho \"Child: child is running...\"\nsleep 5\necho \"Child: child is done. Exiting.\"\n```\n\n在这个例子中，我们看到该子脚本是非常简单的。真正的操作通过父脚本完成。在父脚本中，子脚本被启动， 并被放置到后台运行。子脚本的进程 ID 记录在 pid 变量中，这个变量的值是 \\$! shell 参数的值，它总是 包含放到后台执行的最后一个任务的进程 ID 号。\n\n父脚本继续，然后执行一个以子进程 PID 为参数的 wait 命令。这就导致父脚本暂停运行，直到子脚本退出， 意味着父脚本结束。\n\n当执行后，父子脚本产生如下输出:\n\n```bash\n$ async-parent\nParent: starting...\nParent: launching child script...\nParent: child (PID= 6741) launched.\nParent: continuing...\nChild: child is running...\nParent: pausing to wait for child to finish...\nChild: child is done. Exiting.\nParent: child is finished. Continuing...\nParent: parent is done. Exiting.\n```\n","excerpt":"","title":"异步任务","headers":[]}}
